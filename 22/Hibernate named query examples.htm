<!DOCTYPE html><html lang="en"><title>Hibernate named query examples</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Hibernate Query examples (HQL)' href='http://www.mkyong.com/hibernate/hibernate-query-examples-hql/' /><link rel='next' title='Hibernate native SQL queries examples' href='http://www.mkyong.com/hibernate/hibernate-native-sql-queries-examples/' /><link rel='shortlink' href='http://www.mkyong.com/?p=3354' /><meta name="keywords" content="hibernate" /><link rel="canonical" href="http://www.mkyong.com/hibernate/hibernate-named-query-examples/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-3354"><header><h1> Hibernate named query examples</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-02-12T14:17:15+00:00">February 12, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : February 8, 2011 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>Often times, developer like to put HQL string literals scatter all over the Java code,  this method is hard to maintaine and look ugly. Fortunately, Hibernate come out a technique called &#8220;<strong>names queries</strong>&#8221; , it lets developer to put all HQL into the XML mapping file or via annotation.</p><h3>How to declare named query</h3><p>The named query is supported in both HQL or native SQL. see examples&#8230;</p><h4>1. XML mapping file</h4><p>HQL in mapping file</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #808080; font-style: italic;">&lt;!-- stock.hbm.xml --&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.common.Stock&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock&quot;</span> ...<span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;identity&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockCode&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_CODE&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;10&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        ...
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;query</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;findStockByStockCode&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #339933;">&lt;![CDATA[from Stock s where s.stockCode = :stockCode]]&gt;</span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/query<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Native SQL in mapping file</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #808080; font-style: italic;">&lt;!-- stock.hbm.xml --&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.common.Stock&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock&quot;</span> ...<span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;identity&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockCode&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_CODE&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;10&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        ...
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;sql-query</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;findStockByStockCodeNativeSQL&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;return</span> <span style="color: #000066;">alias</span>=<span style="color: #ff0000;">&quot;stock&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.common.Stock&quot;</span><span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #339933;">&lt;![CDATA[select * from stock s where s.stock_code = :stockCode]]&gt;</span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/sql-query<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>You can place a named query inside &#8216;<strong>hibernate-mapping</strong>&#8216; element, but do not put before the &#8216;<strong>class</strong>&#8216; element, Hibernate will prompt invalid mapping file, all your named queries have to put after the &#8216;<strong>class</strong>&#8216; element.</p><div class="note"> <strong>Note</strong><br /> Regarding the CDATA , it&#8217;s always good practice to wrap your query text with CDATA, so that the XML parser will not prompt error for some special XML characters like &#8216;&gt;&#8217; , &lt;&#8217; and etc.</div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. Annotation</h4><p>HQL in annotation</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@NamedQueries<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#123;</span>
	@NamedQuery<span style="color: #009900;">&#40;</span>
	name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;findStockByStockCode&quot;</span>,
	query <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;from Stock s where s.stockCode = :stockCode&quot;</span>
	<span style="color: #009900;">&#41;</span>
<span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyong&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
...</pre></div></div><p>Native SQL in annotation</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@NamedNativeQueries<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#123;</span>
	@NamedNativeQuery<span style="color: #009900;">&#40;</span>
	name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;findStockByStockCodeNativeSQL&quot;</span>,
	query <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;select * from stock s where s.stock_code = :stockCode&quot;</span>,
        resultClass <span style="color: #339933;">=</span> Stock.<span style="color: #000000; font-weight: bold;">class</span>
	<span style="color: #009900;">&#41;</span>
<span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyong&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
...</pre></div></div><p>In native SQL, you have to declare the &#8216;<strong>resultClass</strong>&#8216; to let Hibernate know what is the return type, failed to do it will caused the exception &#8220;<strong>org.hibernate.cfg.NotYetImplementedException: Pure native scalar queries are not yet supported</strong>&#8220;.</p><h3>Call a named query</h3><p>In Hibernate, you can call the named query via <strong>getNamedQuery</strong> method.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">Query query <span style="color: #339933;">=</span> session.<span style="color: #006633;">getNamedQuery</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;findStockByStockCode&quot;</span><span style="color: #009900;">&#41;</span>
.<span style="color: #006633;">setString</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;stockCode&quot;</span>, <span style="color: #0000ff;">&quot;7277&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">Query query <span style="color: #339933;">=</span> session.<span style="color: #006633;">getNamedQuery</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;findStockByStockCodeNativeSQL&quot;</span><span style="color: #009900;">&#41;</span>
.<span style="color: #006633;">setString</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;stockCode&quot;</span>, <span style="color: #0000ff;">&quot;7277&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><h4>Conclusion</h4><p>Named queries are global access, which means the name of a query have to be unique in XML mapping files or annotations. In real environment, it&#8217;s always good practice to isolate all the named queries into their own file. In addition, named queries stored in the Hibernate mapping files or annotation are more easier to maintain than queries scattered through the Java code.</p><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/" title="Spring Security + Hibernate XML Example">Spring Security + Hibernate XML Example</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-org-hibernate-service-jta-platform-spi-jtaplatform/" title="java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform">java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-component-mapping-example/" title="Hibernate component mapping example">Hibernate component mapping example</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/" title="Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) ">Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) </a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/" title="Hibernate – Many-to-Many example (Annotation)">Hibernate – Many-to-Many example (Annotation)</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/jax-rs-tutorial/' title='JAX-RS Tutorials'><div class='images img-border img-jaxrs'></div></a></li><li><a href='/tutorials/java-mongodb-tutorials/' title='Java MongoDB Tutorials'><div class='images img-border img-mongodb'></div></a></li><li><a href='/tutorials/java-json/' title='Java JSON Tutorials'><div class='images img-border img-json'></div></a></li><li><a href='/tutorials/struts-2-tutorials/' title='Struts 2.x Tutorials'><div class='images img-border img-struts2'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-138807"><div id="dsq-comment-header-138807" class="dsq-comment-header"> <cite id="dsq-cite-138807"> <span id="dsq-author-user-138807">ch</span> </cite></div><div id="dsq-comment-body-138807" class="dsq-comment-body"><div id="dsq-comment-message-138807" class="dsq-comment-message"><p>Do you know if there are known issues with Hibernate 4.2.3 to support named queries?<br /> Here is a brief summary of issue i am facing<br /> - I want to upgrade Hibernate 4.1.3 to 4.2.3.<br /> - I am using ojdbc6-11.2.0.3.0.jar<br /> - org.hibernate.Query list() [Named query execution to return ref cursor]<br /> - This method works fine with old version of hibernate and gives following error with 4.2.3<br /> [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] SQL Error: 17166, SQLState: 99999<br /> [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] Cannot perform fetch on a PLSQL statement: next</p><p>Appreciate if you or anyone in this forum can help in this regard.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138158"><div id="dsq-comment-header-138158" class="dsq-comment-header"> <cite id="dsq-cite-138158"> http://feraldeveloper.blogspot.com/2013/09/storing-jpql-queries-separately-from.html <span id="dsq-author-user-138158">Nikolay Nikolov</span> </cite></div><div id="dsq-comment-body-138158" class="dsq-comment-body"><div id="dsq-comment-message-138158" class="dsq-comment-message"><p>Thank you &#8211; very informative post. Using some of the advice in this post I am providing an alternative way to define the named queries (namely, separate from the code of the JPA2 entities) &#8211; just click on the link contained with my name to see the explanation.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-137857"><div id="dsq-comment-header-137857" class="dsq-comment-header"> <cite id="dsq-cite-137857"> http://javadomain.in <span id="dsq-author-user-137857">Diva</span> </cite></div><div id="dsq-comment-body-137857" class="dsq-comment-body"><div id="dsq-comment-message-137857" class="dsq-comment-message"><p>you can find some more details in the below link,&#8221;http://javadomain.in/hibernate-select-annotation-example/&#8221;</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-136699"><div id="dsq-comment-header-136699" class="dsq-comment-header"> <cite id="dsq-cite-136699"> <span id="dsq-author-user-136699">E</span> </cite></div><div id="dsq-comment-body-136699" class="dsq-comment-body"><div id="dsq-comment-message-136699" class="dsq-comment-message"><p>Hi mkyong,</p><p>I have read many of your articles and have to say they are some of the better ones out there re Spring, Hibernate and Java &#8211; well done</p><p>Was hoping I could ask another question here while I&#8217;m at it which no one seems to be able to answer for me..</p><p>I have a server side process that uses HQL to do an insert in one transaction. After this transaction (outside @Transaction) it then does a native sql read (for various reasons). The SQL native read is still done through the hibernate architecture.</p><p>Im noticing that sometimes the native read is not finding what it is supposed to and wondering if this is because the transaction has not flushed yet &#8211; does it even need to flush ? I thought that the read should always work no matter what as long as it was in or after the transaction .</p><p>Or maybe the read must be in HQL to be sure ?</p><p>hope you can help</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-132392"><div id="dsq-comment-header-132392" class="dsq-comment-header"> <cite id="dsq-cite-132392"> <span id="dsq-author-user-132392">nelson</span> </cite></div><div id="dsq-comment-body-132392" class="dsq-comment-body"><div id="dsq-comment-message-132392" class="dsq-comment-message"><p>what file i have to modify if i use JPA mapping?</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-132178"><div id="dsq-comment-header-132178" class="dsq-comment-header"> <cite id="dsq-cite-132178"> <span id="dsq-author-user-132178">shiva</span> </cite></div><div id="dsq-comment-body-132178" class="dsq-comment-body"><div id="dsq-comment-message-132178" class="dsq-comment-message"><p>This is a really helpful article. Well done sir! Thank you!</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://premaseem.wordpress.com/2013/03/11/hibernate-named-query/' rel='external nofollow' class='url'>Hibernate : Named Query | PremAseem.com</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-123707"><div id="dsq-comment-header-123707" class="dsq-comment-header"> <cite id="dsq-cite-123707"> <span id="dsq-author-user-123707">Mik</span> </cite></div><div id="dsq-comment-body-123707" class="dsq-comment-body"><div id="dsq-comment-message-123707" class="dsq-comment-message"><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">//AlumnoImportacionInf...</span>
@NamedNativeQueries<span style="color: #009900;">&#40;</span>value <span style="color: #339933;">=</span> <span style="color: #009900;">&#123;</span> @NamedNativeQuery<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>sp_GetAlumnoForLoad<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>, query <span style="color: #339933;">=</span> <span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>EXEC dbo.<span style="color: #006633;">sp_getAlumnoForLoad</span> @kclave <span style="color: #339933;">=</span> <span style="color: #339933;">:</span>kclave<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>, resultClass <span style="color: #339933;">=</span> AlumnoImportacionInformacionPersonal.<span style="color: #000000; font-weight: bold;">class</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>AlumnoImportacionInformacionPersonal<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> AlumnoImportacionInformacionPersonal <span style="color: #000000; font-weight: bold;">implements</span> <span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span><span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #666666; font-style: italic;">//AlumnoImp..Dao</span>
List<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>AlumnoImportacionInformacionPersonal<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span> result<span style="color: #339933;">;</span>
Query query <span style="color: #339933;">=</span> getSession<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">getNamedQuery</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>sp_GetAlumnoForLoad<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
query.<span style="color: #006633;">setParameter</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>kclave<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>, clave<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
result <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>List<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>AlumnoImportacionInformacionPersonal<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>query.<span style="color: #006633;">list</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><p>//Struts error message<br /> Named query not known: sp_GetAlumnoForLoad<br /> org.hibernate.MappingException: Named query not known: sp_GetAlumnoForLoad</p><p>any idea??</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-125009"><div id="dsq-comment-header-125009" class="dsq-comment-header"> <cite id="dsq-cite-125009"> <span id="dsq-author-user-125009">Jai</span> </cite></div><div id="dsq-comment-body-125009" class="dsq-comment-body"><div id="dsq-comment-message-125009" class="dsq-comment-message"><p>You are putting your &#8220;sp_GetAlumnoForLoad&#8221; inside the class tag in XML.</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-122480"><div id="dsq-comment-header-122480" class="dsq-comment-header"> <cite id="dsq-cite-122480"> <span id="dsq-author-user-122480">vishal</span> </cite></div><div id="dsq-comment-body-122480" class="dsq-comment-body"><div id="dsq-comment-message-122480" class="dsq-comment-message"><p>Hello,</p><p>Do you have examples of how to call mysql stored procedures?</p><p>I was just trying to learn something i didn&#8217;t know. So i coded a small example to test.</p><p>&#8211;</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@javax.<span style="color: #006633;">persistence</span>.<span style="color: #003399;">Entity</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Top <span style="color: #000000; font-weight: bold;">implements</span> <span style="color: #003399;">Serializable</span><span style="color: #009900;">&#123;</span>	
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000000; font-weight: bold;">final</span> <span style="color: #000066; font-weight: bold;">long</span> serialVersionUID <span style="color: #339933;">=</span> 1L<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> id<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> name<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000066; font-weight: bold;">float</span> percent<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setId<span style="color: #009900;">&#40;</span><span style="color: #003399;">Integer</span> id<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">id</span> <span style="color: #339933;">=</span> id<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Id
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Integer</span> getId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> id<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setName<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> name<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span> <span style="color: #339933;">=</span> name<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getName<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> name<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setPercent<span style="color: #009900;">&#40;</span><span style="color: #000066; font-weight: bold;">float</span> percent<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">percent</span> <span style="color: #339933;">=</span> percent<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">float</span> getPercent<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> percent<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><p>&#8212;</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@<span style="color: #003399;">Entity</span>
@NamedNativeQuery<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>acid<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>, query <span style="color: #339933;">=</span> <span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>call call_log_by_user_enum_v1<span style="color: #009900;">&#40;</span><span style="color: #339933;">:</span>i_limit,<span style="color: #339933;">:</span>i_offset<span style="color: #009900;">&#41;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,  resultClass <span style="color: #339933;">=</span> TopStudent.<span style="color: #000000; font-weight: bold;">class</span> <span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> TopStudent <span style="color: #000000; font-weight: bold;">extends</span> Top <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000000; font-weight: bold;">final</span> <span style="color: #000066; font-weight: bold;">long</span> serialVersionUID <span style="color: #339933;">=</span> 1L<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> numberOfTests<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setNumberOfTests<span style="color: #009900;">&#40;</span><span style="color: #003399;">Integer</span> numberOfTests<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">numberOfTests</span> <span style="color: #339933;">=</span> numberOfTests<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Integer</span> getNumberOfTests<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> numberOfTests<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>&#8212; manager<br /> I call the stored procedure in my manager class (does not work)</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@Transactional
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> populateTop<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #009900;">&#123;</span>
		List<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>TopStudent<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span> topStudents1 <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ArrayList<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>TopStudent<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">try</span>
		<span style="color: #009900;">&#123;</span>
&nbsp;
&nbsp;
			Query q <span style="color: #339933;">=</span> entityManager.<span style="color: #006633;">createNativeQuery</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#123;</span>call call_log_by_user_enum_v1<span style="color: #009900;">&#40;</span><span style="color: #339933;">?</span>,<span style="color: #339933;">?</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#125;</span><span style="color: #339933;">;&amp;</span>quot<span style="color: #339933;">;</span>,TopStudent.<span style="color: #000000; font-weight: bold;">class</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
			List<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>TopStudent<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span> top <span style="color: #339933;">=</span> q.<span style="color: #006633;">setParameter</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">1</span>,<span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">setParameter</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">2</span>, <span style="color: #cc66cc;">2</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">getResultList</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
&nbsp;
			List<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>TopStudent<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span> top3<span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>List<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>TopStudent<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>entityManager.<span style="color: #006633;">createNamedQuery</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>acid<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">setParameter</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>i_limit<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,<span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">setParameter</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>i_offset<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>, <span style="color: #cc66cc;">3</span><span style="color: #009900;">&#41;</span>     	
			.<span style="color: #006633;">getResultList</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			TopStudent topStudent<span style="color: #339933;">;</span>
			<span style="color: #000000; font-weight: bold;">for</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">Iterator</span> iterator <span style="color: #339933;">=</span> top3.<span style="color: #006633;">iterator</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> iterator.<span style="color: #006633;">hasNext</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
				topStudent <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>TopStudent<span style="color: #009900;">&#41;</span> iterator.<span style="color: #006633;">next</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
				topStudents1.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>topStudent<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
				<span style="color: #009900;">&#125;</span>	        		        
&nbsp;
		<span style="color: #009900;">&#125;</span>
		<span style="color: #000000; font-weight: bold;">catch</span><span style="color: #009900;">&#40;</span><span style="color: #003399;">Exception</span> e<span style="color: #009900;">&#41;</span>
		<span style="color: #009900;">&#123;</span>
			log.<span style="color: #006633;">error</span><span style="color: #009900;">&#40;</span>e<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>		
	<span style="color: #009900;">&#125;</span></pre></div></div><p>The strange thing that i saw was that:<br /> 1. if i only have 1 call to the namednativequery, it works.<br /> 2. if i have more than 1 query in my method i get a transaction isolation error:<br /> 3. if i have multiple native queries instead of stored procedure, i got no error.<br /> [JDBCExceptionReporter] SQL Error: 1568, SQLState: 25001<br /> [JDBCExceptionReporter] Transaction isolation level can&#8217;t be changed while a transaction is in progress<br /> javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: could not execute query</p><p>Have you ever had this situation?</p><p>i use jboss, seam, jpa, mysql</p><p>regard,<br /> vishal</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-121959"><div id="dsq-comment-header-121959" class="dsq-comment-header"> <cite id="dsq-cite-121959"> <span id="dsq-author-user-121959">Srishti</span> </cite></div><div id="dsq-comment-body-121959" class="dsq-comment-body"><div id="dsq-comment-message-121959" class="dsq-comment-message"><p>Hi,<br /> hey can you give an example for writing insert and update namedQuery using annotation?<br /> Thanks,<br /> Srishti</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-85230"><div id="dsq-comment-header-85230" class="dsq-comment-header"> <cite id="dsq-cite-85230"> <span id="dsq-author-user-85230">Cristian Daniel Ortiz Cuellar</span> </cite></div><div id="dsq-comment-body-85230" class="dsq-comment-body"><div id="dsq-comment-message-85230" class="dsq-comment-message"><p>Hi MKYONG. &#8220;it’s always good practice to isolate all the named queries into their own file&#8221;. how can i set all the NamedQueries of my APP into a Single FILE. thanks a lot.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-84917"><div id="dsq-comment-header-84917" class="dsq-comment-header"> <cite id="dsq-cite-84917"> <span id="dsq-author-user-84917">Steven</span> </cite></div><div id="dsq-comment-body-84917" class="dsq-comment-body"><div id="dsq-comment-message-84917" class="dsq-comment-message"><p>Thanks a ton.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-84602"><div id="dsq-comment-header-84602" class="dsq-comment-header"> <cite id="dsq-cite-84602"> <span id="dsq-author-user-84602">Rick Robinson</span> </cite></div><div id="dsq-comment-body-84602" class="dsq-comment-body"><div id="dsq-comment-message-84602" class="dsq-comment-message"><p>This is a really helpful article. Well done sir! Thank you!</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-83832"><div id="dsq-comment-header-83832" class="dsq-comment-header"> <cite id="dsq-cite-83832"> <span id="dsq-author-user-83832">Pablo Gilvan</span> </cite></div><div id="dsq-comment-body-83832" class="dsq-comment-body"><div id="dsq-comment-message-83832" class="dsq-comment-message"><p>&#8220;In native SQL, you have to declare the ‘resultClass‘ to let Hibernate know what is the return type, failed to do it will caused the exception “org.hibernate.cfg.NotYetImplementedException: Pure native scalar queries are not yet supported&#8221;.&#8221;</p><p>Ty, you saved me!</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-83192"><div id="dsq-comment-header-83192" class="dsq-comment-header"> <cite id="dsq-cite-83192"> <span id="dsq-author-user-83192">Daisies</span> </cite></div><div id="dsq-comment-body-83192" class="dsq-comment-body"><div id="dsq-comment-message-83192" class="dsq-comment-message"><p>Hi,</p><p>In your query, you use &#8220;select *&#8221;. How can we use &#8220;select column1, column2 from &#8230;&#8221;<br /> I don&#8217;t want to load all columns. Hibernate returns me error &#8220;column not found&#8221;</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-82068"><div id="dsq-comment-header-82068" class="dsq-comment-header"> <cite id="dsq-cite-82068"> <span id="dsq-author-user-82068">winzter143</span> </cite></div><div id="dsq-comment-body-82068" class="dsq-comment-body"><div id="dsq-comment-message-82068" class="dsq-comment-message"><p>How can resolve @NamedQuery and @NamedNativeQuery? Sounds like the library not exist. Can someone shared the jar library?</p><p>Thanks.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-77330"><div id="dsq-comment-header-77330" class="dsq-comment-header"> <cite id="dsq-cite-77330"> <span id="dsq-author-user-77330">Harshad</span> </cite></div><div id="dsq-comment-body-77330" class="dsq-comment-body"><div id="dsq-comment-message-77330" class="dsq-comment-message"><p>org.springframework.jdbc.UncategorizedSQLException: Hibernate operation: could not execute query; uncategorized SQLException for SQL [SELECT nextval('mbmcproperty.property_code_seq') as nextval]; SQL state [25006]; error code [0]; ERROR: cannot execute nextval() in a read-only transaction; nested exception is org.postgresql.util.PSQLException: ERROR: cannot execute nextval() in a read-only transaction</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-76298"><div id="dsq-comment-header-76298" class="dsq-comment-header"> <cite id="dsq-cite-76298"> <span id="dsq-author-user-76298">roro</span> </cite></div><div id="dsq-comment-body-76298" class="dsq-comment-body"><div id="dsq-comment-message-76298" class="dsq-comment-message"><p>Hi,</p><p>could you give us a way to face the NoResultException in case the result of the query is empty ?</p><p>Is there a good practice to have ?</p><p>Thanks</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-76316"><div id="dsq-comment-header-76316" class="dsq-comment-header"> <cite id="dsq-cite-76316"> http://www.mkyong.com <span id="dsq-author-user-76316">mkyong</span> </cite></div><div id="dsq-comment-body-76316" class="dsq-comment-body"><div id="dsq-comment-message-76316" class="dsq-comment-message"><p>Just catch the exception or doing a simple empty checking, then return whatever you want :) This is common to handle empty result.</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-69025"><div id="dsq-comment-header-69025" class="dsq-comment-header"> <cite id="dsq-cite-69025"> <span id="dsq-author-user-69025">tripurari</span> </cite></div><div id="dsq-comment-body-69025" class="dsq-comment-body"><div id="dsq-comment-message-69025" class="dsq-comment-message"><p>my application related to struts 2.o spring and jpa how can build ant file</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-69026"><div id="dsq-comment-header-69026" class="dsq-comment-header"> <cite id="dsq-cite-69026"> <span id="dsq-author-user-69026">tripurari</span> </cite></div><div id="dsq-comment-body-69026" class="dsq-comment-body"><div id="dsq-comment-message-69026" class="dsq-comment-message"><p>my problem is related to @Action and @NameQueries annotations</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-80537"><div id="dsq-comment-header-80537" class="dsq-comment-header"> <cite id="dsq-cite-80537"> http://www.gmail.com <span id="dsq-author-user-80537">Sharath</span> </cite></div><div id="dsq-comment-body-80537" class="dsq-comment-body"><div id="dsq-comment-message-80537" class="dsq-comment-message"><p>Hi, i am trying to integrate the Postgres SQL function with Hibernate but i am getting some exception can u just provide me one good example to integrate with Functions and Hibernate&#8230;&#8230;.</p></div></div></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-33601"><div id="dsq-comment-header-33601" class="dsq-comment-header"> <cite id="dsq-cite-33601"> <span id="dsq-author-user-33601">Markus</span> </cite></div><div id="dsq-comment-body-33601" class="dsq-comment-body"><div id="dsq-comment-message-33601" class="dsq-comment-message"><p>What would be the best practice for this case:</p><p>I have an Entity names Entity1 and i also want to select a sum() in the query.</p><p>select Entity1, sum(anything needed) where &#8230;.</p><p>I do have to declare a result class so my question is:<br /> How would i handle such a case? Create a class specially for this case?</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-14569"><div id="dsq-comment-header-14569" class="dsq-comment-header"> <cite id="dsq-cite-14569"> <span id="dsq-author-user-14569">murthy</span> </cite></div><div id="dsq-comment-body-14569" class="dsq-comment-body"><div id="dsq-comment-message-14569" class="dsq-comment-message"><p>Thanks for the great tutorials.</p><p>Is there anyway I can turn off the update query that goes with select query? To explain, let us say I want to select rows from a table. I use the spring+hibernate so I do getHibernateTemplate().find(&#8220;from User where id=?&#8221;, new Long(1)). Now, before after I run this query I want to save a User object. It is here in between that Hibernate tries to do an update in the table for the object being saved whose id is not yet created or written to the DB.</p><p>Here are the code samples:</p><p>In User.hbm.xml</p><p>public void save(UploadItem ui){<br /> findByFileSeqNum();<br /> getHibernateTemplate().save(ui);<br /> }</p><p>@Transactional(readOnly=true)<br /> public void findByFileSeqNum(){</p><p> List cats = getHibernateTemplate().findByNamedQuery(&#8220;findUserIdNativeSQL&#8221;, new java.lang.Long(1));<br /> Iterator it = cats.iterator();<br /> while(it.hasNext()) {<br /> UploadItem ui2 = (UploadItem)it.next();<br /> }<br /> }</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/hibernate-tutorials/' rel='external nofollow' class='url'>Hibernate Tutorials</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-7865"><div id="dsq-comment-header-7865" class="dsq-comment-header"> <cite id="dsq-cite-7865"> <span id="dsq-author-user-7865">ayz</span> </cite></div><div id="dsq-comment-body-7865" class="dsq-comment-body"><div id="dsq-comment-message-7865" class="dsq-comment-message"><p>think there&#8217;s something missing</p><p>like ACTUALLY EXECUTING THE QUERY!!!!</p><p>next time you put up a sampe FINISH IT!!!</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-7873"><div id="dsq-comment-header-7873" class="dsq-comment-header"> <cite id="dsq-cite-7873"> http://www.mkyong.com <span id="dsq-author-user-7873">mkyong</span> </cite></div><div id="dsq-comment-body-7873" class="dsq-comment-body"><div id="dsq-comment-message-7873" class="dsq-comment-message"><p>you can get it via session.getNamedQuery(&#8220;findStockByStockCode&#8221;);</p><p>To practice more examples, visit here <a href="http://www.mkyong.com/tutorials/hibernate-tutorials/" rel="nofollow">http://www.mkyong.com/tutorials/hibernate-tutorials/</a></p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-native-sql-queries-examples/' rel='external nofollow' class='url'>Hibernate native SQL queries examples | Hibernate</a></p></li></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/hibernate/hibernate-named-query-examples/';var disqus_identifier='3354 http://www.mkyong.com/?p=3354';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Hibernate named query examples";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=3354';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Hibernate native SQL queries examples | Hibernate",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-native-sql-queries-examples\/",'date':"02\/13\/2010 04:46 PM",'excerpt':"[...] Alternative, you also can use the named query to call your native SQL statement. See Hibernate named query examples &hellip;",'type':"pingback"},{'author_name':"Hibernate Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/hibernate-tutorials\/",'date':"06\/21\/2010 10:58 AM",'excerpt':"[...] Hibernate named query examples Working with named query in XML file and Annotation. [...] ",'type':"pingback"},{'author_name':"Hibernate : Named Query | PremAseem.com",'author_url':"http:\/\/premaseem.wordpress.com\/2013\/03\/11\/hibernate-named-query\/",'date':"03\/11\/2013 02:55 AM",'excerpt':"[...] Thanks to : http:\/\/www.mkyong.com\/hibernate\/hibernate-named-query-examples\/ [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-named-query-examples\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="3354" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>