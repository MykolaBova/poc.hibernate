<!DOCTYPE html><html lang="en"><title>Hibernate interceptor example &#8211; audit log</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Hibernate mutable example (class and collection)' href='http://www.mkyong.com/hibernate/hibernate-mutable-example-class-and-collection/' /><link rel='next' title='Hibernate Criteria examples' href='http://www.mkyong.com/hibernate/hibernate-criteria-examples/' /><link rel='shortlink' href='http://www.mkyong.com/?p=3340' /><meta name="keywords" content="hibernate,interceptor" /><link rel="canonical" href="http://www.mkyong.com/hibernate/hibernate-interceptor-example-audit-log/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-3340"><header><h1> Hibernate interceptor example &#8211; audit log</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-02-19T13:27:24+00:00">February 19, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : August 30, 2012 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>Hibernate has a powerful feature called &#8216;<strong>interceptor</strong>&#8216; to intercept or hook different kind of Hibernate events, like database CRUD operation. In this article, i will demonstrate how to implement an application audit log feature by using Hibernate interceptor, it will log all the Hibernate save, update or delete operations into a database table named &#8216;<strong>auditlog</strong>&#8216;.</p><h3>Hibernate interceptor example &#8211; audit log</h3><h4>1. Create a table</h4><p>Create a table called &#8216;auditlog&#8217; to store all the application audited records.</p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">DROP</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #993333; font-weight: bold;">EXISTS</span> <span style="color: #ff0000;">`mkyong`</span><span style="color: #66cc66;">.</span><span style="color: #ff0000;">`auditlog`</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>  <span style="color: #ff0000;">`mkyong`</span><span style="color: #66cc66;">.</span><span style="color: #ff0000;">`auditlog`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`AUDIT_LOG_ID`</span> <span style="color: #993333; font-weight: bold;">BIGINT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`ACTION`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">100</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`DETAIL`</span> text <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`CREATED_DATE`</span> <span style="color: #993333; font-weight: bold;">DATE</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`ENTITY_ID`</span> <span style="color: #993333; font-weight: bold;">BIGINT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`ENTITY_NAME`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">255</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`AUDIT_LOG_ID`</span><span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#41;</span> ENGINE<span style="color: #66cc66;">=</span>InnoDB <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">9</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> CHARSET<span style="color: #66cc66;">=</span>utf8;</pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. Create a marker interface</h4><p>Create a marker interface, any classes which implemented this interface will be audit. This interface requires that the implemented class to expose it identifier &#8211; <strong>getId()</strong> and the content to log &#8211; &#8216;<strong>getLogDeatil()</strong>&#8216;. All exposed data will be store into database.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.interceptor</span><span style="color: #339933;">;</span>
<span style="color: #666666; font-style: italic;">//market interface</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">interface</span> IAuditLog <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Long</span> getId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>	
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getLogDeatil<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>3. Map the &#8216;auditlog&#8217; table</h4><p>A normal annotation model file to map with table &#8216;auditlog&#8217;.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;auditlog&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyong&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> AuditLog <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Long</span> auditLogId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> action<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> detail<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Date</span> createdDate<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000066; font-weight: bold;">long</span> entityId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> entityName<span style="color: #339933;">;</span>
        ...
<span style="color: #009900;">&#125;</span></pre></div></div><h4>4. A class implemented the IAuditLog</h4><p>A normal annotation model file to map with table &#8216;stock&#8217;, which will use for interceptor demo later. It have to implemented the <strong>IAuditLog</strong> marker interface and implement the <strong>getId()</strong> and <strong>getLogDeatil()</strong> method.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">...
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyong&quot;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span>, IAuditLog <span style="color: #009900;">&#123;</span>
...
        @<span style="color: #000000; font-weight: bold;">Transient</span>
	@Override
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Long</span> getId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockId</span>.<span style="color: #006633;">longValue</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@<span style="color: #000000; font-weight: bold;">Transient</span>
	@Override
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getLogDeatil<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		StringBuilder sb <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StringBuilder<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		sb.<span style="color: #006633;">append</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot; Stock Id : &quot;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">append</span><span style="color: #009900;">&#40;</span>stockId<span style="color: #009900;">&#41;</span>
		.<span style="color: #006633;">append</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot; Stock Code : &quot;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">append</span><span style="color: #009900;">&#40;</span>stockCode<span style="color: #009900;">&#41;</span>
		.<span style="color: #006633;">append</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot; Stock Name : &quot;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">append</span><span style="color: #009900;">&#40;</span>stockName<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> sb.<span style="color: #006633;">toString</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
...</pre></div></div><h4>5. Create a Helper class</h4><p>A helper class to accept the data from interceptor and store it into database.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">...
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> AuditLogUtil<span style="color: #009900;">&#123;</span>
&nbsp;
   <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> LogIt<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> action,
     IAuditLog entity, <span style="color: #003399;">Connection</span> conn <span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
&nbsp;
     Session tempSession <span style="color: #339933;">=</span> HibernateUtil.<span style="color: #006633;">getSessionFactory</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">openSession</span><span style="color: #009900;">&#40;</span>conn<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
     <span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	AuditLog auditRecord <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> AuditLog<span style="color: #009900;">&#40;</span>action,entity.<span style="color: #006633;">getLogDeatil</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>
		, <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Date</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>,entity.<span style="color: #006633;">getId</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>, entity.<span style="color: #006633;">getClass</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">toString</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	tempSession.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>auditRecord<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	tempSession.<span style="color: #006633;">flush</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
     <span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">finally</span> <span style="color: #009900;">&#123;</span>	
	tempSession.<span style="color: #006633;">close</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>		
     <span style="color: #009900;">&#125;</span>		
  <span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><h4>6. Create a Hibernate interceptor class</h4><p>Create a interceptor class by extends the Hibernate <strong>EmptyInterceptor</strong>. Here is the most  popular interceptor function.</p><ul><li>onSave &#8211; Called when you save an object, the object is not save into database yet.</li><li>onFlushDirty &#8211; Called when you update an object, the object is not update into database yet.</li><li>onDelete &#8211; Called when you delete an object, the object is not delete into database yet.</li><li>preFlush &#8211; Called before the saved, updated or deleted objects are committed to database (usually before postFlush).</li><li>postFlush &#8211;  Called after the saved, updated or deleted objects are committed to database.</li></ul><p>The code is quite verbose, it should self-exploratory.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">...
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> AuditLogInterceptor <span style="color: #000000; font-weight: bold;">extends</span> EmptyInterceptor<span style="color: #009900;">&#123;</span>
&nbsp;
	Session session<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Set</span> inserts <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">HashSet</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Set</span> updates <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">HashSet</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Set</span> deletes <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">HashSet</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setSession<span style="color: #009900;">&#40;</span>Session session<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">session</span><span style="color: #339933;">=</span>session<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">boolean</span> onSave<span style="color: #009900;">&#40;</span><span style="color: #003399;">Object</span> entity,<span style="color: #003399;">Serializable</span> id,
		<span style="color: #003399;">Object</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> state,<span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> propertyNames,Type<span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> types<span style="color: #009900;">&#41;</span>
		<span style="color: #000000; font-weight: bold;">throws</span> CallbackException <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;onSave&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>entity <span style="color: #000000; font-weight: bold;">instanceof</span> IAuditLog<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
			inserts.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>entity<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">boolean</span> onFlushDirty<span style="color: #009900;">&#40;</span><span style="color: #003399;">Object</span> entity,<span style="color: #003399;">Serializable</span> id,
		<span style="color: #003399;">Object</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> currentState,<span style="color: #003399;">Object</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> previousState,
		<span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> propertyNames,Type<span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> types<span style="color: #009900;">&#41;</span>
		<span style="color: #000000; font-weight: bold;">throws</span> CallbackException <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;onFlushDirty&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>entity <span style="color: #000000; font-weight: bold;">instanceof</span> IAuditLog<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
			updates.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>entity<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> onDelete<span style="color: #009900;">&#40;</span><span style="color: #003399;">Object</span> entity, <span style="color: #003399;">Serializable</span> id, 
		<span style="color: #003399;">Object</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> state, <span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> propertyNames, 
		Type<span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> types<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;onDelete&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>entity <span style="color: #000000; font-weight: bold;">instanceof</span> IAuditLog<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
			deletes.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>entity<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//called before commit into database</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> preFlush<span style="color: #009900;">&#40;</span><span style="color: #003399;">Iterator</span> iterator<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;preFlush&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>	
&nbsp;
	<span style="color: #666666; font-style: italic;">//called after committed into database</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> postFlush<span style="color: #009900;">&#40;</span><span style="color: #003399;">Iterator</span> iterator<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;postFlush&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">try</span><span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">for</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">Iterator</span> it <span style="color: #339933;">=</span> inserts.<span style="color: #006633;">iterator</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> it.<span style="color: #006633;">hasNext</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		    IAuditLog entity <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>IAuditLog<span style="color: #009900;">&#41;</span> it.<span style="color: #006633;">next</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		    <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;postFlush - insert&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>		
		    AuditLogUtil.<span style="color: #006633;">LogIt</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Saved&quot;</span>,entity, session.<span style="color: #006633;">connection</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>	
&nbsp;
		<span style="color: #000000; font-weight: bold;">for</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">Iterator</span> it <span style="color: #339933;">=</span> updates.<span style="color: #006633;">iterator</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> it.<span style="color: #006633;">hasNext</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		    IAuditLog entity <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>IAuditLog<span style="color: #009900;">&#41;</span> it.<span style="color: #006633;">next</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		    <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;postFlush - update&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		    AuditLogUtil.<span style="color: #006633;">LogIt</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Updated&quot;</span>,entity, session.<span style="color: #006633;">connection</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>	
&nbsp;
		<span style="color: #000000; font-weight: bold;">for</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">Iterator</span> it <span style="color: #339933;">=</span> deletes.<span style="color: #006633;">iterator</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> it.<span style="color: #006633;">hasNext</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		    IAuditLog entity <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>IAuditLog<span style="color: #009900;">&#41;</span> it.<span style="color: #006633;">next</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		    <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;postFlush - delete&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		    AuditLogUtil.<span style="color: #006633;">LogIt</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Deleted&quot;</span>,entity, session.<span style="color: #006633;">connection</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>	
&nbsp;
	<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">finally</span> <span style="color: #009900;">&#123;</span>
		inserts.<span style="color: #006633;">clear</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		updates.<span style="color: #006633;">clear</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		deletes.<span style="color: #006633;">clear</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
       <span style="color: #009900;">&#125;</span>		
<span style="color: #009900;">&#125;</span></pre></div></div><h4>7.Enabling the interceptor</h4><p>You can enable the interceptor by pass it as an argument to <strong>openSession(interceptor);</strong>.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">...
   <span style="color: #006633;">Session</span> session <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #339933;">;</span>
   Transaction tx <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #339933;">;</span>
   <span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	AuditLogInterceptor interceptor <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> AuditLogInterceptor<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	session <span style="color: #339933;">=</span> HibernateUtil.<span style="color: #006633;">getSessionFactory</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">openSession</span><span style="color: #009900;">&#40;</span>interceptor<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	interceptor.<span style="color: #006633;">setSession</span><span style="color: #009900;">&#40;</span>session<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//test insert</span>
	tx <span style="color: #339933;">=</span> session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	Stock stockInsert <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	stockInsert.<span style="color: #006633;">setStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;1111&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	stockInsert.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;mkyong&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	session.<span style="color: #006633;">saveOrUpdate</span><span style="color: #009900;">&#40;</span>stockInsert<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	tx.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//test update</span>
	tx <span style="color: #339933;">=</span> session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	Query query <span style="color: #339933;">=</span> session.<span style="color: #006633;">createQuery</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;from Stock where stockCode = '1111'&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	Stock stockUpdate <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>Stock<span style="color: #009900;">&#41;</span>query.<span style="color: #006633;">list</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">get</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	stockUpdate.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;mkyong-update&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	session.<span style="color: #006633;">saveOrUpdate</span><span style="color: #009900;">&#40;</span>stockUpdate<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	tx.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//test delete</span>
	tx <span style="color: #339933;">=</span> session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	session.<span style="color: #006633;">delete</span><span style="color: #009900;">&#40;</span>stockUpdate<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	tx.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
   <span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">RuntimeException</span> e<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
		tx.<span style="color: #006633;">rollback</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">RuntimeException</span> rbe<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #666666; font-style: italic;">// log.error(&quot;Couldn’t roll back transaction&quot;, rbe);</span>
   <span style="color: #009900;">&#125;</span>
	<span style="color: #000000; font-weight: bold;">throw</span> e<span style="color: #339933;">;</span>
   <span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">finally</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>session <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		session.<span style="color: #006633;">close</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
   <span style="color: #009900;">&#125;</span>
...</pre></div></div><p>In insert test</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">session.<span style="color: #006633;">saveOrUpdate</span><span style="color: #009900;">&#40;</span>stockInsert<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">//it will call onSave</span>
tx.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">// it will call preFlush follow by postFlush</span></pre></div></div><p>In update test</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">session.<span style="color: #006633;">saveOrUpdate</span><span style="color: #009900;">&#40;</span>stockUpdate<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">//it will call onFlushDirty</span>
tx.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">// it will call preFlush follow by postFlush</span></pre></div></div><p>In delete test</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">session.<span style="color: #006633;">delete</span><span style="color: #009900;">&#40;</span>stockUpdate<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">//it will call onDelete</span>
tx.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>  <span style="color: #666666; font-style: italic;">// it will call preFlush follow by postFlush</span></pre></div></div><h5>Output</h5><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;">onSave
Hibernate: 
    insert into mkyong.stock
    <span style="color: #7a0874; font-weight: bold;">&#40;</span>STOCK_CODE, STOCK_NAME<span style="color: #7a0874; font-weight: bold;">&#41;</span> 
    values <span style="color: #7a0874; font-weight: bold;">&#40;</span>?, ?<span style="color: #7a0874; font-weight: bold;">&#41;</span>
preFlush
postFlush
postFlush - insert
Hibernate: 
    insert into mkyong.auditlog
    <span style="color: #7a0874; font-weight: bold;">&#40;</span>ACTION, CREATED_DATE, DETAIL, ENTITY_ID, ENTITY_NAME<span style="color: #7a0874; font-weight: bold;">&#41;</span> 
    values <span style="color: #7a0874; font-weight: bold;">&#40;</span>?, ?, ?, ?, ?<span style="color: #7a0874; font-weight: bold;">&#41;</span>
preFlush
Hibernate: 
    <span style="color: #000000; font-weight: bold;">select</span> ...
    from mkyong.stock stock0_ 
    where stock0_.STOCK_CODE=<span style="color: #ff0000;">'1111'</span>
preFlush
onFlushDirty
Hibernate: 
    update mkyong.stock 
    <span style="color: #000000; font-weight: bold;">set</span> <span style="color: #007800;">STOCK_CODE</span>=?, <span style="color: #007800;">STOCK_NAME</span>=? 
    where <span style="color: #007800;">STOCK_ID</span>=?
postFlush
postFlush - update
Hibernate: 
    insert into mkyong.auditlog
    <span style="color: #7a0874; font-weight: bold;">&#40;</span>ACTION, CREATED_DATE, DETAIL, ENTITY_ID, ENTITY_NAME<span style="color: #7a0874; font-weight: bold;">&#41;</span> 
    values <span style="color: #7a0874; font-weight: bold;">&#40;</span>?, ?, ?, ?, ?<span style="color: #7a0874; font-weight: bold;">&#41;</span>
onDelete
preFlush
Hibernate: 
    delete from mkyong.stock where <span style="color: #007800;">STOCK_ID</span>=?
postFlush
postFlush - delete
Hibernate: 
    insert into mkyong.auditlog 
    <span style="color: #7a0874; font-weight: bold;">&#40;</span>ACTION, CREATED_DATE, DETAIL, ENTITY_ID, ENTITY_NAME<span style="color: #7a0874; font-weight: bold;">&#41;</span> 
    values <span style="color: #7a0874; font-weight: bold;">&#40;</span>?, ?, ?, ?, ?<span style="color: #7a0874; font-weight: bold;">&#41;</span></pre></div></div><h5>In database</h5><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">FROM</span> auditlog a;</pre></div></div><p>All audited data are inserted into database.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2010/01/interceptor-example.jpg" alt="interceptor-example" title="interceptor-example" /></div><h3>Conclusion</h3><p>The audit logs is a useful feature that is often handled in database by using triggers, but i would recommend to use application to implement it for the portability concern.</p><div class="download"> Download this example &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/02/HibernateInterceptotExample.zip'>Hibernate interceptor example.zip</a></div><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a> <a href="http://www.mkyong.com/tag/interceptor/" rel="tag">interceptor</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/" title="Spring Security + Hibernate XML Example">Spring Security + Hibernate XML Example</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-org-hibernate-service-jta-platform-spi-jtaplatform/" title="java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform">java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-component-mapping-example/" title="Hibernate component mapping example">Hibernate component mapping example</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/" title="Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) ">Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) </a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/" title="Hibernate – Many-to-Many example (Annotation)">Hibernate – Many-to-Many example (Annotation)</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/jax-ws-tutorials/' title='JAX-WS Tutorials'><div class='images img-border img-jaxws'></div></a></li><li><a href='/tutorials/spring-mvc-tutorials/' title='Spring MVC Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/spring-security-tutorials/' title='Spring Security Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-138659"><div id="dsq-comment-header-138659" class="dsq-comment-header"> <cite id="dsq-cite-138659"> <span id="dsq-author-user-138659">soliddevv</span> </cite></div><div id="dsq-comment-body-138659" class="dsq-comment-body"><div id="dsq-comment-message-138659" class="dsq-comment-message"><p>Hello,<br /> this does not work for me i am using hibbernate 4.1 can you help me thanks.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-131658"><div id="dsq-comment-header-131658" class="dsq-comment-header"> <cite id="dsq-cite-131658"> <span id="dsq-author-user-131658">Maxim</span> </cite></div><div id="dsq-comment-body-131658" class="dsq-comment-body"><div id="dsq-comment-message-131658" class="dsq-comment-message"><p>Does interceptor work globally or per session?</p><p>I have this trigger:</p><p> CREATE TRIGGER mytable_BI BEFORE INSERT ON mytable<br /> FOR EACH ROW BEGIN<br /> SET NEW.rank = (SELECT IFNULL(MAX(rank),-1) + 1 FROM channelGroupItem WHERE parentId = NEW.parentId);<br /> END;</p><p>I&#8217;ve tried to use interceptor but I need a session inside an interceptor to check the maximum value in the DB.</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-138197"><div id="dsq-comment-header-138197" class="dsq-comment-header"> <cite id="dsq-cite-138197"> <span id="dsq-author-user-138197">Lucky</span> </cite></div><div id="dsq-comment-body-138197" class="dsq-comment-body"><div id="dsq-comment-message-138197" class="dsq-comment-message"><p>Same problem here&#8230;did you get an answer?<br /> I need to invoke StoredProc from interceptor onSave and postFlush.<br /> I am using spring configuration &#8211; AnnotationSessionFactoryBean for session factory.<br /> something like this&#8230;.</p><p>Not able to bind sessionFactory or session back to auditInterceptor.</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-127012"><div id="dsq-comment-header-127012" class="dsq-comment-header"> <cite id="dsq-cite-127012"> <span id="dsq-author-user-127012">viniston</span> </cite></div><div id="dsq-comment-body-127012" class="dsq-comment-body"><div id="dsq-comment-message-127012" class="dsq-comment-message"><p>can you pls guide me implement this in C#.net pls&#8230;. Thank in advance&#8230;.</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-138695"><div id="dsq-comment-header-138695" class="dsq-comment-header"> <cite id="dsq-cite-138695"> http://net-informations.com <span id="dsq-author-user-138695">Mark</span> </cite></div><div id="dsq-comment-body-138695" class="dsq-comment-body"><div id="dsq-comment-message-138695" class="dsq-comment-message"><p>More about C# <a href="http://csharp.net-informations.com" rel="nofollow">http://csharp.net-informations.com</a> c# Tutorial</p><p>Mark.</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-123991"><div id="dsq-comment-header-123991" class="dsq-comment-header"> <cite id="dsq-cite-123991"> <span id="dsq-author-user-123991">ravi</span> </cite></div><div id="dsq-comment-body-123991" class="dsq-comment-body"><div id="dsq-comment-message-123991" class="dsq-comment-message"><p>Hi, I am not much into hibernate but would like to know how different this is using AcpectJ/AOP to implement intercept functionality ? i think this can be easily achieved with aspects.</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-123995"><div id="dsq-comment-header-123995" class="dsq-comment-header"> <cite id="dsq-cite-123995"> <span id="dsq-author-user-123995">ravi</span> </cite></div><div id="dsq-comment-body-123995" class="dsq-comment-body"><div id="dsq-comment-message-123995" class="dsq-comment-message"><p>_ Sorry, Pls ignore my  prev post</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-96874"><div id="dsq-comment-header-96874" class="dsq-comment-header"> <cite id="dsq-cite-96874"> <span id="dsq-author-user-96874">Sandeep Natoo</span> </cite></div><div id="dsq-comment-body-96874" class="dsq-comment-body"><div id="dsq-comment-message-96874" class="dsq-comment-message"><p>Nice Article MKYONG !!<br /> I have one query is it mandatory to use the same session for audit ?<br /> If yes, then if I configure interceptor through xml , how will I pass current session to interceptor.<br /> If you know then please tell us.</p><p>Thanks !!</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-83661"><div id="dsq-comment-header-83661" class="dsq-comment-header"> <cite id="dsq-cite-83661"> <span id="dsq-author-user-83661">Dhruthi</span> </cite></div><div id="dsq-comment-body-83661" class="dsq-comment-body"><div id="dsq-comment-message-83661" class="dsq-comment-message"><p>Hi mkyong,</p><p>I have downloaded the above project file to my workplace. But in that i didn&#8217;t find the client program.<br /> Can you please tell me steps how i can run in my eclipse workplace.</p><p>whether i have to use Junit for running this example?</p><p>Thanks.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-82584"><div id="dsq-comment-header-82584" class="dsq-comment-header"> <cite id="dsq-cite-82584"> http://www.myspace.com/rbe-enterprises <span id="dsq-author-user-82584">RBE ENTERPRISES</span> </cite></div><div id="dsq-comment-body-82584" class="dsq-comment-body"><div id="dsq-comment-message-82584" class="dsq-comment-message"><p>I hardly write comments, but I browsed some responses on Spreading Holiday Cheer at Neiman Marcus. I do have 2 questions for you if it&#8217;s allright. Is it only me or do a few of these comments look as if they are written by brain dead individuals? And, if you are posting at other social sites, I&#8217;d like to follow you. Could you make a list of the complete urls of all your shared sites like your twitter feed, Facebook page or linkedin profile?</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-56604"><div id="dsq-comment-header-56604" class="dsq-comment-header"> <cite id="dsq-cite-56604"> <span id="dsq-author-user-56604">johndoe</span> </cite></div><div id="dsq-comment-body-56604" class="dsq-comment-body"><div id="dsq-comment-message-56604" class="dsq-comment-message"><p>I tried it. The method onSave in the interceptor is called twice, and the main thread goes to AbstractSaveEventListener. The thread then keeps running infinitely.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-49373"><div id="dsq-comment-header-49373" class="dsq-comment-header"> <cite id="dsq-cite-49373"> <span id="dsq-author-user-49373">Arby</span> </cite></div><div id="dsq-comment-body-49373" class="dsq-comment-body"><div id="dsq-comment-message-49373" class="dsq-comment-message"><p>I&#8217;m sorry MyKong. I understand you are trying to teach people Hibernate and I am learning a lot very quickly. It surely beats trying to read 1000 page book. However as I opined once before this example might send wrong message to fresh developers.</p><p>I shouldn&#8217;t be mangling my domain because I want to Audit something. I shouldn&#8217;t have to open my Stock class and implement IAuditLog. Interception should happen externally. Only thing I should do is perhaps create an @Auditable annotation on my domain classes. When application loads, it should simply make sure methods such as getId() and/or getLogDetail() are implemented.</p><p>As was already pointed out in another reply, neither is this a marker interface, but more importantly I should not have to implement this interface at all. Furthermore, maybe I can simply use toString() instead of getLogDetail(). THis about this. Then I don&#8217;t even need getId(). IF my class uses getIdentity() instead it will still work.</p><p>The whole point of interceptors is to keep class it is intercepting OBLIVIOUS. Class being intercepted should not know IF and WHY and HOW intercepting.</p><p>Just my 2 cents</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-49374"><div id="dsq-comment-header-49374" class="dsq-comment-header"> <cite id="dsq-cite-49374"> http://www.mkyong.com <span id="dsq-author-user-49374">mkyong</span> </cite></div><div id="dsq-comment-body-49374" class="dsq-comment-body"><div id="dsq-comment-message-49374" class="dsq-comment-message"><p>Thanks for your invaluable inputs and concerns. This article is demonstrated that Hibernate is able to handle interceptor task only.</p><p>In production , Spring AOP is a better choice to act as the interceptor, and it matched what you mention above :)</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-49467"><div id="dsq-comment-header-49467" class="dsq-comment-header"> <cite id="dsq-cite-49467"> <span id="dsq-author-user-49467">Arby</span> </cite></div><div id="dsq-comment-body-49467" class="dsq-comment-body"><div id="dsq-comment-message-49467" class="dsq-comment-message"><p>Yes, Spring interceptor is good choice. But if using Hibernate without Spring, I would like to make use of Hibernate interceptor. I think we can make it work without having Model class implement IAuditLog. I will think about this.</p></div></div><ul class="children"><li class="comment even depth-4" id="dsq-comment-83449"><div id="dsq-comment-header-83449" class="dsq-comment-header"> <cite id="dsq-cite-83449"> <span id="dsq-author-user-83449">Abhi</span> </cite></div><div id="dsq-comment-body-83449" class="dsq-comment-body"><div id="dsq-comment-message-83449" class="dsq-comment-message"><p>@Arby,<br /> Can you post example what you have thought of changing this example?<br /> I am beginner in hibernate and dont understand what u are talking about.By example it will be more clear.</p><p>Thanks.</p></div></div></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-12667"><div id="dsq-comment-header-12667" class="dsq-comment-header"> <cite id="dsq-cite-12667"> <span id="dsq-author-user-12667">Hrishikesh</span> </cite></div><div id="dsq-comment-body-12667" class="dsq-comment-body"><div id="dsq-comment-message-12667" class="dsq-comment-message"><p>Very Nice document&#8230;<br /> Just including the jars that will be needed for compilation/execution&#8230;</p><p>* hibernate-annotations.jar<br /> * hibernate-core.jar<br /> * javax.persistence.jar<br /> * junit-3.8.1.jar<br /> * hibernate3.jar</p><p>Regards<br /> Hrishikesh</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-12671"><div id="dsq-comment-header-12671" class="dsq-comment-header"> <cite id="dsq-cite-12671"> http://www.mkyong.com <span id="dsq-author-user-12671">mkyong</span> </cite></div><div id="dsq-comment-body-12671" class="dsq-comment-body"><div id="dsq-comment-message-12671" class="dsq-comment-message"><p>Thanks for your tips, Maven will grab all those :)</p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/hibernate-tutorials/' rel='external nofollow' class='url'>Hibernate Tutorials | Tutorials</a></p></li></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-5775"><div id="dsq-comment-header-5775" class="dsq-comment-header"> <cite id="dsq-cite-5775"> <span id="dsq-author-user-5775">pihentagy</span> </cite></div><div id="dsq-comment-body-5775" class="dsq-comment-body"><div id="dsq-comment-message-5775" class="dsq-comment-message"><p>Nice tutorial, just a small comment:<br /> &#8220;2. Create a marker interface&#8221;</p><p>AFAIK Marker interface is the interface, which does not have any methods in it.<br /> So this is not a marker interface.</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://lubospdiigo.wordpress.com/2010/02/21/blog-bookmarks-02212010/' rel='external nofollow' class='url'>Blog bookmarks 02/21/2010 &laquo; My Diigo bookmarks</a></p></li></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-5690"><div id="dsq-comment-header-5690" class="dsq-comment-header"> <cite id="dsq-cite-5690"> <span id="dsq-author-user-5690">Mark</span> </cite></div><div id="dsq-comment-body-5690" class="dsq-comment-body"><div id="dsq-comment-message-5690" class="dsq-comment-message"><p>Good info for how to use interceptors. But for auditing &#8230; Envers.</p></div></div></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/hibernate/hibernate-interceptor-example-audit-log/';var disqus_identifier='3340 http://www.mkyong.com/?p=3340';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Hibernate interceptor example &#8211; audit log";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=3340';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Blog bookmarks 02\/21\/2010 &laquo; My Diigo bookmarks",'author_url':"http:\/\/lubospdiigo.wordpress.com\/2010\/02\/21\/blog-bookmarks-02212010\/",'date':"02\/21\/2010 04:30 AM",'excerpt':"[...] Hibernate interceptor example – audit log | Hibernate [...] ",'type':"pingback"},{'author_name':"Hibernate Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/hibernate-tutorials\/",'date':"03\/31\/2010 08:23 AM",'excerpt':"[...] Hibernate interceptor example &#8211; audit log Hibernate interceptor is used to intercept the Hibernate events like CRUD operations, a &hellip;",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-interceptor-example-audit-log\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="3340" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>