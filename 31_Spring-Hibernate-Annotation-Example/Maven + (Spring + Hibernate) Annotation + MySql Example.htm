<!DOCTYPE html><html lang="en"><title>Maven + (Spring + Hibernate) Annotation + MySql Example</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Maven Tutorial' href='http://www.mkyong.com/tutorials/maven-tutorials/' /><link rel='next' title='Apache Archiva Tutorial' href='http://www.mkyong.com/tutorials/apache-archiva-tutorials/' /><link rel='shortlink' href='http://www.mkyong.com/?p=4049' /><meta name="keywords" content="annotation,hibernate,maven,mysql,spring" /><link rel="canonical" href="http://www.mkyong.com/spring/maven-spring-hibernate-annotation-mysql-example/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-4049"><header><h1> Maven + (Spring + Hibernate) Annotation + MySql Example</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-03-31T15:12:30+00:00">March 31, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : August 30, 2012 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p></p><div class="download"> Download It &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/03/Spring-Hibernate-Annotation-Example.zip'>Spring-Hibernate-Annotation-Example.zip</a></div><p>In <a href="http://www.mkyong.com/spring/maven-spring-hibernate-mysql-example/" target="_blank">last tutorial</a>, you use Maven to create a simple Java project structure, and demonstrate how to use Hibernate in Spring framework to do the data manipulation works(insert, select, update and delete) in MySQL database. In this tutorial, you will learn how to do the same thing in Spring and Hibernate annotation way.</p><h3>Prerequisite requirement</h3><p>- Installed and configured Maven, MySQL, Eclipse IDE.</p><div class="note"> The <strong>javaee.jar</strong> library is required as well, you can get it from j2ee SDK, and include it manually, there is no full version of <strong>javaee.jar</strong> available in any of the Maven repository yet.</div><h4>Final project structure</h4><p>Your final project file structure should look exactly like following, if you get lost in the folder structure creation, please review this folder structure here.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2010/03/mavan-spring-hibernate-annotation-mysql.gif" alt="" title="mavan-spring-hibernate-annotation-mysql" /></div><h4>1. Table creation</h4><p>Create a &#8216;stock&#8217; table in MySQL database. SQL statement as follow :</p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>  <span style="color: #ff0000;">`mkyong`</span><span style="color: #66cc66;">.</span><span style="color: #ff0000;">`stock`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_CODE`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_NAME`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE<span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_NAME`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_NAME`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_ID`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_CODE`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE
<span style="color: #66cc66;">&#41;</span> ENGINE<span style="color: #66cc66;">=</span>InnoDB <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">11</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> CHARSET<span style="color: #66cc66;">=</span>utf8;</pre></div></div><h4>2. Project File Structure</h4><p>Create a quick project file structure with Maven command &#8216;<strong>mvn archetype:generate</strong>&#8216;, <a href="http://www.mkyong.com/maven/how-to-create-a-project-with-maven-template/" target="_blank">see example here</a>. Convert it to Eclipse project (<strong>mvn eclipse:eclipse</strong>) and import it into Eclipse IDE.</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;">E:\workspace<span style="color: #000000; font-weight: bold;">&gt;</span>mvn archetype:generate
<span style="color: #7a0874; font-weight: bold;">&#91;</span>INFO<span style="color: #7a0874; font-weight: bold;">&#93;</span> Scanning <span style="color: #000000; font-weight: bold;">for</span> projects...
...
Choose a number:  
<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #000000;">1</span><span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">2</span><span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3</span>....<span style="color: #7a0874; font-weight: bold;">&#41;</span> <span style="color: #000000;">15</span>: : <span style="color: #000000;">15</span>
...
Define value <span style="color: #000000; font-weight: bold;">for</span> groupId: : com.mkyong.common
Define value <span style="color: #000000; font-weight: bold;">for</span> artifactId: : HibernateExample
Define value <span style="color: #000000; font-weight: bold;">for</span> version:  <span style="color: #000000;">1.0</span>-SNAPSHOT: :
Define value <span style="color: #000000; font-weight: bold;">for</span> package:  com.mkyong.common: : com.mkyong.common
<span style="color: #7a0874; font-weight: bold;">&#91;</span>INFO<span style="color: #7a0874; font-weight: bold;">&#93;</span> OldArchetype created <span style="color: #000000; font-weight: bold;">in</span> dir: E:\workspace\HibernateExample
<span style="color: #7a0874; font-weight: bold;">&#91;</span>INFO<span style="color: #7a0874; font-weight: bold;">&#93;</span> <span style="color: #660033;">------------------------------------------------------------------------</span>
<span style="color: #7a0874; font-weight: bold;">&#91;</span>INFO<span style="color: #7a0874; font-weight: bold;">&#93;</span> BUILD SUCCESSFUL
<span style="color: #7a0874; font-weight: bold;">&#91;</span>INFO<span style="color: #7a0874; font-weight: bold;">&#93;</span> <span style="color: #660033;">------------------------------------------------------------------------</span></pre></div></div><h4>3. Pom.xml file configuration</h4><p>Add the Spring, Hibernate, Annotation and MySQL and their dependency in the Maven&#8217;s pom.xml file.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;project</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> </span>
<span style="color: #009900;">  <span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">  <span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://maven.apache.org/POM/4.0.0 </span>
<span style="color: #009900;">  http://maven.apache.org/maven-v4_0_0.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;modelVersion<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>4.0.0<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/modelVersion<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>com.mkyong.common<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>SpringExample<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;packaging<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>jar<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/packaging<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>1.0-SNAPSHOT<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;name<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>SpringExample<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/name<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>http://maven.apache.org<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;repositories<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;repository<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
      <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>JBoss repository<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
      <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>http://repository.jboss.com/maven2/<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/repository<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/repositories<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
        <span style="color: #808080; font-style: italic;">&lt;!-- JUnit testing framework --&gt;</span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>junit<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>junit<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.8.1<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;scope<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>test<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/scope<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
        <span style="color: #808080; font-style: italic;">&lt;!-- Spring framework --&gt;</span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>org.springframework<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>spring<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>2.5.6<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
        <span style="color: #808080; font-style: italic;">&lt;!-- Spring AOP dependency --&gt;</span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    	        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>cglib<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>cglib<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>2.2<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
        <span style="color: #808080; font-style: italic;">&lt;!-- MySQL database driver --&gt;</span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mysql<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mysql-connector-java<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>5.1.9<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #808080; font-style: italic;">&lt;!-- Hibernate framework --&gt;</span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate3<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.2.3.GA<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #808080; font-style: italic;">&lt;!-- Hibernate annotation --&gt;</span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate-annotations<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate-annotations<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.3.0.GA<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate-commons-annotations<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate-commons-annotations<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.0.0.GA<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #808080; font-style: italic;">&lt;!-- Hibernate library dependecy start --&gt;</span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>dom4j<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>dom4j<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>1.6.1<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>commons-logging<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>commons-logging<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>1.1.1<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>commons-collections<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>commons-collections<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.2.1<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>antlr<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>antlr<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>2.7.7<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #808080; font-style: italic;">&lt;!-- Hibernate library dependecy end --&gt;</span>
&nbsp;
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/project<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>4. Model &#038; BO &#038; DAO</h4><p>The <strong>Model</strong>, <strong>Business Object</strong> (BO) and <strong>Data Access Object</strong> (DAO) pattern is useful to identify the layer clearly to avoid mess up the project structure.</p><h5>Stock Model (Annotation)</h5><p>A Stock model annotation class to store the stock data.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock.model</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Column</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Entity</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.GeneratedValue</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">static</span> javax.<span style="color: #006633;">persistence</span>.<span style="color: #006633;">GenerationType</span>.<span style="color: #006633;">IDENTITY</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Id</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Table</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.UniqueConstraint</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyong&quot;</span>, uniqueConstraints <span style="color: #339933;">=</span> <span style="color: #009900;">&#123;</span>
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_NAME&quot;</span><span style="color: #009900;">&#41;</span>,
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_CODE&quot;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockName<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode, <span style="color: #003399;">String</span> stockName<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span> <span style="color: #339933;">=</span> stockCode<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span> <span style="color: #339933;">=</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Id
	@GeneratedValue<span style="color: #009900;">&#40;</span>strategy <span style="color: #339933;">=</span> IDENTITY<span style="color: #009900;">&#41;</span>
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_ID&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Integer</span> getStockId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockId</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockId<span style="color: #009900;">&#40;</span><span style="color: #003399;">Integer</span> stockId<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockId</span> <span style="color: #339933;">=</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_CODE&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">10</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getStockCode<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span> <span style="color: #339933;">=</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_NAME&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">20</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getStockName<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockName<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockName<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span> <span style="color: #339933;">=</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Override
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> toString<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">&quot;Stock [stockCode=&quot;</span> <span style="color: #339933;">+</span> stockCode <span style="color: #339933;">+</span> <span style="color: #0000ff;">&quot;, stockId=&quot;</span> <span style="color: #339933;">+</span> stockId
				<span style="color: #339933;">+</span> <span style="color: #0000ff;">&quot;, stockName=&quot;</span> <span style="color: #339933;">+</span> stockName <span style="color: #339933;">+</span> <span style="color: #0000ff;">&quot;]&quot;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><h5>Stock Business Object (BO))</h5><p>Stock business object (BO) interface and implementation, it&#8217;s used to store the project&#8217;s business function, the real database operations (CRUD) works should not involved in this class, instead it has a DAO (StockDao) class to do it.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock.bo</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.model.Stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">interface</span> StockBo <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000066; font-weight: bold;">void</span> save<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #000066; font-weight: bold;">void</span> update<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #000066; font-weight: bold;">void</span> delete<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	Stock findByStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Make this class as a bean &#8220;stockBo&#8221; in Spring Ioc container, and autowire the stock dao class.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock.bo.impl</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.beans.factory.annotation.Autowired</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.stereotype.Service</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.bo.StockBo</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.dao.StockDao</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.model.Stock</span><span style="color: #339933;">;</span>
&nbsp;
@Service<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;stockBo&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockBoImpl <span style="color: #000000; font-weight: bold;">implements</span> StockBo<span style="color: #009900;">&#123;</span>
&nbsp;
	@Autowired
	StockDao stockDao<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockDao<span style="color: #009900;">&#40;</span>StockDao stockDao<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockDao</span> <span style="color: #339933;">=</span> stockDao<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> save<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		stockDao.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> update<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		stockDao.<span style="color: #006633;">update</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> delete<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		stockDao.<span style="color: #006633;">delete</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock findByStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> stockDao.<span style="color: #006633;">findByStockCode</span><span style="color: #009900;">&#40;</span>stockCode<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><h5>Stock Data Access Object</h5><p>A Stock DAO interface and implementation. In last tutorial, you DAO classes are directly extends the &#8220;<strong>HibernateDaoSupport</strong>&#8220;, but it&#8217;s not possible to do it in annotation mode, because you have no way to auto wire the session Factory bean from your DAO class. The workaround is create a custom class (<strong>CustomHibernateDaoSupport</strong>) and extends the &#8220;<strong>HibernateDaoSupport</strong>&#8221; and auto wire the session factory, and your DAO classes extends this class.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock.dao</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.model.Stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">interface</span> StockDao <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000066; font-weight: bold;">void</span> save<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #000066; font-weight: bold;">void</span> update<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #000066; font-weight: bold;">void</span> delete<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	Stock findByStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.util</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.SessionFactory</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.beans.factory.annotation.Autowired</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.orm.hibernate3.support.HibernateDaoSupport</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">abstract</span> <span style="color: #000000; font-weight: bold;">class</span> CustomHibernateDaoSupport <span style="color: #000000; font-weight: bold;">extends</span> HibernateDaoSupport
<span style="color: #009900;">&#123;</span>    
    @Autowired
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> anyMethodName<span style="color: #009900;">&#40;</span>SessionFactory sessionFactory<span style="color: #009900;">&#41;</span>
    <span style="color: #009900;">&#123;</span>
        setSessionFactory<span style="color: #009900;">&#40;</span>sessionFactory<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock.dao.impl</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.List</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.stereotype.Repository</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.dao.StockDao</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.model.Stock</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.util.CustomHibernateDaoSupport</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Repository</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;stockDao&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockDaoImpl <span style="color: #000000; font-weight: bold;">extends</span> CustomHibernateDaoSupport <span style="color: #000000; font-weight: bold;">implements</span> StockDao<span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> save<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> update<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">update</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> delete<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">delete</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock findByStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">List</span> list <span style="color: #339933;">=</span> getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">find</span><span style="color: #009900;">&#40;</span>
                     <span style="color: #0000ff;">&quot;from Stock where stockCode=?&quot;</span>,stockCode
                <span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #009900;">&#40;</span>Stock<span style="color: #009900;">&#41;</span>list.<span style="color: #006633;">get</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><h4>5. Resource Configuration</h4><p>Create a &#8216;<strong>resources</strong>&#8216; folder under <strong>&#8216;project_name/main/java/</strong>&#8216;, Maven will treat all files under this folder as resources file. It will used to store the Spring, Hibernate and others configuration file.</p><h5>Spring Configuration</h5><p><em>Database related&#8230;.</em></p><p>Create a properties file <strong>(database.properties</strong>) for the database details, put it into the &#8220;<strong>resources/properties</strong>&#8221; folder. It&#8217;s good practice disparate the database details and Spring bean configuration into different files.</p><p><strong>database.properties</strong></p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;">jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql:<span style="color: #000000; font-weight: bold;">//</span>localhost:<span style="color: #000000;">3306</span><span style="color: #000000; font-weight: bold;">/</span>mkyong
jdbc.username=root
jdbc.password=password</pre></div></div><p>Create a &#8220;dataSource&#8221; bean configuration file (<strong>DataSource.xml</strong>) for your database, and import the properties from database.properties, put it into the <strong>&#8220;resources/database</strong>&#8221; folder.</p><p><strong>DataSource.xml</strong></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> </span>
<span style="color: #009900;"><span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;location&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>properties/database.properties<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;dataSource&quot;</span> </span>
<span style="color: #009900;">         <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;driverClassName&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;${jdbc.driverClassName}&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;url&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;${jdbc.url}&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;username&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;${jdbc.username}&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;password&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;${jdbc.password}&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p><em>Hibernate related&#8230;.</em></p><p>Create a session factory bean configuration file <strong>(Hibernate.xml</strong>), put it into the <strong>&#8220;resources/database</strong>&#8221; folder. In annotation you have to use the <strong>AnnotationSessionFactoryBean</strong>, instead of <strong>LocalSessionFactoryBean</strong>, and specify your annotated model classes in &#8216;<strong>annotatedClasses</strong>&#8216; property instead of &#8216;<strong>mappingResources</strong>&#8216; property.</p><p><strong>Hibernate.xml</strong></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span> <span style="color: #000066;">encoding</span>=<span style="color: #ff0000;">&quot;UTF-8&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
<span style="color: #808080; font-style: italic;">&lt;!-- Hibernate session factory --&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;sessionFactory&quot;</span> </span>
<span style="color: #009900;"><span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;dataSource&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
      <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;ref</span> <span style="color: #000066;">bean</span>=<span style="color: #ff0000;">&quot;dataSource&quot;</span><span style="color: #000000; font-weight: bold;">/&gt;</span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernateProperties&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
       <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;props<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
         <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;prop</span> <span style="color: #000066;">key</span>=<span style="color: #ff0000;">&quot;hibernate.dialect&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>org.hibernate.dialect.MySQLDialect<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/prop<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
         <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;prop</span> <span style="color: #000066;">key</span>=<span style="color: #ff0000;">&quot;hibernate.show_sql&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>true<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/prop<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
       <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/props<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;annotatedClasses&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>com.mkyong.stock.model.Stock<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Import all the Spring&#8217;s beans configuration files into a single file (BeanLocations.xml), put it into the &#8220;<strong>resources/config</strong>&#8221; folder.</p><p><strong>BeanLocations.xml</strong><br /> Import the Spring database configuration and enable the Spring&#8217;s auto scan feature.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xmlns:context</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/context&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span>
<span style="color: #009900;">http://www.springframework.org/schema/context</span>
<span style="color: #009900;">http://www.springframework.org/schema/context/spring-context-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #808080; font-style: italic;">&lt;!-- Database Configuration --&gt;</span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;import</span> <span style="color: #000066;">resource</span>=<span style="color: #ff0000;">&quot;../database/DataSource.xml&quot;</span><span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;import</span> <span style="color: #000066;">resource</span>=<span style="color: #ff0000;">&quot;../database/Hibernate.xml&quot;</span><span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #808080; font-style: italic;">&lt;!-- Auto scan the components --&gt;</span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;context:component-scan</span> </span>
<span style="color: #009900;">		<span style="color: #000066;">base-package</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>6. Run it</h4><p>You have all the files and configurations , run it.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.common</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.ApplicationContext</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.support.ClassPathXmlApplicationContext</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.bo.StockBo</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.model.Stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App 
<span style="color: #009900;">&#123;</span>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span> <span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args <span style="color: #009900;">&#41;</span>
    <span style="color: #009900;">&#123;</span>
    	ApplicationContext appContext <span style="color: #339933;">=</span> 
    	  <span style="color: #000000; font-weight: bold;">new</span> ClassPathXmlApplicationContext<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;spring/config/BeanLocations.xml&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    	StockBo stockBo <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>StockBo<span style="color: #009900;">&#41;</span>appContext.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;stockBo&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    	<span style="color: #008000; font-style: italic; font-weight: bold;">/** insert **/</span>
    	Stock stock <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    	stock.<span style="color: #006633;">setStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;7668&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    	stock.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HAIO&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    	stockBo.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    	<span style="color: #008000; font-style: italic; font-weight: bold;">/** select **/</span>
    	Stock stock2 <span style="color: #339933;">=</span> stockBo.<span style="color: #006633;">findByStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;7668&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    	<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span>stock2<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    	<span style="color: #008000; font-style: italic; font-weight: bold;">/** update **/</span>
    	stock2.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HAIO-1&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    	stockBo.<span style="color: #006633;">update</span><span style="color: #009900;">&#40;</span>stock2<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    	<span style="color: #008000; font-style: italic; font-weight: bold;">/** delete **/</span>
    	stockBo.<span style="color: #006633;">delete</span><span style="color: #009900;">&#40;</span>stock2<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    	<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Done&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;">Hibernate: insert into mkyong.stock <span style="color: #7a0874; font-weight: bold;">&#40;</span>STOCK_CODE, STOCK_NAME<span style="color: #7a0874; font-weight: bold;">&#41;</span> values <span style="color: #7a0874; font-weight: bold;">&#40;</span>?, ?<span style="color: #7a0874; font-weight: bold;">&#41;</span>
Hibernate: <span style="color: #000000; font-weight: bold;">select</span> stock0_.STOCK_ID <span style="color: #c20cb9; font-weight: bold;">as</span> STOCK1_0_, 
stock0_.STOCK_CODE <span style="color: #c20cb9; font-weight: bold;">as</span> STOCK2_0_, stock0_.STOCK_NAME <span style="color: #c20cb9; font-weight: bold;">as</span> STOCK3_0_ 
from mkyong.stock stock0_ where stock0_.STOCK_CODE=?
Stock <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #007800;">stockCode</span>=<span style="color: #000000;">7668</span>, <span style="color: #007800;">stockId</span>=<span style="color: #000000;">11</span>, <span style="color: #007800;">stockName</span>=HAIO<span style="color: #7a0874; font-weight: bold;">&#93;</span>
Hibernate: update mkyong.stock <span style="color: #000000; font-weight: bold;">set</span> <span style="color: #007800;">STOCK_CODE</span>=?, <span style="color: #007800;">STOCK_NAME</span>=? where <span style="color: #007800;">STOCK_ID</span>=?
Hibernate: delete from mkyong.stock where <span style="color: #007800;">STOCK_ID</span>=?
Done</pre></div></div><h3>Conclusion</h3><p>All Spring, Hibernate related classes and configuration files are annotated, it just left the database details in XML file. Should you know how to annotate the database configuration details, please let me know. Personally, i do not use annotation feature much, because somehow you may need some workaround for certain situation, like &#8216;CustomHibernateDaoSupport&#8217; extends   &#8216;HibernateDaoSupport&#8217; above. The mature developed XML file in Spring and Hibernate. is more preferably.</p><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/annotation/" rel="tag">annotation</a> <a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a> <a href="http://www.mkyong.com/tag/maven/" rel="tag">maven</a> <a href="http://www.mkyong.com/tag/mysql/" rel="tag">mysql</a> <a href="http://www.mkyong.com/tag/spring/" rel="tag">spring</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring/maven-spring-hibernate-mysql-example/" title="Maven + Spring + Hibernate + MySql Example">Maven + Spring + Hibernate + MySql Example</a></li><li><a href="http://www.mkyong.com/hibernate/maven-hibernate-annonation-mysql-example/" title="Maven 2 + Hibernate 3.2 + MySQL Example (Annotation)">Maven 2 + Hibernate 3.2 + MySQL Example (Annotation)</a></li><li><a href="http://www.mkyong.com/hibernate/maven-3-hibernate-3-6-oracle-11g-example-annotation/" title="Maven 3 + Hibernate 3.6 + Oracle 11g Example (Annotation)">Maven 3 + Hibernate 3.6 + Oracle 11g Example (Annotation)</a></li><li><a href="http://www.mkyong.com/hibernate/quick-start-maven-hibernate-mysql-example/" title="Maven 2 + Hibernate 3.2 + MySQL Example (XML Mapping)">Maven 2 + Hibernate 3.2 + MySQL Example (XML Mapping)</a></li><li><a href="http://www.mkyong.com/spring3/spring-aop-aspectj-annotation-example/" title="Spring AOP + AspectJ annotation example">Spring AOP + AspectJ annotation example</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/struts-2-tutorials/' title='Struts 2.x Tutorials'><div class='images img-border img-struts2'></div></a></li><li><a href='/tutorials/spring-security-tutorials/' title='Spring Security Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/java-io/' title='Java I/O Tutorials'><div class='images img-border img-io'></div></a></li><li><a href='/tag/java/' title='Java Tutorials'><div class='images img-border img-java'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><div class="navigation"><div class="nav-previous"><a href="http://www.mkyong.com/spring/maven-spring-hibernate-annotation-mysql-example/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div><div class="nav-next"></div></div><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-136181"><div id="dsq-comment-header-136181" class="dsq-comment-header"> <cite id="dsq-cite-136181"> <span id="dsq-author-user-136181">GHAFFARI El Mehdi</span> </cite></div><div id="dsq-comment-body-136181" class="dsq-comment-body"><div id="dsq-comment-message-136181" class="dsq-comment-message"><p>guys, I&#8217;m hitting the wall with this exception &#8221; java.lang.ClassNotFoundException: javax.annotation.CheckReturnValue&#8221; just after trying to run the App file, can anyone help plz</p></div></div></li><li class="post pingback"><p>Pingback: <a href='https://blog.soton.ac.uk/comp6051-homies/2013/04/22/technical-manual/' rel='external nofollow' class='url'>Technical Manual | COMP6051 &#8211; Homies</a></p></li></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-130767"><div id="dsq-comment-header-130767" class="dsq-comment-header"> <cite id="dsq-cite-130767"> <span id="dsq-author-user-130767">CharlyR</span> </cite></div><div id="dsq-comment-body-130767" class="dsq-comment-body"><div id="dsq-comment-message-130767" class="dsq-comment-message"><p>Hi, I write my small contribution:</p><p>We have to change 2 dependences in pom.xml</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #ddbb00;">&amp;lt;</span>dependency<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>groupId<span style="color: #ddbb00;">&amp;gt;</span>org.hibernate<span style="color: #ddbb00;">&amp;lt;</span>/groupId<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>artifactId<span style="color: #ddbb00;">&amp;gt;</span>hibernate-annotations<span style="color: #ddbb00;">&amp;lt;</span>/artifactId<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>version<span style="color: #ddbb00;">&amp;gt;</span>3.3.0.ga<span style="color: #ddbb00;">&amp;lt;</span>/version<span style="color: #ddbb00;">&amp;gt;</span>
	<span style="color: #ddbb00;">&amp;lt;</span>/dependency<span style="color: #ddbb00;">&amp;gt;</span>
&nbsp;
	<span style="color: #ddbb00;">&amp;lt;</span>dependency<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>groupId<span style="color: #ddbb00;">&amp;gt;</span>org.hibernate<span style="color: #ddbb00;">&amp;lt;</span>/groupId<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>artifactId<span style="color: #ddbb00;">&amp;gt;</span>hibernate-commons-annotations<span style="color: #ddbb00;">&amp;lt;</span>/artifactId<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>version<span style="color: #ddbb00;">&amp;gt;</span>3.0.0.ga<span style="color: #ddbb00;">&amp;lt;</span>/version<span style="color: #ddbb00;">&amp;gt;</span>
	<span style="color: #ddbb00;">&amp;lt;</span>/dependency<span style="color: #ddbb00;">&amp;gt;</span></pre></div></div><p>BONUS:<br /> if you want to install javaee.jar in your repository just execute the next program on shell:</p><p>mvn install:install-file -Dfile= -DgroupId=org.javax -DartifactId=javaee -Dversion=1.0 -Dpackaging=jar</p><p>then in pom.xml put the next dependency:</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">    <span style="color: #ddbb00;">&amp;lt;</span>dependency<span style="color: #ddbb00;">&amp;gt;</span>
      <span style="color: #ddbb00;">&amp;lt;</span>groupId<span style="color: #ddbb00;">&amp;gt;</span>org.javax<span style="color: #ddbb00;">&amp;lt;</span>/groupId<span style="color: #ddbb00;">&amp;gt;</span>
      <span style="color: #ddbb00;">&amp;lt;</span>artifactId<span style="color: #ddbb00;">&amp;gt;</span>javaee<span style="color: #ddbb00;">&amp;lt;</span>/artifactId<span style="color: #ddbb00;">&amp;gt;</span>
      <span style="color: #ddbb00;">&amp;lt;</span>version<span style="color: #ddbb00;">&amp;gt;</span>1.0<span style="color: #ddbb00;">&amp;lt;</span>/version<span style="color: #ddbb00;">&amp;gt;</span>
    <span style="color: #ddbb00;">&amp;lt;</span>/dependency<span style="color: #ddbb00;">&amp;gt;</span></pre></div></div><p>thank for advice.<br /> CharlyR</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-130768"><div id="dsq-comment-header-130768" class="dsq-comment-header"> <cite id="dsq-cite-130768"> <span id="dsq-author-user-130768">CharlyR</span> </cite></div><div id="dsq-comment-body-130768" class="dsq-comment-body"><div id="dsq-comment-message-130768" class="dsq-comment-message"><p>the command was bad edited, please use this example:</p><p>mvn install:install-file -Dfile=./src/main/resources/javaee.jar -DgroupId=org.javax -DartifactId=javaee -Dversion=1.0 -Dpackaging=jar</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-130653"><div id="dsq-comment-header-130653" class="dsq-comment-header"> <cite id="dsq-cite-130653"> <span id="dsq-author-user-130653">Daniel</span> </cite></div><div id="dsq-comment-body-130653" class="dsq-comment-body"><div id="dsq-comment-message-130653" class="dsq-comment-message"><p>&#8220;In last tutorial, you DAO classes are directly extends the “HibernateDaoSupport“, but it’s not possible to do it in annotation mode, because you have no way to auto wire the session Factory bean from your DAO class.&#8221;</p><p>It works for me:</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock.dao.impl</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.List</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.SessionFactory</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.beans.factory.annotation.Autowired</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.orm.hibernate3.support.HibernateDaoSupport</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.stereotype.Repository</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.dao.StockDao</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.model.Stock</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.util.CustomHibernateDaoSupport</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Repository</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>stockDao<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockDaoImpl <span style="color: #000000; font-weight: bold;">extends</span> HibernateDaoSupport <span style="color: #000000; font-weight: bold;">implements</span> StockDao<span style="color: #009900;">&#123;</span>
&nbsp;
	@Autowired
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> anyMethodName<span style="color: #009900;">&#40;</span>SessionFactory sessionFactory<span style="color: #009900;">&#41;</span>
    <span style="color: #009900;">&#123;</span>
        setSessionFactory<span style="color: #009900;">&#40;</span>sessionFactory<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> save<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> update<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">update</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> delete<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">delete</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock findByStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">List</span> list <span style="color: #339933;">=</span> getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">find</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>from Stock where stockCode<span style="color: #339933;">=?&amp;</span>quot<span style="color: #339933;">;</span>,stockCode<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #009900;">&#40;</span>Stock<span style="color: #009900;">&#41;</span>list.<span style="color: #006633;">get</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-130652"><div id="dsq-comment-header-130652" class="dsq-comment-header"> <cite id="dsq-cite-130652"> <span id="dsq-author-user-130652">Daniel</span> </cite></div><div id="dsq-comment-body-130652" class="dsq-comment-body"><div id="dsq-comment-message-130652" class="dsq-comment-message"><p>&#8220;A Stock DAO interface and implementation. In last tutorial, you DAO classes are directly extends the “HibernateDaoSupport“, but it’s not possible to do it in annotation mode, because you have no way to auto wire the session Factory bean from your DAO class.&#8221;</p><p>It works for me:</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock.dao.impl</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.List</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.SessionFactory</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.beans.factory.annotation.Autowired</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.orm.hibernate3.support.HibernateDaoSupport</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.stereotype.Repository</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.dao.StockDao</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.model.Stock</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.util.CustomHibernateDaoSupport</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Repository</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>stockDao<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockDaoImpl <span style="color: #000000; font-weight: bold;">extends</span> HibernateDaoSupport <span style="color: #000000; font-weight: bold;">implements</span> StockDao<span style="color: #009900;">&#123;</span>
&nbsp;
@Autowired
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> anyMethodName<span style="color: #009900;">&#40;</span>SessionFactory sessionFactory<span style="color: #009900;">&#41;</span>
    <span style="color: #009900;">&#123;</span>
        setSessionFactory<span style="color: #009900;">&#40;</span>sessionFactory<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> save<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> update<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">update</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> delete<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">delete</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock findByStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">List</span> list <span style="color: #339933;">=</span> getHibernateTemplate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">find</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>from Stock where stockCode<span style="color: #339933;">=?&amp;</span>quot<span style="color: #339933;">;</span>,stockCode<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #009900;">&#40;</span>Stock<span style="color: #009900;">&#41;</span>list.<span style="color: #006633;">get</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-129381"><div id="dsq-comment-header-129381" class="dsq-comment-header"> <cite id="dsq-cite-129381"> <span id="dsq-author-user-129381">maya zakry</span> </cite></div><div id="dsq-comment-body-129381" class="dsq-comment-body"><div id="dsq-comment-message-129381" class="dsq-comment-message"><p>Hi .thanks for this post, it&#8217;s very useful.<br /> Question : how do we host maven + spring + hibernate in GAE?</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-130602"><div id="dsq-comment-header-130602" class="dsq-comment-header"> <cite id="dsq-cite-130602"> <span id="dsq-author-user-130602">Jonathan</span> </cite></div><div id="dsq-comment-body-130602" class="dsq-comment-body"><div id="dsq-comment-message-130602" class="dsq-comment-message"><p>Hi. is there an easier way to automatically scan and use any @Entity marked objects instead of listing all of them in a sessionFactory using</p><p> ??</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-129082"><div id="dsq-comment-header-129082" class="dsq-comment-header"> <cite id="dsq-cite-129082"> <span id="dsq-author-user-129082">NandKishor</span> </cite></div><div id="dsq-comment-body-129082" class="dsq-comment-body"><div id="dsq-comment-message-129082" class="dsq-comment-message"><p>Can u are tell me, why i am gating these error:</p><p>Feb 19, 2013 4:51:58 PM org.apache.catalina.core.AprLifecycleListener init<br /> INFO: The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: C:\Program Files\Java\jre7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Java\jdk1.6.0_32\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;.<br /> Feb 19, 2013 4:52:02 PM org.apache.tomcat.util.digester.SetPropertiesRule begin<br /> WARNING: [SetPropertiesRule]{Server/Service/Engine/Host/Context} Setting property &#8216;source&#8217; to &#8216;org.eclipse.jst.jee.server:SpringTest&#8217; did not find a matching property.<br /> Feb 19, 2013 4:52:11 PM org.apache.coyote.http11.Http11Protocol init<br /> INFO: Initializing Coyote HTTP/1.1 on http-8080<br /> Feb 19, 2013 4:52:11 PM org.apache.catalina.startup.Catalina load<br /> INFO: Initialization processed in 21829 ms<br /> Feb 19, 2013 4:52:12 PM org.apache.catalina.core.StandardService start<br /> INFO: Starting service Catalina<br /> Feb 19, 2013 4:52:12 PM org.apache.catalina.core.StandardEngine start<br /> INFO: Starting Servlet Engine: Apache Tomcat/6.0.32<br /> Feb 19, 2013 4:52:15 PM org.apache.catalina.core.StandardContext listenerStart<br /> SEVERE: Error configuring application listener of class org.springframework.web.context.ContextLoaderListener<br /> java.lang.ClassNotFoundException: org.springframework.web.context.ContextLoaderListener<br /> at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1680)<br /> at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)<br /> at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4148)<br /> at org.apache.catalina.core.StandardContext.start(StandardContext.java:4704)<br /> at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)<br /> at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)<br /> at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)<br /> at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-129080"><div id="dsq-comment-header-129080" class="dsq-comment-header"> <cite id="dsq-cite-129080"> http://hi <span id="dsq-author-user-129080">NandKishor</span> </cite></div><div id="dsq-comment-body-129080" class="dsq-comment-body"><div id="dsq-comment-message-129080" class="dsq-comment-message"><p>Hi everyone/Mkyong.com</p><p>I configured new  SpringIDE with Maven and i want to write simple web based application.but when i am going to run my application ,there,it was showing some error(I attached in below)whereas ,without SpringIDE and Maven it was ok&#8230;.</p><p>I already checked these solution;</p><p>A&gt;In web.xml ,ContextLoaderListener is configured or not.<br /> B&gt; I am using these software<br /> 1.eclipse-jee-juno-win32-x86_64<br /> 2.apache-maven-3.0.4-bin,<br /> 3.OS Window7-64bit</p><p>Can u are tell me, why i am gating these error:</p><p>Feb 19, 2013 4:51:58 PM org.apache.catalina.core.AprLifecycleListener init<br /> INFO: The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: C:\Program Files\Java\jre7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Java\jdk1.6.0_32\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;.<br /> Feb 19, 2013 4:52:02 PM org.apache.tomcat.util.digester.SetPropertiesRule begin<br /> WARNING: [SetPropertiesRule]{Server/Service/Engine/Host/Context} Setting property &#8216;source&#8217; to &#8216;org.eclipse.jst.jee.server:SpringTest&#8217; did not find a matching property.<br /> Feb 19, 2013 4:52:11 PM org.apache.coyote.http11.Http11Protocol init<br /> INFO: Initializing Coyote HTTP/1.1 on http-8080<br /> Feb 19, 2013 4:52:11 PM org.apache.catalina.startup.Catalina load<br /> INFO: Initialization processed in 21829 ms<br /> Feb 19, 2013 4:52:12 PM org.apache.catalina.core.StandardService start<br /> INFO: Starting service Catalina<br /> Feb 19, 2013 4:52:12 PM org.apache.catalina.core.StandardEngine start<br /> INFO: Starting Servlet Engine: Apache Tomcat/6.0.32<br /> Feb 19, 2013 4:52:15 PM org.apache.catalina.core.StandardContext listenerStart<br /> SEVERE: Error configuring application listener of class org.springframework.web.context.ContextLoaderListener<br /> java.lang.ClassNotFoundException: org.springframework.web.context.ContextLoaderListener<br /> at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1680)<br /> at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)<br /> at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4148)<br /> at org.apache.catalina.core.StandardContext.start(StandardContext.java:4704)<br /> at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)<br /> at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)<br /> at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)<br /> at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-127648"><div id="dsq-comment-header-127648" class="dsq-comment-header"> <cite id="dsq-cite-127648"> <span id="dsq-author-user-127648">Umair Aslam</span> </cite></div><div id="dsq-comment-body-127648" class="dsq-comment-body"><div id="dsq-comment-message-127648" class="dsq-comment-message"><p>This tutorial is quiet outdated now. Can you please update it Spring 3 and Hibernate 4</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-127274"><div id="dsq-comment-header-127274" class="dsq-comment-header"> <cite id="dsq-cite-127274"> <span id="dsq-author-user-127274">SALAH EDDINE</span> </cite></div><div id="dsq-comment-body-127274" class="dsq-comment-body"><div id="dsq-comment-message-127274" class="dsq-comment-message"><p>Hey, do you have an idea about this problem?? I can not unlock it demoralizes me: s</p><p>Thank you in advance</p><p>org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#8216;sessionFactory&#8217; defined in ServletContext resource [/WEB-INF/classes/config/spring/HibernateSessionFactory.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property &#8216;annotatedClasses&#8217; of bean class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]: Bean property &#8216;annotatedClasses&#8217; is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-127275"><div id="dsq-comment-header-127275" class="dsq-comment-header"> <cite id="dsq-cite-127275"> <span id="dsq-author-user-127275">SALAH EDDINE</span> </cite></div><div id="dsq-comment-body-127275" class="dsq-comment-body"><div id="dsq-comment-message-127275" class="dsq-comment-message"><p>this is resolved I should use  AnnotationSessionFactoryBean &#8211; Tks Mkyong For All</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-126726"><div id="dsq-comment-header-126726" class="dsq-comment-header"> <cite id="dsq-cite-126726"> <span id="dsq-author-user-126726">Varun</span> </cite></div><div id="dsq-comment-body-126726" class="dsq-comment-body"><div id="dsq-comment-message-126726" class="dsq-comment-message"><p>Hi Mkyong,</p><p>A very good example to understand the Spring + hibernate integration.<br /> But as i was trying to build your project following errors are coming. Please help</p><p>D:\Project\SpringHibernateAnnotationExample\src\main\java\com\mkyong\util\CustomHibernateDaoSupport.java:[9,2] error: annotations are not supported in -source 1.3</p><p>could not parse error message:   (use -source 5 or higher to enable annotations)<br /> D:\Project\SpringHibernateAnnotationExample\src\main\java\com\mkyong\stock\bo\impl\StockBoImpl.java:10: error: annotations are not supported in -source 1.3<br /> @Service(&#8220;stockBo&#8221;)<br /> ^</p><p>could not parse error message:   (use -source 5 or higher to enable annotations)<br /> D:\Project\SpringHibernateAnnotationExample\src\main\java\com\mkyong\stock\dao\impl\StockDaoImpl.java:11: error: annotations are not supported in -source 1.3<br /> @Repository(&#8220;stockDao&#8221;)<br /> ^</p><p>could not parse error message:   (use -source 5 or higher to enable annotations)<br /> D:\Project\SpringHibernateAnnotationExample\src\main\java\com\mkyong\stock\model\Stock.java:6: error: static import declarations are not supported in -source 1.3<br /> import static javax.persistence.GenerationType.IDENTITY;<br /> ^</p><p>could not parse error message:   (use -source 5 or higher to enable static import declarations)<br /> D:\Project\SpringHibernateAnnotationExample\src\main\java\com\mkyong\stock\model\Stock.java:11: error: annotations are not supported in -source 1.3<br /> @Entity<br /> ^</p><p>Please help me in this direction.</p><p>Thanks<br /> Varun</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-125981"><div id="dsq-comment-header-125981" class="dsq-comment-header"> <cite id="dsq-cite-125981"> <span id="dsq-author-user-125981">Hariharan</span> </cite></div><div id="dsq-comment-body-125981" class="dsq-comment-body"><div id="dsq-comment-message-125981" class="dsq-comment-message"><p>Nice Tutorial.</p><p>But can&#8217;t able to download the maven dependencies. Mr.Yong, please kindly update this tutorial with latest repository urls.</p><p>Thanks,<br /> Hariharan</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-125012"><div id="dsq-comment-header-125012" class="dsq-comment-header"> <cite id="dsq-cite-125012"> <span id="dsq-author-user-125012">siva</span> </cite></div><div id="dsq-comment-body-125012" class="dsq-comment-body"><div id="dsq-comment-message-125012" class="dsq-comment-message"><p>Thanks you are publishing very good tutorial all the time.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-124523"><div id="dsq-comment-header-124523" class="dsq-comment-header"> <cite id="dsq-cite-124523"> <span id="dsq-author-user-124523">Zoubir Oussama</span> </cite></div><div id="dsq-comment-body-124523" class="dsq-comment-body"><div id="dsq-comment-message-124523" class="dsq-comment-message"><p>good tutorial Thanks for sharing the information about JAVA EE in you&#8217;re webSite</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-122571"><div id="dsq-comment-header-122571" class="dsq-comment-header"> <cite id="dsq-cite-122571"> <span id="dsq-author-user-122571">Matt</span> </cite></div><div id="dsq-comment-body-122571" class="dsq-comment-body"><div id="dsq-comment-message-122571" class="dsq-comment-message"><p>This is a very good tutorial, I was able to follow it within Netbeans.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-122376"><div id="dsq-comment-header-122376" class="dsq-comment-header"> <cite id="dsq-cite-122376"> <span id="dsq-author-user-122376">chandan kumar</span> </cite></div><div id="dsq-comment-body-122376" class="dsq-comment-body"><div id="dsq-comment-message-122376" class="dsq-comment-message"><p>i got my solution&#8230;.</p><p>thank u for this gr8 example&#8230;&#8230;</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-122606"><div id="dsq-comment-header-122606" class="dsq-comment-header"> <cite id="dsq-cite-122606"> <span id="dsq-author-user-122606">Newbee</span> </cite></div><div id="dsq-comment-body-122606" class="dsq-comment-body"><div id="dsq-comment-message-122606" class="dsq-comment-message"><p>Could you please share the solution for this Error??</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-122827"><div id="dsq-comment-header-122827" class="dsq-comment-header"> <cite id="dsq-cite-122827"> <span id="dsq-author-user-122827">Shriram Balasubramanian</span> </cite></div><div id="dsq-comment-body-122827" class="dsq-comment-body"><div id="dsq-comment-message-122827" class="dsq-comment-message"><p>Thanks a lot very nice tutorial.</p></div></div></li></ul></li></ul></li></ul><div class="navigation"><div class="nav-previous"><a href="http://www.mkyong.com/spring/maven-spring-hibernate-annotation-mysql-example/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div><div class="nav-next"></div></div></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/spring/maven-spring-hibernate-annotation-mysql-example/';var disqus_identifier='4049 http://www.mkyong.com/?p=4049';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Maven + (Spring + Hibernate) Annotation + MySql Example";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=4049';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Spring Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/spring-tutorials\/",'date':"04\/01\/2010 11:11 AM",'excerpt':"[...] Maven + (Spring + Hibernate) Annotation + MySql Example A simple project of using Spring and Hibernate (annotation version). &hellip;",'type':"pingback"},{'author_name':"&raquo; Blog Archive &raquo; nice hibernate annotation tutorial",'author_url':"http:\/\/www.iniy.org\/?p=332",'date':"03\/28\/2011 04:26 AM",'excerpt':"[...] http:\/\/www.mkyong.com\/spring\/maven-spring-hibernate-annotation-mysql-example\/   March 27th, 2011 in Misc [...] ",'type':"pingback"},{'author_name':"Spring, Hibernate y Annotations",'author_url':"http:\/\/www.programania.net\/diseno-de-software\/spring-hibernate-y-annotations\/",'date':"02\/21\/2012 03:39 PM",'excerpt':"[...] http:\/\/www.mkyong.com\/spring\/maven-spring-hibernate-annotation-mysql-example\/ [...] ",'type':"pingback"},{'author_name':"Spring and MVC proper project structure | Jisku.com - Developers Network",'author_url':"http:\/\/jisku.com\/blog\/2012\/09\/spring-and-mvc-proper-project-structure\/",'date':"09\/13\/2012 08:47 AM",'excerpt':"[...] what makes me place somewhere DAO and BO interfaces and implementations. I have read this article link and the &hellip;",'type':"pingback"},{'author_name':"Technical Manual | COMP6051 &#8211; Homies",'author_url':"https:\/\/blog.soton.ac.uk\/comp6051-homies\/2013\/04\/22\/technical-manual\/",'date':"04\/22\/2013 11:42 AM",'excerpt':"[...] http:\/\/www.mkyong.com\/spring\/maven-spring-hibernate-annotation-mysql-example\/ [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/spring\/maven-spring-hibernate-annotation-mysql-example\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="4049" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>