<!DOCTYPE html><html lang="en"><title>Hibernate &#8211; dynamic-insert attribute example</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='How to read an image from file or URL' href='http://www.mkyong.com/java/how-to-read-an-image-from-file-or-url/' /><link rel='next' title='Hibernate &#8211; dynamic-update attribute example' href='http://www.mkyong.com/hibernate/hibernate-dynamic-update-attribute-example/' /><link rel='shortlink' href='http://www.mkyong.com/?p=1149' /><meta name="keywords" content="hibernate" /><link rel="canonical" href="http://www.mkyong.com/hibernate/hibernate-dynamic-insert-attribute-example/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-1149"><header><h1> Hibernate &#8211; dynamic-insert attribute example</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-01-28T13:35:06+00:00">January 28, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : January 15, 2010 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><h3>What is dynamic-insert</h3><p>The dynamic-insert attribute tells Hibernate whether to include null properties in the SQL INSERT statement. Let explore some examples to understand more clear about it.</p><h3>Dynamic-insert example</h3><h4>1. dynamic-insert=false</h4><p>The default value of dynamic-insert is false, which means <strong>include null properties </strong> in the Hibernate&#8217;s SQL INSERT statement.</p><p>For example, try set some null values to an object properties and save it.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">        StockTransaction stockTran <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StockTransaction<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        <span style="color: #666666; font-style: italic;">//stockTran.setPriceOpen(new Float(&quot;1.2&quot;));</span>
        <span style="color: #666666; font-style: italic;">//stockTran.setPriceClose(new Float(&quot;1.1&quot;));</span>
        <span style="color: #666666; font-style: italic;">//stockTran.setPriceChange(new Float(&quot;10.0&quot;));</span>
        stockTran.<span style="color: #006633;">setVolume</span><span style="color: #009900;">&#40;</span>2000000L<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockTran.<span style="color: #006633;">setDate</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Date</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockTran.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stockTran<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><p>Turn on the Hibernate &#8220;show_sql&#8221; to true, you will see the following insert SQL statement.</p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;">Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyong<span style="color: #66cc66;">.</span>stock_transaction
        <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">DATE</span><span style="color: #66cc66;">,</span> PRICE_CHANGE<span style="color: #66cc66;">,</span> PRICE_CLOSE<span style="color: #66cc66;">,</span> PRICE_OPEN<span style="color: #66cc66;">,</span> STOCK_ID<span style="color: #66cc66;">,</span> VOLUME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span></pre></div></div><p><strong>Hibernate will generate the unnecessary columns</strong> (PRICE_CHANGE, PRICE_CLOSE, PRICE_OPEN) for the insertion.</p><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. dynamic-insert=true</h4><p>If set the dynamic-insert to true, which means <strong>exclude null property values</strong> in the Hibernate&#8217;s SQL INSERT statement.</p><p>For example, try set some null values to an object properties and save it again.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">        StockTransaction stockTran <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StockTransaction<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        <span style="color: #666666; font-style: italic;">//stockTran.setPriceOpen(new Float(&quot;1.2&quot;));</span>
        <span style="color: #666666; font-style: italic;">//stockTran.setPriceClose(new Float(&quot;1.1&quot;));</span>
        <span style="color: #666666; font-style: italic;">//stockTran.setPriceChange(new Float(&quot;10.0&quot;));</span>
        stockTran.<span style="color: #006633;">setVolume</span><span style="color: #009900;">&#40;</span>2000000L<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockTran.<span style="color: #006633;">setDate</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Date</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockTran.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stockTran<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><p>Turn on the Hibernate &#8220;show_sql&#8221; to true. You will see the different insert SQL statement.</p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;">Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyong<span style="color: #66cc66;">.</span>stock_transaction
        <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">DATE</span><span style="color: #66cc66;">,</span> STOCK_ID<span style="color: #66cc66;">,</span> VOLUME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span></pre></div></div><p><strong>Hibernate will generate only the necessary columns</strong> (DATE, STOCK_ID, VOLUME) for the insertion.</p><h3>Performance issue</h3><p>In certain situations, such as a very large table with hundreds of columns (legacy design), or a table contains extremely large data volume, insert something not necessary definitely will drop down your system performance.</p><h3>How to configure it</h3><p>You can configure the dynamic-insert properties value through annotation or XML mapping file.</p><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>1. Annotation</h4><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock_transaction&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyong&quot;</span><span style="color: #009900;">&#41;</span>
@org.<span style="color: #006633;">hibernate</span>.<span style="color: #006633;">annotations</span>.<span style="color: #003399;">Entity</span><span style="color: #009900;">&#40;</span>
		dynamicInsert <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>
<span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockTransaction <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span></pre></div></div><h4>2. XML mapping</h4><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> ... <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock_transaction&quot;</span> <span style="color: #000066;">catalog</span>=<span style="color: #ff0000;">&quot;mkyong&quot;</span> <span style="color: #000066;">dynamic-insert</span>=<span style="color: #ff0000;">&quot;true&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;tranId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;TRAN_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;identity&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h3>Conclusion</h3><p>This little &#8220;<strong>dynamic-insert</strong>&#8221; tweak may increase your system performance, and highly recommends to do it. However, one question in my mind is why Hibernate set it to false by default?</p><h4>Follow up</h4><p>1. Hibernate &#8211; <a href="http://www.mkyong.com/hibernate/hibernate-dynamic-update-attribute-example/" target="_blank">dynamic-update attribute</a> example</p><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/" title="Spring Security + Hibernate XML Example">Spring Security + Hibernate XML Example</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-org-hibernate-service-jta-platform-spi-jtaplatform/" title="java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform">java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-component-mapping-example/" title="Hibernate component mapping example">Hibernate component mapping example</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/" title="Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) ">Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) </a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/" title="Hibernate – Many-to-Many example (Annotation)">Hibernate – Many-to-Many example (Annotation)</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/google-app-engine-tutorial/' title='GAE Tutorials'><div class='images img-border img-gae'></div></a></li><li><a href='/tutorials/quartz-scheduler-tutorial/' title='Quartz Scheduler Tutorials'><div class='images img-border img-quartz'></div></a></li><li><a href='/tutorials/jquery-tutorials/' title='jQuery Tutorials'><div class='images img-border img-jquery'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-135995"><div id="dsq-comment-header-135995" class="dsq-comment-header"> <cite id="dsq-cite-135995"> http://www.damiencuvillier.com <span id="dsq-author-user-135995">Damien</span> </cite></div><div id="dsq-comment-body-135995" class="dsq-comment-body"><div id="dsq-comment-message-135995" class="dsq-comment-message"><p>I still have the problem.<br /> @DynamicInsert seems not working with your settings<br /> <a href="http://stackoverflow.com/questions/6328613/how-to-set-boolean-value-in-hibernate/17589200#17589200" rel="nofollow">http://stackoverflow.com/questions/6328613/how-to-set-boolean-value-in-hibernate/17589200#17589200</a></p><p>Any tip ?</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-132770"><div id="dsq-comment-header-132770" class="dsq-comment-header"> <cite id="dsq-cite-132770"> <span id="dsq-author-user-132770">Arun</span> </cite></div><div id="dsq-comment-body-132770" class="dsq-comment-body"><div id="dsq-comment-message-132770" class="dsq-comment-message"><p>Hi<br /> I have mapped dynamic-insert=&#8221;true&#8221; and actualElementAmount, remainingAmount are not set.<br /> Why it is checking for checkNullability?<br /> It should generate<br /> insert into ChargeElement(term) values (1)</p><p>If i am missing something?</p><p>//test<br /> ChargeElementDo chargeElementDo = new ChargeElementDo();<br /> chargeElementDo.setTerm(1);</p><p> sess.saveOrUpdate(chargeElementDo);</p><p>Note: actualElementAmount and RemainingAmount is not null and default zero in sql server 2005</p><p>org.hibernate.PropertyValueException: not-null property references a null or transient value: my.hibernate.study.domain.ChargeElementDo.actualElementAmount<br /> at org.hibernate.engine.Nullability.checkNullability(Nullability.java:72)<br /> at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:290)<br /> at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:181)<br /> at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:107)<br /> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:187)<br /> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:172)<br /> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:94)<br /> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)<br /> at org.hibernate.impl.SessionImpl.fireSaveOrUpdate(SessionImpl.java:507)<br /> at org.hibernate.impl.SessionImpl.saveOrUpdate(SessionImpl.java:499)<br /> at org.hibernate.impl.SessionImpl.saveOrUpdate(SessionImpl.java:495)<br /> at my.hibernate.study.test.ChargeElementTest.main(ChargeElementTest.java:28)</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-131355"><div id="dsq-comment-header-131355" class="dsq-comment-header"> <cite id="dsq-cite-131355"> http://N <span id="dsq-author-user-131355">Ajith</span> </cite></div><div id="dsq-comment-body-131355" class="dsq-comment-body"><div id="dsq-comment-message-131355" class="dsq-comment-message"><p>We had the same question, too on why hibernate defaults dynamic_update and dynamic_insert to false. After close analysis, we found that the AbstractBatcher batch the SQLs based on the parameters in the insert/update. If you use dynamic insert/update false, it will batch everything for one table and there will be only that many DB hits as the number of tables that you are updating or inserting into. Else the number of batches will increase depending on how the parameters on these are. For example, if you have two different update statements in the same table, that updates two different fields on it, setting dynamic update to true will cause hibernate to sent two different update scripts in two batches, and setting it to false will cause hibernate to send both them in one batch!!!</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-131061"><div id="dsq-comment-header-131061" class="dsq-comment-header"> <cite id="dsq-cite-131061"> <span id="dsq-author-user-131061">oscar</span> </cite></div><div id="dsq-comment-body-131061" class="dsq-comment-body"><div id="dsq-comment-message-131061" class="dsq-comment-message"><p>now for Hibernate 4.0+ only works @DynamicUpdate and @DynamicInsert</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-125838"><div id="dsq-comment-header-125838" class="dsq-comment-header"> <cite id="dsq-cite-125838"> <span id="dsq-author-user-125838">Vikram</span> </cite></div><div id="dsq-comment-body-125838" class="dsq-comment-body"><div id="dsq-comment-message-125838" class="dsq-comment-message"><p>If there is performance issue, why they did not have it as default true?????????</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-11122"><div id="dsq-comment-header-11122" class="dsq-comment-header"> <cite id="dsq-cite-11122"> http://www.selmangun.com <span id="dsq-author-user-11122">Selman</span> </cite></div><div id="dsq-comment-body-11122" class="dsq-comment-body"><div id="dsq-comment-message-11122" class="dsq-comment-message"><p>Thanks for the tutorials. Great work</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-11057"><div id="dsq-comment-header-11057" class="dsq-comment-header"> <cite id="dsq-cite-11057"> <span id="dsq-author-user-11057">Stephane</span> </cite></div><div id="dsq-comment-body-11057" class="dsq-comment-body"><div id="dsq-comment-message-11057" class="dsq-comment-message"><p>For a MySql schema with 100 tables, each having some NOT NULL DEFAULT &#8221; attributes, is it better to use dynamic insert true, or to make sure the persisted object contains empty strings ?</p><p>With the dynamic-insert attribute set to true, the object can be created and persisted like:</p><p>User user = new User();<br /> user.setEmail(&#8220;<a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="2e43475a5a6e574f464141005d4b">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script>&#8221;);<br /> user.setPassword(&#8220;apassword&#8221;);<br /> user = userDao.makePersistent(user);</p><p>But with the dynamic-insert attribute set to false, the object must be created and persisted like:</p><p>User user = new User();<br /> user.setEmail(&#8220;<a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="c5a8acb1b185bca4adaaaaebb6a0">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script>&#8221;);<br /> user.setPassword(&#8220;apassword&#8221;);<br /> user.setFirstname(&#8220;&#8221;);<br /> user.setLastname(&#8220;&#8221;);<br /> user.setCompany(&#8220;&#8221;);<br /> user = userDao.makePersistent(user);</p><p>In the second case, all the object properties need to be explicitly set to some non null values.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-6888"><div id="dsq-comment-header-6888" class="dsq-comment-header"> <cite id="dsq-cite-6888"> http://collegedatingrules.com <span id="dsq-author-user-6888">college dating rules</span> </cite></div><div id="dsq-comment-body-6888" class="dsq-comment-body"><div id="dsq-comment-message-6888" class="dsq-comment-message"><p>Can&#8217;t think of better ways to write this post , did a great job with this topic.</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/hibernate-tutorials/' rel='external nofollow' class='url'>Hibernate Tutorials | Tutorials</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-5889"><div id="dsq-comment-header-5889" class="dsq-comment-header"> <cite id="dsq-cite-5889"> <span id="dsq-author-user-5889">Amit</span> </cite></div><div id="dsq-comment-body-5889" class="dsq-comment-body"><div id="dsq-comment-message-5889" class="dsq-comment-message"><p>good article explaining the basics. I tried to read more about why the default setting for dynamic-insert &amp; dynamic-update is false and I found that setting the property to true could degrade the performance in some cases. Here&#8217;s the extract from Hibernate in action<br /> &#8220;Enabling either of these settings will cause Hibernate to generate some SQL at runtime, instead of using the SQL cached at startup time. The performance cost is usually small.&#8221;</p><p>This could be one of the reasons why the default setting is false.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-5904"><div id="dsq-comment-header-5904" class="dsq-comment-header"> <cite id="dsq-cite-5904"> http://www.mkyong.com <span id="dsq-author-user-5904">mkyong</span> </cite></div><div id="dsq-comment-body-5904" class="dsq-comment-body"><div id="dsq-comment-message-5904" class="dsq-comment-message"><p>&#8220;setting the property to true could degrade the performance in some cases&#8221;&#8230;</p><p>It&#8217;s just doesn&#8217;t make sense? The dynamic-insert=true will just ignore the unnecessary columns, how could it generate addition some SQLs statement at runtime? May be caused by Hibernate internal mechanism?</p><p>Did &#8216;Hibernate in action&#8217; mention in what cases or what addition SQLs statement will generated at runtime?</p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-5975"><div id="dsq-comment-header-5975" class="dsq-comment-header"> <cite id="dsq-cite-5975"> <span id="dsq-author-user-5975">Marco</span> </cite></div><div id="dsq-comment-body-5975" class="dsq-comment-body"><div id="dsq-comment-message-5975" class="dsq-comment-message"><p>Prepared statements, maybe?</p></div></div></li><li class="comment odd alt depth-3" id="dsq-comment-97697"><div id="dsq-comment-header-97697" class="dsq-comment-header"> <cite id="dsq-cite-97697"> http://don.dream-in-color.net <span id="dsq-author-user-97697">Don Hosek</span> </cite></div><div id="dsq-comment-body-97697" class="dsq-comment-body"><div id="dsq-comment-message-97697" class="dsq-comment-message"><p>Consider this case: You have an entity with<br /> String a;<br /> String b;<br /> String c;</p><p>with dynamic-insert=true, it will generate and cache a single insert statement. But if we have dynamic-insert=false, it has to generate a new SQL insert statement for each case of one of the fields null (as many as 7=2^8-1 additional cases)</p></div></div></li></ul></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-dynamic-update-attribute-example/' rel='external nofollow' class='url'>Hibernate &#8211; dynamic-update attribute example | Hibernate</a></p></li></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/hibernate/hibernate-dynamic-insert-attribute-example/';var disqus_identifier='1149 http://www.mkyong.com/?p=1149';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Hibernate &#8211; dynamic-insert attribute example";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=1149';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Hibernate &#8211; dynamic-update attribute example | Hibernate",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-dynamic-update-attribute-example\/",'date':"01\/29\/2010 01:39 AM",'excerpt':"[...] Hibernate &#8211; dynamic-insert attribute [...] ",'type':"pingback"},{'author_name':"Hibernate Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/hibernate-tutorials\/",'date':"03\/31\/2010 08:23 AM",'excerpt':"[...] dynamic-insert attribute example Using dynamic-insert to avoid the include unmodified properties in the SQL INSERT statement. [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-dynamic-insert-attribute-example\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="1149" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>