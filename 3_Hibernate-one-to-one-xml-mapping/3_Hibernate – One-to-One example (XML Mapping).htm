<!DOCTYPE html><html lang="en"><title>Hibernate – One-to-One example (XML Mapping)</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Hibernate &#8211; Cascade example (save, update, delete and delete-orphan)' href='http://www.mkyong.com/hibernate/hibernate-cascade-example-save-update-delete-and-delete-orphan/' /><link rel='next' title='Different between session.get() and session.load()' href='http://www.mkyong.com/hibernate/different-between-session-get-and-session-load/' /><link rel='shortlink' href='http://www.mkyong.com/?p=3216' /><meta name="keywords" content="hibernate,one-to-one" /><link rel="canonical" href="http://www.mkyong.com/hibernate/hibernate-one-to-one-relationship-example/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-3216"><header><h1> Hibernate – One-to-One example (XML Mapping)</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-02-03T13:48:52+00:00">February 3, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : June 10, 2011 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><blockquote><p>A one-to-one relationships occurs when one entity is related to exactly one occurrence in another entity.</p></blockquote><p>In this tutorial, we show you how to work with one-to-one table relationship in Hibernate, via XML mapping file (hbm).</p><p>Tools and technologies used in this tutorials :</p><ol><li>Hibernate 3.6.3.Final</li><li>MySQL 5.1.15</li><li>Maven 3.0.3</li><li>Eclipse 3.6</li></ol><h4>Project Structure</h4><p>See the final project structure of this tutorial.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2010/02/one-to-one-relationship-project-structure.png" alt="one to one project structure" title="one-to-one-relationship-project-structure" width="505" height="482" /></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>Project Dependency</h4><p>Get <strong>hibernate.jar</strong> from JBoss repository, Maven will take care all the related dependencies for you.</p><p><em>File : pom.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;project</span> ...<span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;repositories<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;repository<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>JBoss repository<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>http://repository.jboss.org/nexus/content/groups/public/<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/repository<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/repositories<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #808080; font-style: italic;">&lt;!-- MySQL database driver --&gt;</span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mysql<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mysql-connector-java<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>5.1.15<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>org.hibernate<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate-core<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.6.3.Final<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>javassist<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>javassist<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.12.1.GA<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/project<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>1. &#8220;One-to-one&#8221; table relationship</h4><p>A <strong>one-to-one</strong> relationship table design, a STOCK table contains exactly one record in STOCK_DETAIL table. Both tables have the same Stock_Id as primary key. In STOCK_DETAIL table, Stock_Id is the primary key and also a foreign key to STOCK table. This is the common way of define &#8220;one-to-one&#8221; table relationship.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2010/02/one-to-one-relationship.png" alt="one to one relationship" title="one-to-one-relationship" width="484" height="160" /></div><p>To get the STOCK and STOCK_DETAIL table script, refer to this &#8220;<a href="http://www.mkyong.com/mysql/how-to-define-one-to-one-relationship-in-mysql/">one to one table relationship in MySQL</a>&#8221; article.</p><h4>2. Hibernate Model Class</h4><p>Create two model classes &#8211; <code>Stock.java</code> and <code>StockDetail.java</code>, to represent the above tables.</p><p><em>File : Stock.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> StockDetail stockDetail<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//constructor &amp; getter and setter methods</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>File : StockDetail.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockDetail <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Stock stock<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> compName<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> compDesc<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> remark<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Date</span> listedDate<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//constructor &amp; getter and setter methods</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><h4>3. Hibernate XML Mapping</h4><p>Now, create two Hibernate mapping files (hbm) &#8211; <code>Stock.hbm.xml</code> and <code>StockDetail.hbm.xml</code>.</p><p><em>File : Stock.hbm.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-mapping PUBLIC &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;</span>
<span style="color: #808080; font-style: italic;">&lt;!-- Generated 25 April 2011 7:52:33 PM by Hibernate Tools 3.4.0.CR1 --&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Stock&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock&quot;</span> <span style="color: #000066;">catalog</span>=<span style="color: #ff0000;">&quot;mkyongdb&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;identity&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockCode&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_CODE&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;10&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockName&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_NAME&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;20&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;one-to-one</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockDetail&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.StockDetail&quot;</span></span>
<span style="color: #009900;">			<span style="color: #000066;">cascade</span>=<span style="color: #ff0000;">&quot;save-update&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span><span style="color: #000000; font-weight: bold;">&lt;/one-to-one<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p><em>File : StockDetail.hbm.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-mapping PUBLIC &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;</span>
<span style="color: #808080; font-style: italic;">&lt;!-- Generated 25 April 2011 7:52:33 PM by Hibernate Tools 3.4.0.CR1 --&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.StockDetail&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock_detail&quot;</span></span>
<span style="color: #009900;">		<span style="color: #000066;">catalog</span>=<span style="color: #ff0000;">&quot;mkyongdb&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;foreign&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;param</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;property&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>stock<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/param<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/generator<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;one-to-one</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stock&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Stock&quot;</span></span>
<span style="color: #009900;">			<span style="color: #000066;">constrained</span>=<span style="color: #ff0000;">&quot;true&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span><span style="color: #000000; font-weight: bold;">&lt;/one-to-one<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;compName&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;COMP_NAME&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;100&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;compDesc&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;COMP_DESC&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;remark&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;REMARK&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;listedDate&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;date&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;LISTED_DATE&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;10&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><div class="note"> <strong>Note</strong><br /> The main difficulty in this <strong>one-to-one</strong> relationship is ensuring both are assigned the same primary key. In StockDetail.hbm.xml, a special <strong>foreign identifier generator</strong> is declared, it will know get the primary key value from STOCK table. With constrained=&#8221;true&#8221;, it ensure the Stock must exists.</div><h4>4. Hibernate Configuration File</h4><p>Puts <code>Stock.hbm.xml</code> and <code>StockDetail.hbm.xml</code> in your Hibernate configuration file, and also MySQL connection details.<br /> <em><br /> File : hibernate.cfg.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span> <span style="color: #000066;">encoding</span>=<span style="color: #ff0000;">&quot;utf-8&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-configuration PUBLIC</span>
<span style="color: #00bbdd;">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-configuration<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;session-factory<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.driver_class&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>com.mysql.jdbc.Driver<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.url&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>jdbc:mysql://localhost:3306/mkyongdb<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.username&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>root<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.password&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>password<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.dialect&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>org.hibernate.dialect.MySQLDialect<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;show_sql&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>true<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping</span> <span style="color: #000066;">resource</span>=<span style="color: #ff0000;">&quot;com/mkyong/stock/Stock.hbm.xml&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping</span> <span style="color: #000066;">resource</span>=<span style="color: #ff0000;">&quot;com/mkyong/stock/StockDetail.hbm.xml&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/session-factory<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-configuration<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>5. Run It</h4><p>Run it, Hibernate will insert a row into the STOCK table and a row into the STOCK_DETAIL table.</p><p><em>File : App.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Date</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.Session</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.Stock</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.StockDetail</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.util.HibernateUtil</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Hibernate one to one (XML mapping)&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		Session session <span style="color: #339933;">=</span> HibernateUtil.<span style="color: #006633;">getSessionFactory</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">openSession</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		Stock stock <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		stock.<span style="color: #006633;">setStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;4715&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		stock.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;GENM&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		StockDetail stockDetail <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StockDetail<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		stockDetail.<span style="color: #006633;">setCompName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;GENTING Malaysia&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		stockDetail.<span style="color: #006633;">setCompDesc</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Best resort in the world&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		stockDetail.<span style="color: #006633;">setRemark</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Nothing Special&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		stockDetail.<span style="color: #006633;">setListedDate</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Date</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		stock.<span style="color: #006633;">setStockDetail</span><span style="color: #009900;">&#40;</span>stockDetail<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		stockDetail.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		session.<span style="color: #006633;">getTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Done&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>Output</em></p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;">Hibernate one <span style="color: #993333; font-weight: bold;">TO</span> one <span style="color: #66cc66;">&#40;</span>XML mapping<span style="color: #66cc66;">&#41;</span>
Hibernate: <span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #993333; font-weight: bold;">INTO</span> mkyongdb<span style="color: #66cc66;">.</span>stock <span style="color: #66cc66;">&#40;</span>STOCK_CODE<span style="color: #66cc66;">,</span> STOCK_NAME<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">VALUES</span> <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: <span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #993333; font-weight: bold;">INTO</span> mkyongdb<span style="color: #66cc66;">.</span>stock_detail 
<span style="color: #66cc66;">&#40;</span>COMP_NAME<span style="color: #66cc66;">,</span> COMP_DESC<span style="color: #66cc66;">,</span> REMARK<span style="color: #66cc66;">,</span> LISTED_DATE<span style="color: #66cc66;">,</span> STOCK_ID<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">VALUES</span> <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Done</pre></div></div><div class="note"> <strong>Hibernate Annotation</strong><br /> For one-to-one in Hibernate annotation, please refer to this <a href="http://www.mkyong.com/hibernate/hibernate-one-to-one-relationship-example-annotation/">example</a></div><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/01/Hibernate-one-to-one-xml-mapping.zip'>Hibernate-one-to-one-xml-mapping.zip</a> (10KB)</div><h4>Reference</h4><ol><li><a href="http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html/mapping.html#mapping-declaration-onetoone">Hibernate Documentation &#8211; one to one relationship</a></li></ol><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a> <a href="http://www.mkyong.com/tag/one-to-one/" rel="tag">one-to-one</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/hibernate/hibernate-one-to-one-relationship-example-annotation/" title="Hibernate – One-to-One example (Annotation)">Hibernate – One-to-One example (Annotation)</a></li><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/" title="Spring Security + Hibernate XML Example">Spring Security + Hibernate XML Example</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-org-hibernate-service-jta-platform-spi-jtaplatform/" title="java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform">java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-component-mapping-example/" title="Hibernate component mapping example">Hibernate component mapping example</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/" title="Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) ">Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) </a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/java-mongodb-tutorials/' title='Java MongoDB Tutorials'><div class='images img-border img-mongodb'></div></a></li><li><a href='/tutorials/maven-tutorials/' title='Maven Tutorials'><div class='images img-border img-maven'></div></a></li><li><a href='/tutorials/struts-2-tutorials/' title='Struts 2.x Tutorials'><div class='images img-border img-struts2'></div></a></li><li><a href='/tutorials/jsf-2-0-tutorials/' title='JSF 2 Tutorials'><div class='images img-border img-jsf2'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-137442"><div id="dsq-comment-header-137442" class="dsq-comment-header"> <cite id="dsq-cite-137442"> <span id="dsq-author-user-137442">John</span> </cite></div><div id="dsq-comment-body-137442" class="dsq-comment-body"><div id="dsq-comment-message-137442" class="dsq-comment-message"><p>I used the above said approach in my code for one-to-one relationship. Getting the following exception<br /> Caused by: org.hibernate.NonUniqueObjectException: a different object with the same identifier value was already associated with the session</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-136899"><div id="dsq-comment-header-136899" class="dsq-comment-header"> <cite id="dsq-cite-136899"> <span id="dsq-author-user-136899">pappy cami</span> </cite></div><div id="dsq-comment-body-136899" class="dsq-comment-body"><div id="dsq-comment-message-136899" class="dsq-comment-message"><p>very good tutorial for the beginer like me &#8230; Thank&#8217;s a lot</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-135273"><div id="dsq-comment-header-135273" class="dsq-comment-header"> <cite id="dsq-cite-135273"> <span id="dsq-author-user-135273">raju muddana</span> </cite></div><div id="dsq-comment-body-135273" class="dsq-comment-body"><div id="dsq-comment-message-135273" class="dsq-comment-message"><p>Add search feture to his site!!!</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-134580"><div id="dsq-comment-header-134580" class="dsq-comment-header"> <cite id="dsq-cite-134580"> <span id="dsq-author-user-134580">malavika</span> </cite></div><div id="dsq-comment-body-134580" class="dsq-comment-body"><div id="dsq-comment-message-134580" class="dsq-comment-message"><p>Hello..<br /> I&#8217;m able to insert row in one table but not into the other one which was referenced from the primary key..Can you help me?</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-134505"><div id="dsq-comment-header-134505" class="dsq-comment-header"> <cite id="dsq-cite-134505"> <span id="dsq-author-user-134505">jmegonzalez</span> </cite></div><div id="dsq-comment-body-134505" class="dsq-comment-body"><div id="dsq-comment-message-134505" class="dsq-comment-message"><p>Hi,</p><p>In this example, it has been forced to exist the detail row for every stock?<br /> Or, by the other side, only it has been created one detail row for every stock with detail elements?</p><p>What would happen if the Stock object will have a null stock detail?</p><p>Thank you for your help!</p><p>Regards.</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-134506"><div id="dsq-comment-header-134506" class="dsq-comment-header"> <cite id="dsq-cite-134506"> <span id="dsq-author-user-134506">jmegonzalez</span> </cite></div><div id="dsq-comment-body-134506" class="dsq-comment-body"><div id="dsq-comment-message-134506" class="dsq-comment-message"><p>I forgot asking for the way to save a stock without stock_detail. Thanks.</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-132793"><div id="dsq-comment-header-132793" class="dsq-comment-header"> <cite id="dsq-cite-132793"> <span id="dsq-author-user-132793">venkateswarlu</span> </cite></div><div id="dsq-comment-body-132793" class="dsq-comment-body"><div id="dsq-comment-message-132793" class="dsq-comment-message"><p>I like your way of explanation.</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-133134"><div id="dsq-comment-header-133134" class="dsq-comment-header"> <cite id="dsq-cite-133134"> <span id="dsq-author-user-133134">sujit</span> </cite></div><div id="dsq-comment-body-133134" class="dsq-comment-body"><div id="dsq-comment-message-133134" class="dsq-comment-message"><p>why can&#8217;t we use JDBC batch updates with HQL queries? not related to this one to one but looking for this</p></div></div></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-132302"><div id="dsq-comment-header-132302" class="dsq-comment-header"> <cite id="dsq-cite-132302"> <span id="dsq-author-user-132302">Naresh</span> </cite></div><div id="dsq-comment-body-132302" class="dsq-comment-body"><div id="dsq-comment-message-132302" class="dsq-comment-message"><p>Hi MkYong,</p><p>How to make xml one to one association with composite key having different column names in parent and child table.<br /> Regards,<br /> Naresh</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-132304"><div id="dsq-comment-header-132304" class="dsq-comment-header"> <cite id="dsq-cite-132304"> <span id="dsq-author-user-132304">Naresh</span> </cite></div><div id="dsq-comment-body-132304" class="dsq-comment-body"><div id="dsq-comment-message-132304" class="dsq-comment-message"><p>Detailed explanation for the above posted question.<br /> I have two tables with composite id having one to one relationship.<br /> Table One : PK Columns : column1, column2<br /> Table Two : PK Columns : column3, column4.<br /> Columns are having different names. I have to map column1 – column3 and column2-column4.<br /> How to give one to one association in xml configuration.</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-132085"><div id="dsq-comment-header-132085" class="dsq-comment-header"> <cite id="dsq-cite-132085"> <span id="dsq-author-user-132085">Reddy</span> </cite></div><div id="dsq-comment-body-132085" class="dsq-comment-body"><div id="dsq-comment-message-132085" class="dsq-comment-message"><p>HI,</p><p>Getting below exception while executing the above code.<br /> Caused by: com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`test/stock`, CONSTRAINT `FK68AF7162457E2F` FOREIGN KEY (`STOCK_ID`) REFERENCES `practice`.`stock_detail` (`STOCK_ID`))</p><p>Regards,<br /> Udaykiran M</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-130449"><div id="dsq-comment-header-130449" class="dsq-comment-header"> <cite id="dsq-cite-130449"> <span id="dsq-author-user-130449">srinivas</span> </cite></div><div id="dsq-comment-body-130449" class="dsq-comment-body"><div id="dsq-comment-message-130449" class="dsq-comment-message"><p>CAN YOU PLEASE EXPLAIN ME HOW DO STOCK_ID US GETTING INSERTED EVEN WHEN WE ARE NOT SETING THORUGH ManytoMany  CLASS?</p><p>Output</p><p>Hibernate one TO one (XML mapping)<br /> Hibernate: INSERT INTO mkyongdb.stock (STOCK_CODE, STOCK_NAME) VALUES (?, ?)<br /> Hibernate: INSERT INTO mkyongdb.stock_detail<br /> (COMP_NAME, COMP_DESC, REMARK, LISTED_DATE, STOCK_ID) VALUES (?, ?, ?, ?, ?)<br /> Done</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-127934"><div id="dsq-comment-header-127934" class="dsq-comment-header"> <cite id="dsq-cite-127934"> <span id="dsq-author-user-127934">Dilip</span> </cite></div><div id="dsq-comment-body-127934" class="dsq-comment-body"><div id="dsq-comment-message-127934" class="dsq-comment-message"><p>You made this concept so simple and easy to understand! i really liked the way u have explained. with the table structure and the entire hbm file, my doubts are all cleared. !</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-125379"><div id="dsq-comment-header-125379" class="dsq-comment-header"> <cite id="dsq-cite-125379"> http://www.garyau.com <span id="dsq-author-user-125379">gary au</span> </cite></div><div id="dsq-comment-body-125379" class="dsq-comment-body"><div id="dsq-comment-message-125379" class="dsq-comment-message"><p>Very good tutorial ! simple and easy to understand ~ many thanks !</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-124582"><div id="dsq-comment-header-124582" class="dsq-comment-header"> <cite id="dsq-cite-124582"> <span id="dsq-author-user-124582">Madhu</span> </cite></div><div id="dsq-comment-body-124582" class="dsq-comment-body"><div id="dsq-comment-message-124582" class="dsq-comment-message"><p>Thanks it really helpful to me. i like all your tutorials.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-124213"><div id="dsq-comment-header-124213" class="dsq-comment-header"> <cite id="dsq-cite-124213"> <span id="dsq-author-user-124213">Shubhrajyoti satpathy</span> </cite></div><div id="dsq-comment-body-124213" class="dsq-comment-body"><div id="dsq-comment-message-124213" class="dsq-comment-message"><p>in hibernate model page is bean class or pojo class ?</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-123526"><div id="dsq-comment-header-123526" class="dsq-comment-header"> <cite id="dsq-cite-123526"> <span id="dsq-author-user-123526">Viraj</span> </cite></div><div id="dsq-comment-body-123526" class="dsq-comment-body"><div id="dsq-comment-message-123526" class="dsq-comment-message"><p>How to make this project independent from database. Using &#8220;Identity&#8221; will need MySQL database. If we want to migrate to oracle then we should use sequences .</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-94195"><div id="dsq-comment-header-94195" class="dsq-comment-header"> <cite id="dsq-cite-94195"> <span id="dsq-author-user-94195">meysam</span> </cite></div><div id="dsq-comment-body-94195" class="dsq-comment-body"><div id="dsq-comment-message-94195" class="dsq-comment-message"><p>hi.i have got this when running this example in &#8220;Intellij Idea&#8221; IDE :<br /> SLF4J: Failed to load class &#8220;org.slf4j.impl.StaticLoggerBinder&#8221;.<br /> SLF4J: Defaulting to no-operation (NOP) logger implementation<br /> SLF4J: See <a href="http://www.slf4j.org/codes.html#StaticLoggerBinder" rel="nofollow">http://www.slf4j.org/codes.html#StaticLoggerBinder</a> for further details.<br /> Exception in thread &#8220;main&#8221; java.lang.NoClassDefFoundError: org/apache/commons/collections/map/LRUMap<br /> at org.hibernate.util.SimpleMRUCache.init(SimpleMRUCache.java:71)<br /> at org.hibernate.util.SimpleMRUCache.(SimpleMRUCache.java:55)<br /> at org.hibernate.engine.query.QueryPlanCache.(QueryPlanCache.java:76)<br /> at org.hibernate.impl.SessionFactoryImpl.(SessionFactoryImpl.java:239)<br /> at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1845)<br /> at HibernateUtil.buildSessionFactory(HibernateUtil.java:18)<br /> at HibernateUtil.(HibernateUtil.java:14)<br /> at MainClass.main(MainClass.java:17)<br /> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br /> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)<br /> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)<br /> at java.lang.reflect.Method.invoke(Method.java:597)<br /> at com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)<br /> Caused by: java.lang.ClassNotFoundException: org.apache.commons.collections.map.LRUMap<br /> at java.net.URLClassLoader$1.run(URLClassLoader.java:202)<br /> at java.security.AccessController.doPrivileged(Native Method)<br /> at java.net.URLClassLoader.findClass(URLClassLoader.java:190)<br /> at java.lang.ClassLoader.loadClass(ClassLoader.java:307)<br /> at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)<br /> at java.lang.ClassLoader.loadClass(ClassLoader.java:248)<br /> &#8230; 13 more</p><p>Process finished with exit code 1<br /> i wonder if you help me to resolve this error<br /> thank&#8217;s</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-85944"><div id="dsq-comment-header-85944" class="dsq-comment-header"> <cite id="dsq-cite-85944"> <span id="dsq-author-user-85944">satya marrapu</span> </cite></div><div id="dsq-comment-body-85944" class="dsq-comment-body"><div id="dsq-comment-message-85944" class="dsq-comment-message"><p>Hi yong,</p><p>Your&#8217;s ideas are very helpful to me to learn new technologies. I&#8217;m very thankful that.</p><p>I have one doubt. I want to store multiple records at a time that means in a single transaction. if I use save() method , I can perform only single row functions only.But i want to store multiple records.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-84866"><div id="dsq-comment-header-84866" class="dsq-comment-header"> <cite id="dsq-cite-84866"> <span id="dsq-author-user-84866">Shafaqat</span> </cite></div><div id="dsq-comment-body-84866" class="dsq-comment-body"><div id="dsq-comment-message-84866" class="dsq-comment-message"><p>I have same scenario, i want to insert only 1 row, i have inserted the row successfully but  i want to update the same row if user tries to add another row with same primary key id, i am getting primary key error &#8220;Cannot insert duplicate key&#8221;</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-84541"><div id="dsq-comment-header-84541" class="dsq-comment-header"> <cite id="dsq-cite-84541"> <span id="dsq-author-user-84541">Ehsan</span> </cite></div><div id="dsq-comment-body-84541" class="dsq-comment-body"><div id="dsq-comment-message-84541" class="dsq-comment-message"><p>Hi Mkyong</p><p>How to use rolleback in hibernate please find the code below.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.hcl.collection.manytomany</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.ArrayList</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.HashSet</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Iterator</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Set</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.HibernateException</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.Session</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.SessionFactory</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.Transaction</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.cfg.Configuration</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.hcl.collection.manytomany.Employee</span><span style="color: #339933;">;</span>
&nbsp;
&nbsp;
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> ManytoMany <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #008000; font-style: italic; font-weight: bold;">/**
	 * @param args
	 */</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #666666; font-style: italic;">// TODO Auto-generated method stub</span>
		SessionFactory sessionfac<span style="color: #339933;">=</span><span style="color: #000000; font-weight: bold;">new</span> Configuration<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">configure</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;/</span>com<span style="color: #339933;">/</span>hcl<span style="color: #339933;">/</span>collection<span style="color: #339933;">/</span>manytomany<span style="color: #339933;">/</span>manytomany_hibernate.<span style="color: #006633;">cfg</span>.<span style="color: #006633;">xml</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">buildSessionFactory</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>SessionFactory<span style="color: #339933;">==========&amp;</span>quot<span style="color: #339933;">;+</span>sessionfac<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		Session session <span style="color: #339933;">=</span> sessionfac.<span style="color: #006633;">openSession</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> 
&nbsp;
		Transaction transaction <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #339933;">;</span> 
&nbsp;
		<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span> 
&nbsp;
		transaction <span style="color: #339933;">=</span> session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> 
        Set<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>Employee<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span> employee<span style="color: #339933;">=</span><span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&amp;</span>lt<span style="color: #339933;">;</span>Employee<span style="color: #339933;">&amp;</span>gt<span style="color: #339933;">;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		employee.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> Employee<span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>Ehsan<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>IT<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #cc66cc;">9711295282</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		employee.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> Employee<span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>Smith<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>Admin<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #cc66cc;">999123456</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		Company com<span style="color: #339933;">=</span><span style="color: #000000; font-weight: bold;">new</span> Company<span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>TCS<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>Noida<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,employee<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		Company com1<span style="color: #339933;">=</span><span style="color: #000000; font-weight: bold;">new</span> Company<span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>HCL<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>Delhi<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>,employee<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>com<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>com1<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		transaction.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> 
&nbsp;
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span>HibernateException e<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span> 
&nbsp;
&nbsp;
&nbsp;
		e.<span style="color: #006633;">printStackTrace</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> 
&nbsp;
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">finally</span> <span style="color: #009900;">&#123;</span> 
		transaction.<span style="color: #006633;">rollback</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>            
		session.<span style="color: #006633;">close</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> 
&nbsp;
		<span style="color: #009900;">&#125;</span> 
&nbsp;
&nbsp;
				<span style="color: #666666; font-style: italic;">//comp.getEmployee()</span>
		<span style="color: #666666; font-style: italic;">//ArrayList emp=com.getEmployee();</span>
		<span style="color: #666666; font-style: italic;">//System.out.println(com.getName());</span>
	<span style="color: #666666; font-style: italic;">//	Iterator&amp;lt;Employee&amp;gt;itr=emp.iterator();</span>
		<span style="color: #666666; font-style: italic;">/*while(itr.hasNext()){
			Employee emplo=itr.next();
			System.out.println(emplo.getEmpname());
			System.out.println(emplo.getEmpdep());
		}*/</span>
&nbsp;
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-84166"><div id="dsq-comment-header-84166" class="dsq-comment-header"> <cite id="dsq-cite-84166"> <span id="dsq-author-user-84166">shinde</span> </cite></div><div id="dsq-comment-body-84166" class="dsq-comment-body"><div id="dsq-comment-message-84166" class="dsq-comment-message"><p>Hi,<br /> I used your pom.xml file, got below error:</p><div class="wp_syntax"><div class="code"><pre class="language" style="font-family:monospace;">Missing:
----------
1) hibernate-commons-annotations:hibernate-commons-annotations:jar:3.0.0.GA
&nbsp;
  Try downloading the file manually from the project website.
&nbsp;
  Then, install it using the command:
      mvn install:install-file -DgroupId=hibernate-commons-annotations -Dartifac
tId=hibernate-commons-annotations -Dversion=3.0.0.GA -Dpackaging=jar -Dfile=/pat
h/to/file
&nbsp;
  Alternatively, if you host your own repository you can deploy the file there:
&nbsp;
      mvn deploy:deploy-file -DgroupId=hibernate-commons-annotations -DartifactI
d=hibernate-commons-annotations -Dversion=3.0.0.GA -Dpackaging=jar -Dfile=/path/
to/file -Durl=[url] -DrepositoryId=[id]
&nbsp;
  Path to dependency:
        1) com.mkyong.common:one-to-one:jar:1.0-SNAPSHOT
        2) hibernate-commons-annotations:hibernate-commons-annotations:jar:3.0.0
.GA
&nbsp;
2) hibernate-annotations:hibernate-annotations:jar:3.3.0.GA
&nbsp;
  Try downloading the file manually from the project website.
&nbsp;
  Then, install it using the command:
      mvn install:install-file -DgroupId=hibernate-annotations -DartifactId=hibe
rnate-annotations -Dversion=3.3.0.GA -Dpackaging=jar -Dfile=/path/to/file
&nbsp;
  Alternatively, if you host your own repository you can deploy the file there:
&nbsp;
      mvn deploy:deploy-file -DgroupId=hibernate-annotations -DartifactId=hibern
ate-annotations -Dversion=3.3.0.GA -Dpackaging=jar -Dfile=/path/to/file -Durl=[u
rl] -DrepositoryId=[id]
&nbsp;
  Path to dependency:
        1) com.mkyong.common:one-to-one:jar:1.0-SNAPSHOT
        2) hibernate-annotations:hibernate-annotations:jar:3.3.0.GA
&nbsp;
----------
2 required artifacts are missing.
&nbsp;
for artifact:
  com.mkyong.common:one-to-one:jar:1.0-SNAPSHOT
&nbsp;
from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  JBoss repository (http://repository.jboss.com/maven2/)
&nbsp;
&nbsp;
&nbsp;
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 40 seconds
[INFO] Finished at: Mon Jul 16 22:01:18 IST 2012
[INFO] Final Memory: 14M/111M</pre></div></div></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-83425"><div id="dsq-comment-header-83425" class="dsq-comment-header"> <cite id="dsq-cite-83425"> http://www.scodz.com <span id="dsq-author-user-83425">Joydeep Bhattacharya</span> </cite></div><div id="dsq-comment-body-83425" class="dsq-comment-body"><div id="dsq-comment-message-83425" class="dsq-comment-message"><p>One small clarification needed</p><p>Stock object conatins stockdetails object &#8230; thats fine</p><p>but why StockDetails class is having Stock object &#8230; its redundant</p><p>I am trying without it and getting this exception</p><p>StaleStateException</p><p>any idea why am I getting it ?</p><p>If you need details I can share you the same</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-80939"><div id="dsq-comment-header-80939" class="dsq-comment-header"> <cite id="dsq-cite-80939"> <span id="dsq-author-user-80939">steven</span> </cite></div><div id="dsq-comment-body-80939" class="dsq-comment-body"><div id="dsq-comment-message-80939" class="dsq-comment-message"><p>Hi,<br /> I would like to know how to map like 3 tables suppose user (user_id pk), person(person_name, user_id fk) and customer (person_name, user_id fk) in the one to one mapping. If not possible is there any other way to map</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-139728"><div id="dsq-comment-header-139728" class="dsq-comment-header"> <cite id="dsq-cite-139728"> http://www.mkyong.com <span id="dsq-author-user-139728">Pawan</span> </cite></div><div id="dsq-comment-body-139728" class="dsq-comment-body"><div id="dsq-comment-message-139728" class="dsq-comment-message"><p>hi Yong,</p><p>how can we use hibernate with JNDI ?</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-80581"><div id="dsq-comment-header-80581" class="dsq-comment-header"> <cite id="dsq-cite-80581"> <span id="dsq-author-user-80581">Vineet</span> </cite></div><div id="dsq-comment-body-80581" class="dsq-comment-body"><div id="dsq-comment-message-80581" class="dsq-comment-message"><p>Are you still replying here. I have exactly the same mapping as you have mentioned. I am using Postgres.</p><p>but I am getting the below exception, m stuck here totaly. please help</p><p>SEVERE: Servlet.service() for servlet [blackboard] in context with path [/Blackboard] threw exception [Request processing failed; nested exception is java.lang.Exception: java.lang.NullPointerException] with root cause<br /> java.lang.NullPointerException<br /> at org.hibernate.tuple.entity.AbstractEntityTuplizer.getPropertyValue(AbstractEntityTuplizer.java:521)<br /> at org.hibernate.persister.entity.AbstractEntityPersister.getPropertyValue(AbstractEntityPersister.java:3867)<br /> at org.hibernate.id.ForeignGenerator.generate(ForeignGenerator.java:100)<br /> at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:121)<br /> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:210)<br /> at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:56)<br /> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:195)<br /> at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:50)<br /> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:93)<br /> at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:713)<br /> at org.hibernate.impl.SessionImpl.save(SessionImpl.java:701)<br /> at org.hibernate.impl.SessionImpl.save(SessionImpl.java:697)<br /> at com.peanuts.blackboard.database.dao.impl.StudentDAO.savenewStudent(StudentDAO.java:74)<br /> at com.peanuts.blackboard.database.dao.impl.StudentDAO$$FastClassByCGLIB$$28a91834.invoke()<br /> at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:149)<br /> at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:688)<br /> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)<br /> at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)<br /> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)<br /> at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:621)<br /> at com.peanuts.blackboard.database.dao.impl.StudentDAO$$EnhancerByCGLIB$$946d8675.savenewStudent()<br /> at com.peanuts.blackboard.bus.svc.impl.StudentManager.savenewStudent(StudentManager.java:36)<br /> at com.peanuts.blackboard.web.controller.admin.AdminAddUserController.onSubmit(AdminAddUserController.java:72)<br /> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br /> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)<br /> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)<br /> at java.lang.reflect.Method.invoke(Method.java:597)<br /> at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)<br /> at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:426)<br /> at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:414)<br /> at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)<br /> at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)<br /> at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)<br /> at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)<br /> at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)<br /> at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)<br /> at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:304)<br /> at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)<br /> at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:240)<br /> at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:164)<br /> at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:462)<br /> at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)<br /> at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)<br /> at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:562)<br /> at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)<br /> at com.springsource.insight.collection.tcserver.request.HttpRequestOperationCollectionValve.invoke(HttpRequestOperationCollectionValve.java:84)<br /> at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:395)<br /> at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:250)<br /> at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:188)<br /> at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:302)<br /> at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)<br /> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)<br /> at java.lang.Thread.run(Thread.java:662)</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-80548"><div id="dsq-comment-header-80548" class="dsq-comment-header"> <cite id="dsq-cite-80548"> <span id="dsq-author-user-80548">Angel</span> </cite></div><div id="dsq-comment-body-80548" class="dsq-comment-body"><div id="dsq-comment-message-80548" class="dsq-comment-message"><p>hello,</p><p>thanks this tutorial help me very well.</p><p>but i have a question….in my application user can create column at run time.but this is not configured in .cfg.xml………so how can i retrieve this new column ?</p><p>any help will appreciated.. Thanks……..</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-79468"><div id="dsq-comment-header-79468" class="dsq-comment-header"> <cite id="dsq-cite-79468"> <span id="dsq-author-user-79468">nisha</span> </cite></div><div id="dsq-comment-body-79468" class="dsq-comment-body"><div id="dsq-comment-message-79468" class="dsq-comment-message"><p>hey thanks for the code but i am getting an error:<br /> &#8220;org.hibernate.id.IdentifierGenerationException:attempted to assign id from null one-to-one property&#8221;<br /> Please help me</p><p>thanks<br /> nisha</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-78820"><div id="dsq-comment-header-78820" class="dsq-comment-header"> <cite id="dsq-cite-78820"> <span id="dsq-author-user-78820">Sumit</span> </cite></div><div id="dsq-comment-body-78820" class="dsq-comment-body"><div id="dsq-comment-message-78820" class="dsq-comment-message"><p>Hi, That&#8217;s a very nice explanation. I was just going through the docs provided by hibernate and there I found that the fetch property for one on one mapping is optional and can take either select or join whereas FieldType is a enumeration which is having 2  enums, LAZY and EAGER.</p><p>Please clarify.</p><p>Thanks &amp; regards,<br /> Sumit</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-78605"><div id="dsq-comment-header-78605" class="dsq-comment-header"> <cite id="dsq-cite-78605"> <span id="dsq-author-user-78605">sunil</span> </cite></div><div id="dsq-comment-body-78605" class="dsq-comment-body"><div id="dsq-comment-message-78605" class="dsq-comment-message"><p>hi,</p><p>thanks for nice explanation for one-to-one mapping&#8230;but iam getting error by trying above one-to-one relationship mapping.</p><p>error is :Exception in thread &#8220;main&#8221; org.hibernate.PropertyNotFoundException: Could not find a getter for stockId in class com.sunil.domain.StockDetail</p><p>please reply me&#8230;</p><p>sunil</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-80582"><div id="dsq-comment-header-80582" class="dsq-comment-header"> <cite id="dsq-cite-80582"> <span id="dsq-author-user-80582">Vineet</span> </cite></div><div id="dsq-comment-body-80582" class="dsq-comment-body"><div id="dsq-comment-message-80582" class="dsq-comment-message"><p>did u solve ur problem?</p><p>u are missing getter and setter for one or more of your properties in your DTO(POJO) classes.</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-78143"><div id="dsq-comment-header-78143" class="dsq-comment-header"> <cite id="dsq-cite-78143"> <span id="dsq-author-user-78143">Akki</span> </cite></div><div id="dsq-comment-body-78143" class="dsq-comment-body"><div id="dsq-comment-message-78143" class="dsq-comment-message"><p>Nice Explaination !!</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-77049"><div id="dsq-comment-header-77049" class="dsq-comment-header"> <cite id="dsq-cite-77049"> <span id="dsq-author-user-77049">bramha</span> </cite></div><div id="dsq-comment-body-77049" class="dsq-comment-body"><div id="dsq-comment-message-77049" class="dsq-comment-message"><p>I try this example, but at the end this gives me the error</p><p>integrity constraint (TEST.SYS_C00267812) violated &#8211; parent key not found</p><p>Since we save the STOCK object before the entry of the STOCK_DETAIL object.</p><p>please tell the solution.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-76056"><div id="dsq-comment-header-76056" class="dsq-comment-header"> <cite id="dsq-cite-76056"> <span id="dsq-author-user-76056">srinu</span> </cite></div><div id="dsq-comment-body-76056" class="dsq-comment-body"><div id="dsq-comment-message-76056" class="dsq-comment-message"><p>how to devlop the one-to-one relationship in oracledatabase.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-76354"><div id="dsq-comment-header-76354" class="dsq-comment-header"> <cite id="dsq-cite-76354"> http://www.mkyong.com <span id="dsq-author-user-76354">mkyong</span> </cite></div><div id="dsq-comment-body-76354" class="dsq-comment-body"><div id="dsq-comment-message-76354" class="dsq-comment-message"><p>This concept is database dependency, may be the syntax is slightly different.</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-72616"><div id="dsq-comment-header-72616" class="dsq-comment-header"> <cite id="dsq-cite-72616"> <span id="dsq-author-user-72616">Yogesh</span> </cite></div><div id="dsq-comment-body-72616" class="dsq-comment-body"><div id="dsq-comment-message-72616" class="dsq-comment-message"><p>please give the example with one toone with property-ref attribute.and in may2many why this scenarion doesnot make sense for cascade deleteor deleteall.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-60275"><div id="dsq-comment-header-60275" class="dsq-comment-header"> <cite id="dsq-cite-60275"> <span id="dsq-author-user-60275">Amritpal</span> </cite></div><div id="dsq-comment-body-60275" class="dsq-comment-body"><div id="dsq-comment-message-60275" class="dsq-comment-message"><p>i have problem running this Example  but have continue problem</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">INFO<span style="color: #339933;">:</span> Configuration resource<span style="color: #339933;">:</span> <span style="color: #339933;">/</span>src<span style="color: #339933;">/</span>util<span style="color: #339933;">/</span>hibernate.<span style="color: #006633;">cfg</span>.<span style="color: #006633;">xml</span>
Initial SessionFactory creation failed.<span style="color: #006633;">org</span>.<span style="color: #006633;">hibernate</span>.<span style="color: #006633;">HibernateException</span><span style="color: #339933;">:</span> <span style="color: #339933;">/</span>src<span style="color: #339933;">/</span>util<span style="color: #339933;">/</span>hibernate.<span style="color: #006633;">cfg</span>.<span style="color: #006633;">xml</span> not found
<span style="color: #003399;">Exception</span> in thread <span style="color: #0000ff;">&quot;main&quot;</span> java.<span style="color: #006633;">lang</span>.<span style="color: #003399;">ExceptionInInitializerError</span>
	at util.<span style="color: #006633;">HibernateUtil</span>.<span style="color: #006633;">buildSessionFactory</span><span style="color: #009900;">&#40;</span>HibernateUtil.<span style="color: #006633;">java</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">24</span><span style="color: #009900;">&#41;</span>
	at util.<span style="color: #006633;">HibernateUtil</span>.<span style="color: #009900;">&#40;</span>HibernateUtil.<span style="color: #006633;">java</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">10</span><span style="color: #009900;">&#41;</span>
	at util.<span style="color: #006633;">App</span>.<span style="color: #006633;">main</span><span style="color: #009900;">&#40;</span>App.<span style="color: #006633;">java</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">14</span><span style="color: #009900;">&#41;</span>
Caused by<span style="color: #339933;">:</span> org.<span style="color: #006633;">hibernate</span>.<span style="color: #006633;">HibernateException</span><span style="color: #339933;">:</span> <span style="color: #339933;">/</span>src<span style="color: #339933;">/</span>util<span style="color: #339933;">/</span>hibernate.<span style="color: #006633;">cfg</span>.<span style="color: #006633;">xml</span> not found
	at org.<span style="color: #006633;">hibernate</span>.<span style="color: #006633;">util</span>.<span style="color: #006633;">ConfigHelper</span>.<span style="color: #006633;">getResourceAsStream</span><span style="color: #009900;">&#40;</span>ConfigHelper.<span style="color: #006633;">java</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">147</span><span style="color: #009900;">&#41;</span>
	at org.<span style="color: #006633;">hibernate</span>.<span style="color: #006633;">cfg</span>.<span style="color: #006633;">Configuration</span>.<span style="color: #006633;">getConfigurationInputStream</span><span style="color: #009900;">&#40;</span>Configuration.<span style="color: #006633;">java</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">1402</span><span style="color: #009900;">&#41;</span>
	at org.<span style="color: #006633;">hibernate</span>.<span style="color: #006633;">cfg</span>.<span style="color: #006633;">Configuration</span>.<span style="color: #006633;">configure</span><span style="color: #009900;">&#40;</span>Configuration.<span style="color: #006633;">java</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">1424</span><span style="color: #009900;">&#41;</span>
	at util.<span style="color: #006633;">HibernateUtil</span>.<span style="color: #006633;">buildSessionFactory</span><span style="color: #009900;">&#40;</span>HibernateUtil.<span style="color: #006633;">java</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">15</span><span style="color: #009900;">&#41;</span>
	... <span style="color: #cc66cc;">2</span> more
Hibernate one to one <span style="color: #009900;">&#40;</span>XML mapping<span style="color: #009900;">&#41;</span></pre></div></div></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-60521"><div id="dsq-comment-header-60521" class="dsq-comment-header"> <cite id="dsq-cite-60521"> http://www.mkyong.com <span id="dsq-author-user-60521">mkyong</span> </cite></div><div id="dsq-comment-body-60521" class="dsq-comment-body"><div id="dsq-comment-message-60521" class="dsq-comment-message"><p>Did you build it with Maven?</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-57896"><div id="dsq-comment-header-57896" class="dsq-comment-header"> <cite id="dsq-cite-57896"> <span id="dsq-author-user-57896">Bilal Haider</span> </cite></div><div id="dsq-comment-body-57896" class="dsq-comment-body"><div id="dsq-comment-message-57896" class="dsq-comment-message"><p>your articles are really handy&#8230;&#8230;.Please update the download link Download it – Hibernate-one-to-one-xml-mapping.zip (10KB)<br /> thank u&#8230;..</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-57903"><div id="dsq-comment-header-57903" class="dsq-comment-header"> <cite id="dsq-cite-57903"> http://www.mkyong.com <span id="dsq-author-user-57903">mkyong</span> </cite></div><div id="dsq-comment-body-57903" class="dsq-comment-body"><div id="dsq-comment-message-57903" class="dsq-comment-message"><p>File is deleted! No idea why? Thanks i have backup, uploaded to server again. Thanks for report this broken link.</p></div></div></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-52609"><div id="dsq-comment-header-52609" class="dsq-comment-header"> <cite id="dsq-cite-52609"> <span id="dsq-author-user-52609">M Naeem Akhtar</span> </cite></div><div id="dsq-comment-body-52609" class="dsq-comment-body"><div id="dsq-comment-message-52609" class="dsq-comment-message"><p>Hi<br /> Thanks to provide a very good platform for learning and practical excercise, this is very gud effort u are doing. Thanka a lot.</p><p>I facing some problem, please help me to resolve. I am new with Maven. How to run a application generated by MAVEN, which has a main class. using eclipse or without eclipse.</p><p>E.g I downloaded one hibernate example(one-to-one-relationship) converted it for eclipse project using maven eclipse command and imported the project inside eclipse. how i run the App.java main method? by using eclipse ide or by making a new jar file. As my imported project is giving refrence/class path error even project&#8217;s .class file has all Maven Repo refrence entries. So im enable to run it, please guide me.</p><p>Thankz a lot</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-one-to-one-relationship-example-annotation/' rel='external nofollow' class='url'>Hibernate – One-to-One example (Annotation)</a></p></li></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-%e2%80%93-one-to-one-relationship-example-annotation/' rel='external nofollow' class='url'>Hibernate – One-to-one relationship example (Annotation)</a></p></li></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-47054"><div id="dsq-comment-header-47054" class="dsq-comment-header"> <cite id="dsq-cite-47054"> <span id="dsq-author-user-47054">Swamy K</span> </cite></div><div id="dsq-comment-body-47054" class="dsq-comment-body"><div id="dsq-comment-message-47054" class="dsq-comment-message"><p>Hi Yong,</p><p>Good tutorial to learn things practically and step by step.</p><p>Thanks a lot.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-45534"><div id="dsq-comment-header-45534" class="dsq-comment-header"> <cite id="dsq-cite-45534"> <span id="dsq-author-user-45534">bilal haider</span> </cite></div><div id="dsq-comment-body-45534" class="dsq-comment-body"><div id="dsq-comment-message-45534" class="dsq-comment-message"><p>Thank u for A Very good article&#8230;.<br /> I am new in hibernate &#8230; can you please tell me why we are not saving the child table i.e stock detail table e.g session.save(stockDetail)?<br /> waiting for your reply,,,,</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-45860"><div id="dsq-comment-header-45860" class="dsq-comment-header"> <cite id="dsq-cite-45860"> http://www.mkyong.com <span id="dsq-author-user-45860">mkyong</span> </cite></div><div id="dsq-comment-body-45860" class="dsq-comment-body"><div id="dsq-comment-message-45860" class="dsq-comment-message"><p>If you define Hibernate relationship property, a single &#8220;session.save(stock)&#8221; statement will save it to both tables automatically. Of course, it&#8217;s always depend on your use case.</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-43211"><div id="dsq-comment-header-43211" class="dsq-comment-header"> <cite id="dsq-cite-43211"> <span id="dsq-author-user-43211">patsai</span> </cite></div><div id="dsq-comment-body-43211" class="dsq-comment-body"><div id="dsq-comment-message-43211" class="dsq-comment-message"><p>This example help me a lot. Thank you very much.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-18518"><div id="dsq-comment-header-18518" class="dsq-comment-header"> <cite id="dsq-cite-18518"> <span id="dsq-author-user-18518">suraj</span> </cite></div><div id="dsq-comment-body-18518" class="dsq-comment-body"><div id="dsq-comment-message-18518" class="dsq-comment-message"><p>is it neccesary to use any XML(.cfg or .hbm) files in annotation example?</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-45861"><div id="dsq-comment-header-45861" class="dsq-comment-header"> <cite id="dsq-cite-45861"> http://www.mkyong.com <span id="dsq-author-user-45861">mkyong</span> </cite></div><div id="dsq-comment-body-45861" class="dsq-comment-body"><div id="dsq-comment-message-45861" class="dsq-comment-message"><p>Sorry for late reply, for annotation, there is no need to define .hbm file, but .cfg configuration is still required. You just need to tell Hibernate about your database properties :)</p><p>Please download the annotation version and compare with yours.</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-18512"><div id="dsq-comment-header-18512" class="dsq-comment-header"> <cite id="dsq-cite-18512"> <span id="dsq-author-user-18512">suraj</span> </cite></div><div id="dsq-comment-body-18512" class="dsq-comment-body"><div id="dsq-comment-message-18512" class="dsq-comment-message"><p>how can i identify which is the database name in annotation example?<br /> please reply soon.<br /> please help mr.yong.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-18520"><div id="dsq-comment-header-18520" class="dsq-comment-header"> <cite id="dsq-cite-18520"> http://www.mkyong.com <span id="dsq-author-user-18520">mkyong</span> </cite></div><div id="dsq-comment-body-18520" class="dsq-comment-body"><div id="dsq-comment-message-18520" class="dsq-comment-message"><p>Do not understand your use case, please explains in detail.</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-17457"><div id="dsq-comment-header-17457" class="dsq-comment-header"> <cite id="dsq-cite-17457"> <span id="dsq-author-user-17457">vinit</span> </cite></div><div id="dsq-comment-body-17457" class="dsq-comment-body"><div id="dsq-comment-message-17457" class="dsq-comment-message"><p>thanks for providing good tutorials.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-15462"><div id="dsq-comment-header-15462" class="dsq-comment-header"> <cite id="dsq-cite-15462"> http://www.java2s.com <span id="dsq-author-user-15462">Nani</span> </cite></div><div id="dsq-comment-body-15462" class="dsq-comment-body"><div id="dsq-comment-message-15462" class="dsq-comment-message"><p>Hello yong,</p><p>I am using the Oracle Database, when i downloaded the project and try to compile it, it is throwing the below exception</p><p>&#8221; Dialect does not support identity key generation&#8221;</p><p>i believe it is coming from this line</p><p>can you Please suggest what is the alternate for &#8220;identity&#8221; if i am using oracle.</p><p>Thanks<br /> Nani</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-15464"><div id="dsq-comment-header-15464" class="dsq-comment-header"> <cite id="dsq-cite-15464"> http://www.mkyong.com <span id="dsq-author-user-15464">mkyong</span> </cite></div><div id="dsq-comment-body-15464" class="dsq-comment-body"><div id="dsq-comment-message-15464" class="dsq-comment-message"><p>You may need to use sequence for Oracle database.</p><blockquote><p>identity &#8211; supports identity columns in DB2, MySQL, MS SQL Server, Sybase and HypersonicSQL. The returned identifier is of type long, short or int.</p><p>sequence &#8211; uses a sequence in DB2, PostgreSQL, Oracle, SAP DB, McKoi or a generator in Interbase. The returned identifier is of type long, short or int</p></blockquote><p>See the Hibernate documentation for details<br /> <a href="http://docs.jboss.org/hibernate/core/3.3/reference/en/html/mapping.html#mapping-declaration-id" rel="nofollow">http://docs.jboss.org/hibernate/core/3.3/reference/en/html/mapping.html#mapping-declaration-id</a></p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-15508"><div id="dsq-comment-header-15508" class="dsq-comment-header"> <cite id="dsq-cite-15508"> http://java2s.com <span id="dsq-author-user-15508">Nani</span> </cite></div><div id="dsq-comment-body-15508" class="dsq-comment-body"><div id="dsq-comment-message-15508" class="dsq-comment-message"><p>Hello yong,</p><p>thanks for your reply</p><p>Thanks<br /> Nani</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-4" id="dsq-comment-15523"><div id="dsq-comment-header-15523" class="dsq-comment-header"> <cite id="dsq-cite-15523"> http://www.mkyong.com <span id="dsq-author-user-15523">mkyong</span> </cite></div><div id="dsq-comment-body-15523" class="dsq-comment-body"><div id="dsq-comment-message-15523" class="dsq-comment-message"><p>welcome</p></div></div></li></ul></li></ul></li><li class="comment even depth-2" id="dsq-comment-85945"><div id="dsq-comment-header-85945" class="dsq-comment-header"> <cite id="dsq-cite-85945"> <span id="dsq-author-user-85945">satya marrapu</span> </cite></div><div id="dsq-comment-body-85945" class="dsq-comment-body"><div id="dsq-comment-message-85945" class="dsq-comment-message"><p>Hello Nani,<br /> You are using Oracle database, so you have use sequence generator but you are used Identity generator. That&#8217;s way You are getting that error. because Identity generator<br /> is specific to MySQL only. It won&#8217;t be worked on any other Databases.</p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/hibernate-tutorials/' rel='external nofollow' class='url'>Hibernate Tutorials | Tutorials</a></p></li></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/hibernate/hibernate-one-to-one-relationship-example/';var disqus_identifier='3216 http://www.mkyong.com/?p=3216';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Hibernate – One-to-One example (XML Mapping)";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=3216';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Hibernate Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/hibernate-tutorials\/",'date':"03\/31\/2010 08:20 AM",'excerpt':"[...] One-to-one relationship example A one-to-one relationship project demonstration. [...] ",'type':"pingback"},{'author_name':"Hibernate – One-to-one relationship example (Annotation)",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-%e2%80%93-one-to-one-relationship-example-annotation\/",'date':"04\/25\/2011 09:32 PM",'excerpt':"[...] this tutorial, it will reuse the entire infrastructure of the previous &#8220;Hibernate one to one relationship example &#8211; XML &hellip;",'type':"pingback"},{'author_name':"Hibernate – One-to-One example (Annotation)",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-one-to-one-relationship-example-annotation\/",'date':"04\/28\/2011 04:24 PM",'excerpt':"[...] Author: mkyong     In this tutorial, it will reuse the entire infrastructure of the previous &#8220;Hibernate &hellip;",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-one-to-one-relationship-example\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="3216" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>