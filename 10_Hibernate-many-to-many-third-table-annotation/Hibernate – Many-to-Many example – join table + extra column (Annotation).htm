<!DOCTYPE html><html lang="en"><title>Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation)</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Hibernate – Many-to-Many example (Annotation)' href='http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/' /><link rel='next' title='Hibernate component mapping example' href='http://www.mkyong.com/hibernate/hibernate-component-mapping-example/' /><link rel='shortlink' href='http://www.mkyong.com/?p=8723' /><meta name="keywords" content="hibernate,many-to-many" /><link rel="canonical" href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-8723"><header><h1> Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation)</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2011-04-28T16:13:51+00:00">April 28, 2011</time><span> , &nbsp;&nbsp;&nbsp; Last modified : April 28, 2011 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>In this tutorial, we show you how to use Hibernate to implements &#8220;many-to-many table relationship, with <strong>extra column in the join table</strong>&#8220;.</p><div class="note"> <strong>Note</strong><br /> For many to many relationship with NO extra column in the join table, please refer to this <a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/">@many-to-many tutorial</a></div><h4>1. Many-to-many table + extra columns in join table</h4><p>The STOCK and CATEGORY many to many relationship is linked with a third / join table named STOCK_CATEGORY, with extra &#8220;<code>created_by</code>&#8221; and &#8220;<code>created_date</code>&#8221; columns.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2011/04/many-to-many-join-table-diagram.png" alt="many to many diagram" title="many-to-many-join-table-diagram" width="640" height="218" /></div><p><em>MySQL table script</em></p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #ff0000;">`stock`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_CODE`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_NAME`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE<span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_NAME`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_NAME`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_ID`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_CODE`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE
<span style="color: #66cc66;">&#41;</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #ff0000;">`category`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`CATEGORY_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`NAME`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`DESC`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">255</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`CATEGORY_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE
<span style="color: #66cc66;">&#41;</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>  <span style="color: #ff0000;">`stock_category`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`CATEGORY_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`CREATED_DATE`</span> <span style="color: #993333; font-weight: bold;">DATE</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`CREATED_BY`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">`CATEGORY_ID`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> <span style="color: #ff0000;">`FK_CATEGORY_ID`</span> <span style="color: #993333; font-weight: bold;">FOREIGN</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`CATEGORY_ID`</span><span style="color: #66cc66;">&#41;</span> 
             <span style="color: #993333; font-weight: bold;">REFERENCES</span> <span style="color: #ff0000;">`category`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`CATEGORY_ID`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> <span style="color: #ff0000;">`FK_STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">FOREIGN</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span> 
             <span style="color: #993333; font-weight: bold;">REFERENCES</span> <span style="color: #ff0000;">`stock`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#41;</span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. Project Structure</h4><p>Review the file project structure of this tutorial.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2011/04/many-to-many-join-table-folder.png" alt="many to many project folder" title="many-to-many-join-table-folder" width="474" height="447" /></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>3. Hibernate / JPA Annotation</h4><p>The Hibernate / JBoss tools generated annotation codes are not working in this third table extra column scenario. To make it works, you should customize the code to use &#8220;<code>@AssociationOverride</code>&#8220;, in <code>StockCategory.java</code> to represent the many to many relationship.</p><p>See following customized codes :</p><p><em>File : Stock.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.HashSet</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Set</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.CascadeType</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Column</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Entity</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.FetchType</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.GeneratedValue</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">static</span> javax.<span style="color: #006633;">persistence</span>.<span style="color: #006633;">GenerationType</span>.<span style="color: #006633;">IDENTITY</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Id</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.OneToMany</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Table</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.UniqueConstraint</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyongdb&quot;</span>, uniqueConstraints <span style="color: #339933;">=</span> <span style="color: #009900;">&#123;</span>
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_NAME&quot;</span><span style="color: #009900;">&#41;</span>,
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_CODE&quot;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Set<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span> stockCategories <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode, <span style="color: #003399;">String</span> stockName<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span> <span style="color: #339933;">=</span> stockCode<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span> <span style="color: #339933;">=</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode, <span style="color: #003399;">String</span> stockName,
			Set<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span> stockCategories<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span> <span style="color: #339933;">=</span> stockCode<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span> <span style="color: #339933;">=</span> stockName<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCategories</span> <span style="color: #339933;">=</span> stockCategories<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Id
	@GeneratedValue<span style="color: #009900;">&#40;</span>strategy <span style="color: #339933;">=</span> IDENTITY<span style="color: #009900;">&#41;</span>
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_ID&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Integer</span> getStockId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockId</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockId<span style="color: #009900;">&#40;</span><span style="color: #003399;">Integer</span> stockId<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockId</span> <span style="color: #339933;">=</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_CODE&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">10</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getStockCode<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span> <span style="color: #339933;">=</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_NAME&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">20</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getStockName<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockName<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockName<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span> <span style="color: #339933;">=</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@OneToMany<span style="color: #009900;">&#40;</span>fetch <span style="color: #339933;">=</span> FetchType.<span style="color: #006633;">LAZY</span>, mappedBy <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;pk.stock&quot;</span>, cascade<span style="color: #339933;">=</span>CascadeType.<span style="color: #006633;">ALL</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> Set<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span> getStockCategories<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCategories</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockCategories<span style="color: #009900;">&#40;</span>Set<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span> stockCategories<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCategories</span> <span style="color: #339933;">=</span> stockCategories<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>File : StockCategory.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Date</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.AssociationOverride</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.AssociationOverrides</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Column</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.EmbeddedId</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Entity</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.JoinColumn</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Table</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Temporal</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.TemporalType</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Transient</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock_category&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyongdb&quot;</span><span style="color: #009900;">&#41;</span>
@AssociationOverrides<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#123;</span>
		@AssociationOverride<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;pk.stock&quot;</span>, 
			joinColumns <span style="color: #339933;">=</span> @JoinColumn<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_ID&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span>,
		@AssociationOverride<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;pk.category&quot;</span>, 
			joinColumns <span style="color: #339933;">=</span> @JoinColumn<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;CATEGORY_ID&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockCategory <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> StockCategoryId pk <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StockCategoryId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Date</span> createdDate<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> createdBy<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> StockCategory<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@EmbeddedId
	<span style="color: #000000; font-weight: bold;">public</span> StockCategoryId getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> pk<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setPk<span style="color: #009900;">&#40;</span>StockCategoryId pk<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">pk</span> <span style="color: #339933;">=</span> pk<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@<span style="color: #000000; font-weight: bold;">Transient</span>
	<span style="color: #000000; font-weight: bold;">public</span> Stock getStock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">getStock</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStock<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@<span style="color: #000000; font-weight: bold;">Transient</span>
	<span style="color: #000000; font-weight: bold;">public</span> Category getCategory<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">getCategory</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setCategory<span style="color: #009900;">&#40;</span>Category category<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">setCategory</span><span style="color: #009900;">&#40;</span>category<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Temporal<span style="color: #009900;">&#40;</span>TemporalType.<span style="color: #006633;">DATE</span><span style="color: #009900;">&#41;</span>
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;CREATED_DATE&quot;</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">10</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Date</span> getCreatedDate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">createdDate</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setCreatedDate<span style="color: #009900;">&#40;</span><span style="color: #003399;">Date</span> createdDate<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">createdDate</span> <span style="color: #339933;">=</span> createdDate<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;CREATED_BY&quot;</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">10</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getCreatedBy<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">createdBy</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setCreatedBy<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> createdBy<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">createdBy</span> <span style="color: #339933;">=</span> createdBy<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">boolean</span> equals<span style="color: #009900;">&#40;</span><span style="color: #003399;">Object</span> o<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">this</span> <span style="color: #339933;">==</span> o<span style="color: #009900;">&#41;</span>
			<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">true</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>o <span style="color: #339933;">==</span> <span style="color: #000066; font-weight: bold;">null</span> <span style="color: #339933;">||</span> getClass<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">!=</span> o.<span style="color: #006633;">getClass</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span>
			<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #339933;">;</span>
&nbsp;
		StockCategory that <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>StockCategory<span style="color: #009900;">&#41;</span> o<span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span> <span style="color: #339933;">?</span> <span style="color: #339933;">!</span>getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">equals</span><span style="color: #009900;">&#40;</span>that.<span style="color: #006633;">getPk</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span>
				<span style="color: #339933;">:</span> that.<span style="color: #006633;">getPk</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #009900;">&#41;</span>
			<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">true</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">int</span> hashCode<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #009900;">&#40;</span>getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span> <span style="color: #339933;">?</span> getPk<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">hashCode</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">:</span> <span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>File : StockCategoryId.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Embeddable</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.ManyToOne</span><span style="color: #339933;">;</span>
&nbsp;
@Embeddable
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockCategoryId <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> Stock stock<span style="color: #339933;">;</span>
    <span style="color: #000000; font-weight: bold;">private</span> Category category<span style="color: #339933;">;</span>
&nbsp;
	@ManyToOne
	<span style="color: #000000; font-weight: bold;">public</span> Stock getStock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> stock<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStock<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stock</span> <span style="color: #339933;">=</span> stock<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@ManyToOne
	<span style="color: #000000; font-weight: bold;">public</span> Category getCategory<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> category<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setCategory<span style="color: #009900;">&#40;</span>Category category<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">category</span> <span style="color: #339933;">=</span> category<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">boolean</span> equals<span style="color: #009900;">&#40;</span><span style="color: #003399;">Object</span> o<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
        <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">this</span> <span style="color: #339933;">==</span> o<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">true</span><span style="color: #339933;">;</span>
        <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>o <span style="color: #339933;">==</span> <span style="color: #000066; font-weight: bold;">null</span> <span style="color: #339933;">||</span> getClass<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">!=</span> o.<span style="color: #006633;">getClass</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #339933;">;</span>
&nbsp;
        StockCategoryId that <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>StockCategoryId<span style="color: #009900;">&#41;</span> o<span style="color: #339933;">;</span>
&nbsp;
        <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>stock <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span> <span style="color: #339933;">?</span> <span style="color: #339933;">!</span>stock.<span style="color: #006633;">equals</span><span style="color: #009900;">&#40;</span>that.<span style="color: #006633;">stock</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">:</span> that.<span style="color: #006633;">stock</span> <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #339933;">;</span>
        <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>category <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span> <span style="color: #339933;">?</span> <span style="color: #339933;">!</span>category.<span style="color: #006633;">equals</span><span style="color: #009900;">&#40;</span>that.<span style="color: #006633;">category</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">:</span> that.<span style="color: #006633;">category</span> <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #009900;">&#41;</span>
            <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #339933;">;</span>
&nbsp;
        <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">true</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
&nbsp;
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">int</span> hashCode<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
        <span style="color: #000066; font-weight: bold;">int</span> result<span style="color: #339933;">;</span>
        result <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>stock <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span> <span style="color: #339933;">?</span> stock.<span style="color: #006633;">hashCode</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">:</span> <span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        result <span style="color: #339933;">=</span> <span style="color: #cc66cc;">31</span> <span style="color: #339933;">*</span> result <span style="color: #339933;">+</span> <span style="color: #009900;">&#40;</span>category <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span> <span style="color: #339933;">?</span> category.<span style="color: #006633;">hashCode</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">:</span> <span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        <span style="color: #000000; font-weight: bold;">return</span> result<span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>File : Category.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.HashSet</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Set</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.CascadeType</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Column</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Entity</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.FetchType</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.GeneratedValue</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">static</span> javax.<span style="color: #006633;">persistence</span>.<span style="color: #006633;">GenerationType</span>.<span style="color: #006633;">IDENTITY</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Id</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.OneToMany</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Table</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;category&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyongdb&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Category <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> categoryId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> name<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> desc<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Set<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span> stockCategories <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Category<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Category<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> name, <span style="color: #003399;">String</span> desc<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span> <span style="color: #339933;">=</span> name<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">desc</span> <span style="color: #339933;">=</span> desc<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Category<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> name, <span style="color: #003399;">String</span> desc, Set<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span> stockCategories<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span> <span style="color: #339933;">=</span> name<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">desc</span> <span style="color: #339933;">=</span> desc<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCategories</span> <span style="color: #339933;">=</span> stockCategories<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Id
	@GeneratedValue<span style="color: #009900;">&#40;</span>strategy <span style="color: #339933;">=</span> IDENTITY<span style="color: #009900;">&#41;</span>
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;CATEGORY_ID&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Integer</span> getCategoryId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">categoryId</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setCategoryId<span style="color: #009900;">&#40;</span><span style="color: #003399;">Integer</span> categoryId<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">categoryId</span> <span style="color: #339933;">=</span> categoryId<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;NAME&quot;</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">10</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getName<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setName<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> name<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span> <span style="color: #339933;">=</span> name<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;[DESC]&quot;</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getDesc<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">desc</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setDesc<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> desc<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">desc</span> <span style="color: #339933;">=</span> desc<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@OneToMany<span style="color: #009900;">&#40;</span>fetch <span style="color: #339933;">=</span> FetchType.<span style="color: #006633;">LAZY</span>, mappedBy <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;pk.category&quot;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> Set<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span> getStockCategories<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCategories</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockCategories<span style="color: #009900;">&#40;</span>Set<span style="color: #339933;">&lt;</span>StockCategory<span style="color: #339933;">&gt;</span> stockCategories<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCategories</span> <span style="color: #339933;">=</span> stockCategories<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><p>Done, the many to many relationship should be working now.</p><h4>4. Run it &#8211; Case 1</h4><p>For a new category and a new stock.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">    session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    Stock stock <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stock.<span style="color: #006633;">setStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;7052&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stock.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;PADINI&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    Category category1 <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Category<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;CONSUMER&quot;</span>, <span style="color: #0000ff;">&quot;CONSUMER COMPANY&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    <span style="color: #666666; font-style: italic;">//new category, need save to get the id first</span>
    session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>category1<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    StockCategory stockCategory <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StockCategory<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stockCategory.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stockCategory.<span style="color: #006633;">setCategory</span><span style="color: #009900;">&#40;</span>category1<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stockCategory.<span style="color: #006633;">setCreatedDate</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Date</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">//extra column</span>
    stockCategory.<span style="color: #006633;">setCreatedBy</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;system&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">//extra column</span>
&nbsp;
    stock.<span style="color: #006633;">getStockCategories</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>stockCategory<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    session.<span style="color: #006633;">getTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><p><em>Output&#8230;</em></p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;">Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>category
        <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`DESC`</span><span style="color: #66cc66;">,</span> NAME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock
        <span style="color: #66cc66;">&#40;</span>STOCK_CODE<span style="color: #66cc66;">,</span> STOCK_NAME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">SELECT</span>
        stockcateg_<span style="color: #66cc66;">.</span>CATEGORY_ID<span style="color: #66cc66;">,</span>
        stockcateg_<span style="color: #66cc66;">.</span>STOCK_ID<span style="color: #66cc66;">,</span>
        stockcateg_<span style="color: #66cc66;">.</span>CREATED_BY <span style="color: #993333; font-weight: bold;">AS</span> CREATED1_2_<span style="color: #66cc66;">,</span>
        stockcateg_<span style="color: #66cc66;">.</span>CREATED_DATE <span style="color: #993333; font-weight: bold;">AS</span> CREATED2_2_ 
    <span style="color: #993333; font-weight: bold;">FROM</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock_category stockcateg_ 
    <span style="color: #993333; font-weight: bold;">WHERE</span>
        stockcateg_<span style="color: #66cc66;">.</span>CATEGORY_ID<span style="color: #66cc66;">=</span>? 
        <span style="color: #993333; font-weight: bold;">AND</span> stockcateg_<span style="color: #66cc66;">.</span>STOCK_ID<span style="color: #66cc66;">=</span>?
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock_category
        <span style="color: #66cc66;">&#40;</span>CREATED_BY<span style="color: #66cc66;">,</span> CREATED_DATE<span style="color: #66cc66;">,</span> CATEGORY_ID<span style="color: #66cc66;">,</span> STOCK_ID<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span></pre></div></div><h4>5. Run it &#8211; Case 2</h4><p>Get an existing category and a new stock.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">   session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    Stock stock <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stock.<span style="color: #006633;">setStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;7052&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stock.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;PADINI&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    <span style="color: #666666; font-style: italic;">//assume category id is 7</span>
    Category category1 <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>Category<span style="color: #009900;">&#41;</span>session.<span style="color: #006633;">get</span><span style="color: #009900;">&#40;</span>Category.<span style="color: #000000; font-weight: bold;">class</span>, <span style="color: #cc66cc;">7</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    StockCategory stockCategory <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StockCategory<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stockCategory.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stockCategory.<span style="color: #006633;">setCategory</span><span style="color: #009900;">&#40;</span>category1<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    stockCategory.<span style="color: #006633;">setCreatedDate</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Date</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">//extra column</span>
    stockCategory.<span style="color: #006633;">setCreatedBy</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;system&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #666666; font-style: italic;">//extra column</span>
&nbsp;
    stock.<span style="color: #006633;">getStockCategories</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>stockCategory<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    session.<span style="color: #006633;">getTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><p><em>Output&#8230;</em></p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;">Hibernate: 
    <span style="color: #993333; font-weight: bold;">SELECT</span>
        category0_<span style="color: #66cc66;">.</span>CATEGORY_ID <span style="color: #993333; font-weight: bold;">AS</span> CATEGORY1_1_0_<span style="color: #66cc66;">,</span>
        category0_<span style="color: #66cc66;">.</span><span style="color: #ff0000;">`DESC`</span> <span style="color: #993333; font-weight: bold;">AS</span> DESC2_1_0_<span style="color: #66cc66;">,</span>
        category0_<span style="color: #66cc66;">.</span>NAME <span style="color: #993333; font-weight: bold;">AS</span> NAME1_0_ 
    <span style="color: #993333; font-weight: bold;">FROM</span>
        mkyongdb<span style="color: #66cc66;">.</span>category category0_ 
    <span style="color: #993333; font-weight: bold;">WHERE</span>
        category0_<span style="color: #66cc66;">.</span>CATEGORY_ID<span style="color: #66cc66;">=</span>?
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock
        <span style="color: #66cc66;">&#40;</span>STOCK_CODE<span style="color: #66cc66;">,</span> STOCK_NAME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">SELECT</span>
        stockcateg_<span style="color: #66cc66;">.</span>CATEGORY_ID<span style="color: #66cc66;">,</span>
        stockcateg_<span style="color: #66cc66;">.</span>STOCK_ID<span style="color: #66cc66;">,</span>
        stockcateg_<span style="color: #66cc66;">.</span>CREATED_BY <span style="color: #993333; font-weight: bold;">AS</span> CREATED1_2_<span style="color: #66cc66;">,</span>
        stockcateg_<span style="color: #66cc66;">.</span>CREATED_DATE <span style="color: #993333; font-weight: bold;">AS</span> CREATED2_2_ 
    <span style="color: #993333; font-weight: bold;">FROM</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock_category stockcateg_ 
    <span style="color: #993333; font-weight: bold;">WHERE</span>
        stockcateg_<span style="color: #66cc66;">.</span>CATEGORY_ID<span style="color: #66cc66;">=</span>? 
        <span style="color: #993333; font-weight: bold;">AND</span> stockcateg_<span style="color: #66cc66;">.</span>STOCK_ID<span style="color: #66cc66;">=</span>?
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock_category
        <span style="color: #66cc66;">&#40;</span>CREATED_BY<span style="color: #66cc66;">,</span> CREATED_DATE<span style="color: #66cc66;">,</span> CATEGORY_ID<span style="color: #66cc66;">,</span> STOCK_ID<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span></pre></div></div><p>Done.</p><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2011/04/Hibernate-many-to-many-third-table-annotation.zip'>Hibernate-many-to-many-third-table-annotation.zip</a> (13KB)</div><h4>Reference</h4><ol><li><a href="http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html/mapping.html" target="_blank">Hibernate Mapping Documentation</a></li></ol><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a> <a href="http://www.mkyong.com/tag/many-to-many/" rel="tag">many-to-many</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/" title="Hibernate – Many-to-Many example (Annotation)">Hibernate – Many-to-Many example (Annotation)</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example/" title="Hibernate – Many-to-Many example (XML Mapping)">Hibernate – Many-to-Many example (XML Mapping)</a></li><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/" title="Spring Security + Hibernate XML Example">Spring Security + Hibernate XML Example</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-org-hibernate-service-jta-platform-spi-jtaplatform/" title="java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform">java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-component-mapping-example/" title="Hibernate component mapping example">Hibernate component mapping example</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/struts-tutorials/' title='Struts 1.x Tutorials'><div class='images img-border img-struts'></div></a></li><li><a href='/tutorials/quartz-scheduler-tutorial/' title='Quartz Scheduler Tutorials'><div class='images img-border img-quartz'></div></a></li><li><a href='/tutorials/spring-mvc-tutorials/' title='Spring MVC Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/google-app-engine-tutorial/' title='GAE Tutorials'><div class='images img-border img-gae'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><div class="navigation"><div class="nav-previous"><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div><div class="nav-next"></div></div><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-139765"><div id="dsq-comment-header-139765" class="dsq-comment-header"> <cite id="dsq-cite-139765"> <span id="dsq-author-user-139765">Santi</span> </cite></div><div id="dsq-comment-body-139765" class="dsq-comment-body"><div id="dsq-comment-message-139765" class="dsq-comment-message"><p>In my case, what happens is as if STOCK_ID is a null value when it tries to make the insert into Stock_Category table.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-139764"><div id="dsq-comment-header-139764" class="dsq-comment-header"> <cite id="dsq-cite-139764"> <span id="dsq-author-user-139764">Santi</span> </cite></div><div id="dsq-comment-body-139764" class="dsq-comment-body"><div id="dsq-comment-message-139764" class="dsq-comment-message"><p>Whatever I try I get the following exception:</p><p>org.hibernate.id.IdentifierGenerationException: attempted to assign id from null one-to-one property [...]<br /> at org.hibernate.id.ForeignGenerator.generate(ForeignGenerator.java:101)<br /> at org.hibernate.mapping.Component$ValueGenerationPlan.execute(Component.java:422)<br /> at org.hibernate.id.CompositeNestedGeneratedValueGenerator.generate(CompositeNestedGeneratedValueGenerator.java:121)<br /> at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:117)<br /> at org.hibernate.ejb.event.EJB3PersistEventListener.saveWithGeneratedId(EJB3PersistEventListener.java:78)<br /> at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:208)<br /> at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:151)<br /> at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:843)<br /> at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:836)<br /> at org.hibernate.ejb.engine.spi.EJB3CascadingAction$1.cascade(EJB3CascadingAction.java:53)<br /> at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:388)<br /> at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:331)<br /> at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:209)<br /> at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:418)<br /> at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:358)<br /> at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:334)<br /> at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:209)<br /> at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:166)</p><p>I&#8217;m using a DB2 (AS/400) database.</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://ask.wonderhowtovideo.com/22771/hibernate-many-to-many-mapping-join-table-with-pk-and-extra-columns.html' rel='external nofollow' class='url'>Hibernate many to many mapping, join table with PK and extra columns | Ask &amp; Answers</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-138919"><div id="dsq-comment-header-138919" class="dsq-comment-header"> <cite id="dsq-cite-138919"> <span id="dsq-author-user-138919">Soledad</span> </cite></div><div id="dsq-comment-body-138919" class="dsq-comment-body"><div id="dsq-comment-message-138919" class="dsq-comment-message"><p>Hi, I&#8217;m working with your tutorial, but I&#8217;m facing the same problem that this person in this link <a href="http://stackoverflow.com/questions/12970799/hibernate-many-to-many-withe-extracolumn-criteria-problems" rel="nofollow">http://stackoverflow.com/questions/12970799/hibernate-many-to-many-withe-extracolumn-criteria-problems</a></p><p>Can you please help me about the way to create a criteria for the many-to-many relationship?</p><p>Thanks!.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138405"><div id="dsq-comment-header-138405" class="dsq-comment-header"> <cite id="dsq-cite-138405"> http://www.timestips.com <span id="dsq-author-user-138405">Piyush</span> </cite></div><div id="dsq-comment-body-138405" class="dsq-comment-body"><div id="dsq-comment-message-138405" class="dsq-comment-message"><p>can you solve this problem<br /> its about many to many mapping in hibernate</p><p><a href="http://stackoverflow.com/questions/19188751/how-to-prevent-hibernate-to-insert-into-one-table-in-many-to-many-mapping" rel="nofollow">http://stackoverflow.com/questions/19188751/how-to-prevent-hibernate-to-insert-into-one-table-in-many-to-many-mapping</a></p><p>Thanks a lot.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-138178"><div id="dsq-comment-header-138178" class="dsq-comment-header"> <cite id="dsq-cite-138178"> http://www.rexart.pl <span id="dsq-author-user-138178">Norr</span> </cite></div><div id="dsq-comment-body-138178" class="dsq-comment-body"><div id="dsq-comment-message-138178" class="dsq-comment-message"><p>Why in file StockCategoryId.java in method hashCode in variable result you assign 31* ?</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-139705"><div id="dsq-comment-header-139705" class="dsq-comment-header"> <cite id="dsq-cite-139705"> <span id="dsq-author-user-139705">Murat Ates</span> </cite></div><div id="dsq-comment-body-139705" class="dsq-comment-body"><div id="dsq-comment-message-139705" class="dsq-comment-message"><p>&#8220;The value 31 was chosen because it is an odd prime. If it were even and the multiplication overflowed, information would be lost, as multiplication by 2 is equivalent to shifting&#8221; Read Effective Java, Second Ed. Chapter 3, Item 9.</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-137856"><div id="dsq-comment-header-137856" class="dsq-comment-header"> <cite id="dsq-cite-137856"> http://javadomain.in <span id="dsq-author-user-137856">Diva</span> </cite></div><div id="dsq-comment-body-137856" class="dsq-comment-body"><div id="dsq-comment-message-137856" class="dsq-comment-message"><p>you can find some more details in the below link,”http://javadomain.in/hibernate-join-annotation-example/</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-137762"><div id="dsq-comment-header-137762" class="dsq-comment-header"> <cite id="dsq-cite-137762"> <span id="dsq-author-user-137762">watou</span> </cite></div><div id="dsq-comment-body-137762" class="dsq-comment-body"><div id="dsq-comment-message-137762" class="dsq-comment-message"><p>I have a question :</p><p>is there any benefit to declare :<br /> private Set stockCategories<br /> in both classes Stock and Category ?</p><p>I think that it will slow down the loading in java bean entities, especially when we have a lot of items in both tables stock and category in database.</p><p>thank you.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-137741"><div id="dsq-comment-header-137741" class="dsq-comment-header"> <cite id="dsq-cite-137741"> <span id="dsq-author-user-137741">Siddhant Sahu</span> </cite></div><div id="dsq-comment-body-137741" class="dsq-comment-body"><div id="dsq-comment-message-137741" class="dsq-comment-message"><p>Hi sir,<br /> My name is siddhant.<br /> I have implemented ur example. But at the time of saving it is throwing an error<br /> Exception in thread &#8220;main&#8221; java.lang.NullPointerException</p><p>/**<br /> package SampleJavaProject.Entity;</p><p>import java.io.Serializable;</p><p>/**<br /> * @author Siddhant_S<br /> *<br /> */<br /> @Entity<br /> @Table(name = &#8220;person&#8221;, schema = &#8220;test&#8221;)<br /> public class Person implements Serializable {<br /> @Id<br /> @GeneratedValue(strategy = GenerationType.IDENTITY)<br /> private int id;<br /> private String name;<br /> @Column(precision = 2)<br /> private double amount;<br /> private Calendar birthDate;<br /> private String street;<br /> @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = &#8220;pk.person&#8221;)<br /> private Set bank;</p><p> /**<br /> *<br /> */<br /> public Person() {<br /> }</p><p> /**<br /> * @param name<br /> * @param amount<br /> * @param birthDate<br /> * @param street<br /> * @param bank<br /> */<br /> public Person(String name, double amount, Calendar birthDate, String street) {<br /> this.name = name;<br /> this.amount = amount;<br /> this.birthDate = birthDate;<br /> this.street = street;<br /> this.bank = bank;<br /> }</p><p> /**<br /> * @return the id<br /> */<br /> public int getId() {<br /> return id;<br /> }</p><p> /**<br /> * @param id<br /> *            the id to set<br /> */<br /> public void setId(int id) {<br /> this.id = id;<br /> }</p><p> /**<br /> * @return the name<br /> */<br /> public String getName() {<br /> return name;<br /> }</p><p> /**<br /> * @param name<br /> *            the name to set<br /> */<br /> public void setName(String name) {<br /> this.name = name;<br /> }</p><p> /**<br /> * @return the amount<br /> */<br /> public double getAmount() {<br /> return amount;<br /> }</p><p> /**<br /> * @param amount<br /> *            the amount to set<br /> */<br /> public void setAmount(double amount) {<br /> this.amount = amount;<br /> }</p><p> /**<br /> * @return the birthDate<br /> */<br /> public Calendar getBirthDate() {<br /> return birthDate;<br /> }</p><p> /**<br /> * @param birthDate<br /> *            the birthDate to set<br /> */<br /> public void setBirthDate(Calendar birthDate) {<br /> this.birthDate = birthDate;<br /> }</p><p> /**<br /> * @return the street<br /> */<br /> public String getStreet() {<br /> return street;<br /> }</p><p> /**<br /> * @param street<br /> *            the street to set<br /> */<br /> public void setStreet(String street) {<br /> this.street = street;<br /> }</p><p> /**<br /> * @return the bank<br /> */<br /> public Set getBank() {<br /> return bank;<br /> }</p><p> /**<br /> * @param bank<br /> *            the bank to set<br /> */<br /> public void setBank(Set bank) {<br /> this.bank = bank;<br /> }<br /> }</p><p>/**<br /> package SampleJavaProject.Entity;</p><p>import java.io.Serializable;</p><p>/**<br /> * @author Siddhant_S<br /> *<br /> */<br /> @Entity<br /> @Table(name = &#8220;Bank&#8221;, schema = &#8220;test&#8221;)<br /> public class Bank implements Serializable {<br /> @Id<br /> @GeneratedValue(strategy = GenerationType.IDENTITY)<br /> private int id;<br /> private String name;<br /> @Column(precision = 2)<br /> private double amount;<br /> @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = &#8220;pk.bank&#8221;)<br /> private Set associations;</p><p> /**<br /> *<br /> */<br /> public Bank() {<br /> }</p><p> /**<br /> * @param name<br /> * @param amount<br /> * @param associations<br /> */<br /> public Bank(String name, double amount) {<br /> this.name = name;<br /> this.amount = amount;<br /> }</p><p> /**<br /> * @return the id<br /> */<br /> public int getId() {<br /> return id;<br /> }</p><p> /**<br /> * @param id<br /> *            the id to set<br /> */<br /> public void setId(int id) {<br /> this.id = id;<br /> }</p><p> /**<br /> * @return the name<br /> */<br /> public String getName() {<br /> return name;<br /> }</p><p> /**<br /> * @param name<br /> *            the name to set<br /> */<br /> public void setName(String name) {<br /> this.name = name;<br /> }</p><p> /**<br /> * @return the amount<br /> */<br /> public double getAmount() {<br /> return amount;<br /> }</p><p> /**<br /> * @param amount<br /> *            the amount to set<br /> */<br /> public void setAmount(double amount) {<br /> this.amount = amount;<br /> }</p><p> /**<br /> * @return the associations<br /> */<br /> public Set getAssociations() {<br /> return associations;<br /> }</p><p> /**<br /> * @param associations<br /> *            the associations to set<br /> */<br /> public void setAssociations(Set associations) {<br /> this.associations = associations;<br /> }<br /> }</p><p>/**<br /> package SampleJavaProject.Entity;</p><p>import java.io.Serializable;</p><p>/**<br /> * @author Siddhant_S<br /> *<br /> */<br /> @Entity<br /> @Table(name = &#8220;Person_Bank_Association&#8221;, schema = &#8220;test&#8221;)<br /> @AssociationOverrides({<br /> @AssociationOverride(name = &#8220;pk.person&#8221;, joinColumns = @JoinColumn(name = &#8220;person_id&#8221;)),<br /> @AssociationOverride(name = &#8220;pk.bank&#8221;, joinColumns = @JoinColumn(name = &#8220;bank_id&#8221;)) })<br /> public class PersonBankAssociation implements Serializable {<br /> @EmbeddedId<br /> private PersonBankId pk;<br /> private String name;<br /> private double amount;<br /> /**<br /> *<br /> */<br /> public PersonBankAssociation() {<br /> }<br /> /**<br /> * @param name<br /> * @param amount<br /> */<br /> public PersonBankAssociation(String name, double amount) {<br /> this.name = name;<br /> this.amount = amount;<br /> }<br /> /**<br /> * @return the pk<br /> */<br /> public PersonBankId getPk() {<br /> return pk;<br /> }<br /> /**<br /> * @param pk<br /> *            the pk to set<br /> */<br /> public void setPk(PersonBankId pk) {<br /> this.pk = pk;<br /> }</p><p> /**<br /> * @return the name<br /> */<br /> public String getName() {<br /> return name;<br /> }</p><p> /**<br /> * @param name<br /> *            the name to set<br /> */<br /> public void setName(String name) {<br /> this.name = name;<br /> }</p><p> /**<br /> * @return the amount<br /> */<br /> public double getAmount() {<br /> return amount;<br /> }</p><p> /**<br /> * @param amount<br /> *            the amount to set<br /> */<br /> public void setAmount(double amount) {<br /> this.amount = amount;<br /> }</p><p> /**<br /> *<br /> * @return person<br /> */<br /> @Transient<br /> public Person getPerson() {<br /> return getPk().getPerson();<br /> }</p><p> public void setPerson(Person person) {<br /> getPk().setPerson(person);<br /> }</p><p> /**<br /> *<br /> * @return bank<br /> */<br /> @Transient<br /> public Bank getBank() {<br /> return getPk().getBank();<br /> }</p><p> public void setBank(Bank bank) {<br /> getPk().setBank(bank);<br /> }<br /> }</p><p>/**<br /> package SampleJavaProject.Entity;</p><p>import java.io.Serializable;</p><p>/**<br /> * @author Siddhant_S<br /> *<br /> */<br /> @Embeddable<br /> public class PersonBankId implements Serializable {<br /> @ManyToOne<br /> private Person person;<br /> @ManyToOne<br /> private Bank bank;</p><p> /**<br /> *<br /> */<br /> public PersonBankId() {<br /> }</p><p> /**<br /> * @param person<br /> * @param bank<br /> */<br /> public PersonBankId(Person person, Bank bank) {<br /> this.person = person;<br /> this.bank = bank;<br /> }</p><p> /**<br /> * @return the person<br /> */<br /> public Person getPerson() {<br /> return person;<br /> }</p><p> /**<br /> * @param person<br /> *            the person to set<br /> */<br /> public void setPerson(Person person) {<br /> this.person = person;<br /> }</p><p> /**<br /> * @return the bank<br /> */<br /> public Bank getBank() {<br /> return bank;<br /> }</p><p> /**<br /> * @param bank<br /> *            the bank to set<br /> */<br /> public void setBank(Bank bank) {<br /> this.bank = bank;<br /> }</p><p>}</p><p>/**<br /> package SampleJavaProject.HibernateTransaction;</p><p>import java.util.Calendar;</p><p>/**<br /> * @author Siddhant_S<br /> *<br /> */<br /> public class PersonBankApp {<br /> private static final Logger _logger = LoggerFactory<br /> .getLogger(PersonBankApp.class);<br /> private static final Session session = HibernateUtil.getSessionFactory()<br /> .openSession();</p><p> /**<br /> * @return the Logger<br /> */<br /> public static Logger getLogger() {<br /> return _logger;<br /> }</p><p> /**<br /> * @return the session<br /> */<br /> public static Session getSession() {<br /> return session;<br /> }</p><p> /**<br /> * @param args<br /> */<br /> public static void main(String[] args) {<br /> getSession().beginTransaction();<br /> Bank bank=new Bank(&#8220;SBI&#8221;, 2000.00);<br /> getSession().save(bank);<br /> Calendar birthDate=GregorianCalendar.getInstance();<br /> birthDate.setTime(new Date());<br /> Person person=new Person(&#8220;Siddhant&#8221;, 2000.00, birthDate, &#8220;lane4&#8243;);<br /> PersonBankAssociation associations=new PersonBankAssociation(&#8220;Sbi name&#8221;, 2000.00);<br /> associations.setPerson(person);<br /> associations.setBank(bank);<br /> person.getBank().add(associations);</p><p> Integer personId= (Integer) getSession().save(person);<br /> getSession().getTransaction().commit();<br /> getSession().close();<br /> System.out.println(&#8220;Person id:&#8221;+personId);<br /> }</p><p>}</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-137783"><div id="dsq-comment-header-137783" class="dsq-comment-header"> <cite id="dsq-cite-137783"> <span id="dsq-author-user-137783">Siddhant Sahu</span> </cite></div><div id="dsq-comment-body-137783" class="dsq-comment-body"><div id="dsq-comment-message-137783" class="dsq-comment-message"><p>Please help me on this code i m not able to save the data in the DB.<br /> Please help me as soon as possible</p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-138099"><div id="dsq-comment-header-138099" class="dsq-comment-header"> <cite id="dsq-cite-138099"> <span id="dsq-author-user-138099">siddhant sahu</span> </cite></div><div id="dsq-comment-body-138099" class="dsq-comment-body"><div id="dsq-comment-message-138099" class="dsq-comment-message"><p>I got my solution for this problem.<br /> Actually it is because of the the initializations problem.</p></div></div><ul class="children"><li class="comment odd alt depth-4" id="dsq-comment-139469"><div id="dsq-comment-header-139469" class="dsq-comment-header"> <cite id="dsq-cite-139469"> <span id="dsq-author-user-139469">Gavino Ang</span> </cite></div><div id="dsq-comment-body-139469" class="dsq-comment-body"><div id="dsq-comment-message-139469" class="dsq-comment-message"><p>Hi Siddhant, please elaborate on your answer, I believe I am getting the same issue as you. Thank you very much.</p></div></div></li></ul></li></ul></li></ul></li></ul><div class="navigation"><div class="nav-previous"><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div><div class="nav-next"></div></div></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/';var disqus_identifier='8723 http://www.mkyong.com/?p=8723';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation)";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=8723';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Hibernate – Many-to-Many example (XML Mapping)",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-many-to-many-relationship-example\/",'date':"04\/28\/2011 04:18 PM",'excerpt':"[...] mapping file (hbm).  Note  For many to many with extra columns in join table, please refer to &hellip;",'type':"pingback"},{'author_name':"hibernate many-to-many example | Jisku.com - Developers Network",'author_url':"http:\/\/jisku.com\/blog\/2012\/09\/hibernate-many-to-many-example\/",'date':"09\/14\/2012 04:36 PM",'excerpt':"[...] many-to-many example   I am following the tutorial from here, and there is one part that I do &hellip;",'type':"pingback"},{'author_name':"Spring 3 and Hibernate 4 for beginners &laquo; Solutions to basic IT problems",'author_url':"http:\/\/it4beginners.wordpress.com\/2012\/10\/05\/spring-3-and-hibernate-4-for-beginners\/",'date':"10\/05\/2012 10:38 PM",'excerpt':"[...] table&#8221; has an additional column (the percentage of the substance in the compound). I followed this tutorial and therefore &hellip;",'type':"pingback"},{'author_name':"Hibernate many to many mapping, join table with PK and extra columns | Ask &amp; Answers",'author_url':"http:\/\/ask.wonderhowtovideo.com\/22771\/hibernate-many-to-many-mapping-join-table-with-pk-and-extra-columns.html",'date':"10\/31\/2013 06:44 AM",'excerpt':"[&#8230;] done the necessary changes to my models outlined here. However, I don&#8217;t know what to put on my join &hellip;",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-many-to-many-example-join-table-extra-column-annotation\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="8723" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>