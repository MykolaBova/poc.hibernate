<!DOCTYPE html>
<html lang="en">
<title>Hibernate – One-to-Many example (Annotation)</title>
<head>
<meta name="generator" content="WordPress 3.5.1" />
<meta name="google-site-verification"
	content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<link href="/wp-content/themes/mkyong-ma/bootstrap.min.css?20120909" rel="stylesheet">
<link href="/wp-content/themes/mkyong-ma/style.css?20140402" rel="stylesheet" />
<link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" />


<link rel='stylesheet' id='contact-form-7-css'  href='http://www.mkyong.com/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=3.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp-pagenavi-css'  href='http://www.mkyong.com/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' />
<script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script>
<link rel='prev' title='Hibernate – One-to-One example (Annotation)' href='http://www.mkyong.com/hibernate/hibernate-one-to-one-relationship-example-annotation/' />
<link rel='next' title='Hibernate &#8211; Unable to insert if column named is keyword, such as DESC' href='http://www.mkyong.com/hibernate/hibernate-unable-to-insert-if-column-named-is-keyword-such-as-desc/' />
<link rel='shortlink' href='http://www.mkyong.com/?p=8690' />

<!-- All in One SEO Pack 1.6.14.6 by Michael Torbert of Semper Fi Web Design[35,91] -->
<meta name="keywords" content="hibernate,one-to-many" />
<link rel="canonical" href="http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example-annotation/" />
<!-- /all in one seo pack -->
<link rel="stylesheet" href="http://www.mkyong.com/wp-content/plugins/digg-digg-light/css/diggdigg.css" type="text/css" media="screen" /><link rel='stylesheet' href='http://www.mkyong.com/wp-content/plugins/mplus-recent-posts/style.css?v=1' type='text/css' media='screen' /><link rel='stylesheet' href='http://www.mkyong.com/wp-content/plugins/mplus-show-tutorials/style.css' type='text/css' media='screen' /></head>

<body>

<div id="header-top">
	<div class="container">
	
		<div id="header-top-container">
			<ul>
				<li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li>
				<li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li>
                                <li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li>
				<li>
			        <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a>
				</li>

                               <li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li>

			</ul>
		</div>
		
	</div>
	<!-- /.container-->
</div>
<!-- /#top-header -->

<div id="header">
	
	<div class="container">
	
		<div id="header-logo">
			<a href="/" title="mkyong.com">
				<div id="logo" ></div>
			</a>
		</div>
		
		<div id="header-banner">

<div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div>

                </div>
		
	</div>
	<!-- /.container -->

</div>
<!-- /#header -->

<div id="menu">

   <div class="container">
    
		<ul>
		  
		  <li class="menu-allround">
				<a href="/">Home</a>
		  </li>

		  <li class="menu-allround">
				<a href="/all-tutorials-on-mkyong-com/">All Tutorials</a>
		  </li>
		
		  <li class="menu-topround">
				<a href="#">Java Core</a>
				
		    	<div id="java-menu" class="dropdown">
			
					<div class="tut-title">Java Core Tutorials</div>
					
					<div class="dropdown-item">
					
						<a href="/tag/java/">
							<div class="images img-border img-java img-holder"></div>
						</a>
						<div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div>
						<div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div>
						<div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div>
	                    <div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div>
		                <div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div>
			            <div>6. <a href="/tag/java/">Java Misc</a></div>
			
					</div>
				
		    	</div>
	
		  </li>
		 
			<li class="menu-topround">
		    	<a href="#">JSF</a>

		    	<div id="jsf-menu" class="dropdown">

					<div class="tut-title">JSF Tutorials</div>

					<div class="dropdown-item">

						<a href="/tutorials/jsf-2-0-tutorials/">
							<div class="images img-border img-jsf2 img-holder"></div>
						</a>
						<div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div>
					</div>

		    	</div>

		  </li>
		
		  <li class="menu-topround">
		    	<a href="#">Spring</a>
		
		    	<div id="spring-menu" class="dropdown">
			
					<div class="tut-title">Spring Tutorials</div>
					
					<div class="dropdown-item">
					
						<a href="/tutorials/spring-tutorials/">
							<div class="images img-border img-spring img-holder"></div>
						</a>
			<div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div>
			<div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div>
	                <div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div>
                        <div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div>					
                        <div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div>
					</div>
				
		    	</div>
		
		  </li>
		
		  <li class="menu-topround">
		    	<a href="#">Hibernate</a>
		
		    	<div id="hibernate-menu" class="dropdown">
			
					<div class="tut-title">Hibernate Tutorials</div>
					
					<div class="dropdown-item">
						<a href="/tutorials/hibernate-tutorials/">
							<div class="images img-border img-hibernate img-holder"></div>
						</a>
						<div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div>
					</div>
				
		    	</div>
		
		  </li>
		
		  <li class="menu-topround">
		    	<a href="#">Struts</a>

		    	<div id="struts-menu" class="dropdown">

					<div class="tut-title">Struts Tutorials</div>

					<div class="dropdown-item">

						<a href="/tutorials/struts-2-tutorials/">
							<div class="images img-border img-struts img-holder"></div>
						</a>
						<div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div>
						<div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div>
					</div>

		    	</div>

		  </li>
		
		  <li class="menu-topround">
				<a href="#">Android</a>

		    	<div id="android-menu" class="dropdown">

					<div class="tut-title">Android Tutorials</div>

					<div class="dropdown-item">
						<a href="/tutorials/android-tutorial/">
							<div class="images img-border img-android img-holder"></div>
						</a>
						<div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div>
					</div>

		    	</div>

		  </li>
		  
		  <li class="menu-topround">
				<a href="#">Others</a>

		    	<div id="misc-menu" class="dropdown">
					<div class="dropdown-item">
						<ol> 
							<li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li>
		                    <li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li>
							<li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li>
							<li><a href="/tutorials/maven-tutorials/">Maven</a></li>
							<li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li>
							<li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li>
							<li><a href="/tutorials/junit-tutorials/">jUnit</a></li>
							<li><a href="/tutorials/testng-tutorials/">TestNG</a></li>
							<li><a href="/tutorials/jquery-tutorials/">jQuery</a></li>
						   <li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li>
						</ol>					
					</div>

		    	</div>

		  </li>
		 
		</ul>		     
		
            <div style="float:right;margin:4px 0">

  			<form action="/search/" id="cse-search-box">
			  <div>
			    <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" />
			    <input type="hidden" name="cof" value="FORID:10" />
			    <input type="hidden" name="ie" value="UTF-8" />
			    <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" />
			    <input type="submit" name="sa" value="Search" style="height:25px;"  />
			  </div>
			</form>

	    </div>



   </div>
   <!-- /.container -->
					
</div>
<!--/.menu -->
<div class="container">

	<div class="row">

		<div class="span10">

			<!-- google_ad_section_start(name=mkyongregion) -->

			<div id="post-container">

									
					
						<article class="post" id="post-8690">

	<header>

	<h1>
		Hibernate – One-to-Many example (Annotation)	</h1>

	<div class='post-meta'>

		<div id="small-author-avatar">
			<img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />		</div>
		
		<div>
				
						
                        Posted on <time datetime="2011-04-26T15:27:36+00:00">April 26, 2011</time>

                        <span>
			, &nbsp;&nbsp;&nbsp; Last modified : 
			April 28, 2011			</span>

			<div>
			By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a>
			</div>
			
		</div>

	</div>				
	</header>

	<div class="post-content">

		<div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>In this tutorial, it will reuse the entire infrastructure of the previous &#8220;<a href="http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example/">Hibernate one to many relationship example &#8211; XML mapping</a>&#8221; tutorial, enhance it to support Hibernate / JPA annotation.</p>
<h4>Project Structure</h4>
<p>Review the new project structure of this tutorial.</p>
<div class="pic">
<img src="http://www.mkyong.com/wp-content/uploads/2011/04/one-to-many-annotation-relationship-folder.png" alt="one to many annotation folder" title="one-to-many-annotation-relationship-folder" width="461" height="429" />
</div>
<div class="note">
<strong>Note</strong><br />
Since Hibernate 3.6, annotation codes are merged into the Hibernate core module, so, the <a href="http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example/">previous pom.xml</a> file can be reuse.
</div>
<div><div style="margin:20px 0;">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 728x90, created 11/18/07 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:728px;height:90px"
     data-ad-client="ca-pub-2836379775501347"
     data-ad-slot="7391621200" 
	 data-ad-region="mkyongregion"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div></div><h4>1. &#8220;One-to-many&#8221; table relationship</h4>
<p>See the previous one to many table relationship again.</p>
<div class="pic">
<img src="http://www.mkyong.com/wp-content/uploads/2010/02/one-to-many-relationship.png" alt="one to many table relationship" title="one-to-many-relationship" width="554" height="207" />
</div>
<div><div style="margin:20px 0;">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 728x90 - After2ndH4 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:728px;height:90px"
     data-ad-client="ca-pub-2836379775501347"
     data-ad-slot="3642936086" 
	 data-ad-region="mkyongregion"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div></div><h4>2. Hibernate Model Class</h4>
<p>Update previous model classes &#8211; <code>Stock.java</code> and <code>StockDailyRecord.java</code>, and define the annotation code inside.</p>
<p><em>File : Stock.java</em></p>

<div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.HashSet</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Set</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Column</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Entity</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.FetchType</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.GeneratedValue</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">static</span> javax.<span style="color: #006633;">persistence</span>.<span style="color: #006633;">GenerationType</span>.<span style="color: #006633;">IDENTITY</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Id</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.OneToMany</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Table</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.UniqueConstraint</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyongdb&quot;</span>, uniqueConstraints <span style="color: #339933;">=</span> <span style="color: #009900;">&#123;</span>
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_NAME&quot;</span><span style="color: #009900;">&#41;</span>,
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_CODE&quot;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> stockDailyRecords <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span>
			<span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode, <span style="color: #003399;">String</span> stockName<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span> <span style="color: #339933;">=</span> stockCode<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span> <span style="color: #339933;">=</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode, <span style="color: #003399;">String</span> stockName,
			Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> stockDailyRecords<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span> <span style="color: #339933;">=</span> stockCode<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span> <span style="color: #339933;">=</span> stockName<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockDailyRecords</span> <span style="color: #339933;">=</span> stockDailyRecords<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Id
	@GeneratedValue<span style="color: #009900;">&#40;</span>strategy <span style="color: #339933;">=</span> IDENTITY<span style="color: #009900;">&#41;</span>
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_ID&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Integer</span> getStockId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockId</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockId<span style="color: #009900;">&#40;</span><span style="color: #003399;">Integer</span> stockId<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockId</span> <span style="color: #339933;">=</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_CODE&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">10</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getStockCode<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockCode<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockCode<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockCode</span> <span style="color: #339933;">=</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_NAME&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">20</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getStockName<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockName<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> stockName<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockName</span> <span style="color: #339933;">=</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@OneToMany<span style="color: #009900;">&#40;</span>fetch <span style="color: #339933;">=</span> FetchType.<span style="color: #006633;">LAZY</span>, mappedBy <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> getStockDailyRecords<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockDailyRecords</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockDailyRecords<span style="color: #009900;">&#40;</span>Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> stockDailyRecords<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockDailyRecords</span> <span style="color: #339933;">=</span> stockDailyRecords<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div>

<p><em>File : StockDailyRecord.java</em></p>

<div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Date</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Column</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Entity</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.FetchType</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.GeneratedValue</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">static</span> javax.<span style="color: #006633;">persistence</span>.<span style="color: #006633;">GenerationType</span>.<span style="color: #006633;">IDENTITY</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Id</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.JoinColumn</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.ManyToOne</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Table</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.Temporal</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.TemporalType</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.persistence.UniqueConstraint</span><span style="color: #339933;">;</span>
&nbsp;
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock_daily_record&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyongdb&quot;</span>, 
uniqueConstraints <span style="color: #339933;">=</span> @UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;DATE&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockDailyRecord <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> recordId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Stock stock<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Float</span> priceOpen<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Float</span> priceClose<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Float</span> priceChange<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Long</span> volume<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Date</span> date<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> StockDailyRecord<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> StockDailyRecord<span style="color: #009900;">&#40;</span>Stock stock, <span style="color: #003399;">Date</span> date<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stock</span> <span style="color: #339933;">=</span> stock<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">date</span> <span style="color: #339933;">=</span> date<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> StockDailyRecord<span style="color: #009900;">&#40;</span>Stock stock, <span style="color: #003399;">Float</span> priceOpen, <span style="color: #003399;">Float</span> priceClose,
			<span style="color: #003399;">Float</span> priceChange, <span style="color: #003399;">Long</span> volume, <span style="color: #003399;">Date</span> date<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stock</span> <span style="color: #339933;">=</span> stock<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceOpen</span> <span style="color: #339933;">=</span> priceOpen<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceClose</span> <span style="color: #339933;">=</span> priceClose<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceChange</span> <span style="color: #339933;">=</span> priceChange<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">volume</span> <span style="color: #339933;">=</span> volume<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">date</span> <span style="color: #339933;">=</span> date<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Id
	@GeneratedValue<span style="color: #009900;">&#40;</span>strategy <span style="color: #339933;">=</span> IDENTITY<span style="color: #009900;">&#41;</span>
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;RECORD_ID&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Integer</span> getRecordId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">recordId</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setRecordId<span style="color: #009900;">&#40;</span><span style="color: #003399;">Integer</span> recordId<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">recordId</span> <span style="color: #339933;">=</span> recordId<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@ManyToOne<span style="color: #009900;">&#40;</span>fetch <span style="color: #339933;">=</span> FetchType.<span style="color: #006633;">LAZY</span><span style="color: #009900;">&#41;</span>
	@JoinColumn<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_ID&quot;</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> Stock getStock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stock</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStock<span style="color: #009900;">&#40;</span>Stock stock<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stock</span> <span style="color: #339933;">=</span> stock<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;PRICE_OPEN&quot;</span>, precision <span style="color: #339933;">=</span> <span style="color: #cc66cc;">6</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Float</span> getPriceOpen<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceOpen</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setPriceOpen<span style="color: #009900;">&#40;</span><span style="color: #003399;">Float</span> priceOpen<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceOpen</span> <span style="color: #339933;">=</span> priceOpen<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;PRICE_CLOSE&quot;</span>, precision <span style="color: #339933;">=</span> <span style="color: #cc66cc;">6</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Float</span> getPriceClose<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceClose</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setPriceClose<span style="color: #009900;">&#40;</span><span style="color: #003399;">Float</span> priceClose<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceClose</span> <span style="color: #339933;">=</span> priceClose<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;PRICE_CHANGE&quot;</span>, precision <span style="color: #339933;">=</span> <span style="color: #cc66cc;">6</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Float</span> getPriceChange<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceChange</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setPriceChange<span style="color: #009900;">&#40;</span><span style="color: #003399;">Float</span> priceChange<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">priceChange</span> <span style="color: #339933;">=</span> priceChange<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;VOLUME&quot;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Long</span> getVolume<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">volume</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setVolume<span style="color: #009900;">&#40;</span><span style="color: #003399;">Long</span> volume<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">volume</span> <span style="color: #339933;">=</span> volume<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@Temporal<span style="color: #009900;">&#40;</span>TemporalType.<span style="color: #006633;">DATE</span><span style="color: #009900;">&#41;</span>
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;DATE&quot;</span>, unique <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">true</span>, nullable <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">false</span>, length <span style="color: #339933;">=</span> <span style="color: #cc66cc;">10</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Date</span> getDate<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">date</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setDate<span style="color: #009900;">&#40;</span><span style="color: #003399;">Date</span> date<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">date</span> <span style="color: #339933;">=</span> date<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div>

<h4>3. Hibernate Configuration File</h4>
<p>Puts annotated classes <code>Stock.java</code> and <code>StockDailyRecord.java</code> in <code>hibernate.cfg.xml</code> like this :</p>
<p><em>File : hibernate.cfg.xml</em></p>

<div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span> <span style="color: #000066;">encoding</span>=<span style="color: #ff0000;">&quot;utf-8&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-configuration PUBLIC</span>
<span style="color: #00bbdd;">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-configuration<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;session-factory<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.driver_class&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>com.mysql.jdbc.Driver<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.url&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>jdbc:mysql://localhost:3306/mkyongdb<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.username&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>root<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.password&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>password<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.dialect&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>org.hibernate.dialect.MySQLDialect<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;show_sql&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>true<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Stock&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.StockDailyRecord&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/session-factory<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-configuration<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div>

<h4>4. Run It</h4>
<p>Run it, Hibernate will insert a row into the STOCK table and a row into the STOCK_DAILY_RECORD table.</p>
<p><em>File : App.java</em></p>

<div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Date</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.Session</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.Stock</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.StockDailyRecord</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.util.HibernateUtil</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Hibernate one to many (Annotation)&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	Session session <span style="color: #339933;">=</span> HibernateUtil.<span style="color: #006633;">getSessionFactory</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">openSession</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	Stock stock <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stock.<span style="color: #006633;">setStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;7052&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stock.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;PADINI&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        StockDailyRecord stockDailyRecords <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StockDailyRecord<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setPriceOpen</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Float</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;1.2&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setPriceClose</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Float</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;1.1&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setPriceChange</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Float</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;10.0&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setVolume</span><span style="color: #009900;">&#40;</span>3000000L<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setDate</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Date</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        stockDailyRecords.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>        
        stock.<span style="color: #006633;">getStockDailyRecords</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>stockDailyRecords<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stockDailyRecords<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	session.<span style="color: #006633;">getTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Done&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div>

<p><em>Output</em></p>

<div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;">Hibernate one <span style="color: #993333; font-weight: bold;">TO</span> many <span style="color: #66cc66;">&#40;</span>Annotation<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock
        <span style="color: #66cc66;">&#40;</span>STOCK_CODE<span style="color: #66cc66;">,</span> STOCK_NAME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock_daily_record
        <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">DATE</span><span style="color: #66cc66;">,</span> PRICE_CHANGE<span style="color: #66cc66;">,</span> PRICE_CLOSE<span style="color: #66cc66;">,</span> PRICE_OPEN<span style="color: #66cc66;">,</span> STOCK_ID<span style="color: #66cc66;">,</span> VOLUME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Done</pre></div></div>

<div class="download">
Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2011/04/Hibernate-one-to-many-annotation.zip'>Hibernate-one-to-many-annotation.zip</a> (9KB)
</div>
<h4>Reference</h4>
<ol>
<li><a href="http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html/mapping.html#d0e7576">Hibernate Documentation &#8211; one to many relationship</a></li>
</ol>
<!-- Powered by Adsense Deamon WordPress Plugin, 
    Author : Yong Mook Kim
    Website : http://www.mkyong.com/blog/adsense-daemon-wordpress-plugin/ -->	
		<div id="post-meta-extra">				
                         Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a>  <a href="http://www.mkyong.com/tag/one-to-many/" rel="tag">one-to-many</a></span>		</div>


                <!-- tutorial navigator -->
<div style="margin:20px 0;">

<center>

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 300x250, created 10/23/09 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-2836379775501347"
     data-ad-slot="7146814087" 
     data-ad-region="mkyongregion"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</center>

</div>

        			
	<div id="author-info">
		<div id="big-author-avatar">
			<img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />		</div>
		
		<div id="author-description">
			<div id="author-link">
				<a href="http://www.mkyong.com/author/mkyong/" rel="author">
					mkyong				</a>
			</div>
			Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.		</div>

		<div class="clearboth"></div>

	
		

	
	</div>
	<!-- /#author-info -->

	
	<div id="post-after-related-post">
	<h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example/" title="Hibernate &#8211; One-to-Many example (XML Mapping) ">Hibernate &#8211; One-to-Many example (XML Mapping) </a></li><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/" title="Spring Security + Hibernate XML Example">Spring Security + Hibernate XML Example</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-org-hibernate-service-jta-platform-spi-jtaplatform/" title="java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform">java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-component-mapping-example/" title="Hibernate component mapping example">Hibernate component mapping example</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/" title="Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) ">Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) </a></li></ul>	</div>
	
	<div id="post-after-popular-post">
		
<h4>Popular Posts</h4>
<ul>
<li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li>
<li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li>
<li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li>
<li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li>
<li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li>
</ul>

	</div>
	
	<div class="clearboth"></div>

	
	</div>
	<!-- /post-content -->

</article>
<!-- /post -->
	
        <div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials : </div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/quartz-scheduler-tutorial/' title='Quartz Scheduler Tutorials'><div class='images img-border img-quartz'></div></a></li><li><a href='/tag/java/' title='Java Tutorials'><div class='images img-border img-java'></div></a></li><li><a href='/tutorials/struts-tutorials/' title='Struts 1.x Tutorials'><div class='images img-border img-struts'></div></a></li><li><a href='/tutorials/spring-security-tutorials/' title='Spring Security Tutorials'><div class='images img-border img-spring'></div></a></li></ul><div class='clearboth'></div></div>
<div style="padding:0 20px 20px 0">
<div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div>
</div>

	<div id="post-comments">
		
<div id="disqus_thread">
                    <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-138365">
        <div id="dsq-comment-header-138365" class="dsq-comment-header">
            <cite id="dsq-cite-138365">
                <span id="dsq-author-user-138365">giuseppe</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138365" class="dsq-comment-body">
            <div id="dsq-comment-message-138365" class="dsq-comment-message"><p>Hi<br />
first of all thanks for all your posts and time. I&#8217;m a frequent reader but it&#8217;s my first time.<br />
my question is a kind of &#8220;best practise&#8221; question.</p>
<p>I had to write equals and hash method<br />
ie</p>
<p>@Override<br />
public int hashCode() {<br />
	return 13 * id.hashCode();<br />
}</p>
<p>so when the code down is executed</p>
<p>stockDailyRecords.setStock(stock);<br />
stock.getStockDailyRecords().add(stockDailyRecords);</p>
<p>I receive a null pointer error, because stockDailyRecords is not saved yet and id is null<br />
you surely know hash method is used for adding items in set</p>
<p>but if I save stockDailyRecords before linking it to stock<br />
I receive an other error because sql says stockid cannot be null.</p>
<p>what is your opinion?<br />
what is best way to avoid this?</p>
<p>thank</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-135531">
        <div id="dsq-comment-header-135531" class="dsq-comment-header">
            <cite id="dsq-cite-135531">
                <span id="dsq-author-user-135531">Yamir</span>
            </cite>
        </div>
        <div id="dsq-comment-body-135531" class="dsq-comment-body">
            <div id="dsq-comment-message-135531" class="dsq-comment-message"><p>Hello Mkyong,</p>
<p>I trying to use your example but using spring jpa, but I notice that the children is not persisted on the database.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-130175">
        <div id="dsq-comment-header-130175" class="dsq-comment-header">
            <cite id="dsq-cite-130175">
                <span id="dsq-author-user-130175">naveen</span>
            </cite>
        </div>
        <div id="dsq-comment-body-130175" class="dsq-comment-body">
            <div id="dsq-comment-message-130175" class="dsq-comment-message"><p>sir, why can&#8217;t upload video tutorials. They will become more useful,<br />
Thanks..</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-127113">
        <div id="dsq-comment-header-127113" class="dsq-comment-header">
            <cite id="dsq-cite-127113">
                <span id="dsq-author-user-127113">Marcin</span>
            </cite>
        </div>
        <div id="dsq-comment-body-127113" class="dsq-comment-body">
            <div id="dsq-comment-message-127113" class="dsq-comment-message"><p>Hi,<br />
Your posts are really helpful and good commented.Thanks a lot.</p>
<p>Best Regards<br />
Marcin</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-123964">
        <div id="dsq-comment-header-123964" class="dsq-comment-header">
            <cite id="dsq-cite-123964">
                <span id="dsq-author-user-123964">Luis</span>
            </cite>
        </div>
        <div id="dsq-comment-body-123964" class="dsq-comment-body">
            <div id="dsq-comment-message-123964" class="dsq-comment-message"><p>Nice post, thanks!</p>
<p>One comment be careful if you want to create this schema using</p>

<div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #ddbb00;">&amp;lt;</span>property name=<span style="color: #ddbb00;">&amp;quot;</span>hibernate.hbm2ddl.auto<span style="color: #ddbb00;">&amp;quot;&amp;gt;</span>update<span style="color: #ddbb00;">&amp;lt;</span>/property<span style="color: #ddbb00;">&amp;gt;</span></pre></div></div>

<p>&#8230; you will probably get:</p>

<div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">ORA-02261: such unique or primary key already exists in the table</pre></div></div>

<p>Solution: do not add constraints to your ids, just annotate them like this:</p>

<div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">	@Id
	@Column<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>ID<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">int</span> getId<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> id<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span></pre></div></div>

<p>Hope it helps, </p>
<p>Luis</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-123108">
        <div id="dsq-comment-header-123108" class="dsq-comment-header">
            <cite id="dsq-cite-123108">
                <span id="dsq-author-user-123108">Adeeb</span>
            </cite>
        </div>
        <div id="dsq-comment-body-123108" class="dsq-comment-body">
            <div id="dsq-comment-message-123108" class="dsq-comment-message"><p>Hi<br />
Can any one tell me, how will be the mapping if STOCK_ID is changed to STK_ID in stock_daily_record table?<br />
Because i am not sure about the columns used while creating mapping in above code since it is not mentioned in description.<br />
Also with this changes, there will be no logical constraint using FOREIGN key relationship between above two tables.</p>
<p>Thanks</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-122716">
        <div id="dsq-comment-header-122716" class="dsq-comment-header">
            <cite id="dsq-cite-122716">
                <span id="dsq-author-user-122716">Adrien</span>
            </cite>
        </div>
        <div id="dsq-comment-body-122716" class="dsq-comment-body">
            <div id="dsq-comment-message-122716" class="dsq-comment-message"><p>Thanks for the example.</p>
<p>You probably want to precise in the title/description that your example is WITHOUT a join table.</p>
<p>You also probably want to precise if you&#8217;re doing a Unidirectional mapping or a Bidirectional mapping.</p>
<p>Any chance to provide a similar example but with a join table ?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-122717">
        <div id="dsq-comment-header-122717" class="dsq-comment-header">
            <cite id="dsq-cite-122717">
                <span id="dsq-author-user-122717">Adrien</span>
            </cite>
        </div>
        <div id="dsq-comment-body-122717" class="dsq-comment-body">
            <div id="dsq-comment-message-122717" class="dsq-comment-message"><p>You can have a look at <a href="http://stackoverflow.com/questions/1307203/hibernate-unidirectional-one-to-many-association-why-is-a-join-table-better" rel="nofollow">http://stackoverflow.com/questions/1307203/hibernate-unidirectional-one-to-many-association-why-is-a-join-table-better</a> regarding the join table comment I made</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-122489">
        <div id="dsq-comment-header-122489" class="dsq-comment-header">
            <cite id="dsq-cite-122489">
                <span id="dsq-author-user-122489">Deepa</span>
            </cite>
        </div>
        <div id="dsq-comment-body-122489" class="dsq-comment-body">
            <div id="dsq-comment-message-122489" class="dsq-comment-message"><p>Hi, am new to annotations and need to some clarifications on one-to-many relationship which you explained in _http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example-annotation/. Consider stock_id and some set_id will be the primary key for &#8220;StockDailyRecord&#8221; table. In that case how the mappings will be?? </p>
<p>Kindly help me the same.</p>
<p>-Deepa</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="post pingback">
        <p>Pingback: <a href='http://jisku.com/blog/2012/09/parent-child-relationship-hibernate/' rel='external nofollow' class='url'>Parent child relationship hibernate | Jisku.com - Developers Network</a></p>
    </li>
    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-102582">
        <div id="dsq-comment-header-102582" class="dsq-comment-header">
            <cite id="dsq-cite-102582">
                <span id="dsq-author-user-102582">Joydeep</span>
            </cite>
        </div>
        <div id="dsq-comment-body-102582" class="dsq-comment-body">
            <div id="dsq-comment-message-102582" class="dsq-comment-message"><p>Hi,<br />
In my case of 1-M mapping, whenever i&#8217;m adding the association mapping between two pojo in hibernate config file,the following exception is coming..</p>
<p>&#8220;Unable to instantiate default tuplizer [org.hibernate.tuple.entity.PojoEntityTuplizer]&#8221;</p>
<p>problem goes after removing the mappings informations from config and hbm files.</p>
<p>1. javaassist.jar is already there.<br />
2. all the required setter/getter is present in POJO classes.</p>
<p>can anybody pls suggest me some way.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-89857">
        <div id="dsq-comment-header-89857" class="dsq-comment-header">
            <cite id="dsq-cite-89857">
                <span id="dsq-author-user-89857">john</span>
            </cite>
        </div>
        <div id="dsq-comment-body-89857" class="dsq-comment-body">
            <div id="dsq-comment-message-89857" class="dsq-comment-message"><p>hi Mkyong.<br />
In app.java file where is this</p>

<div class="wp_syntax"><div class="code"><pre class="language" style="font-family:monospace;">add()</pre></div></div>

<p> method declare.</p>

<div class="wp_syntax"><div class="code"><pre class="language" style="font-family:monospace;">stockDailyRecords.setStock(stock);        
        stock.getStockDailyRecords().add(stockDailyRecords);</pre></div></div>

<p>And i also want to ask can</p>

<div class="wp_syntax"><div class="code"><pre class="language" style="font-family:monospace;">session.save(stockDailyRecords);</pre></div></div>

<p> will run query for insertion of both stock and stockDailyRecords?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-84105">
        <div id="dsq-comment-header-84105" class="dsq-comment-header">
            <cite id="dsq-cite-84105">
                <span id="dsq-author-user-84105">Risav Karna</span>
            </cite>
        </div>
        <div id="dsq-comment-body-84105" class="dsq-comment-body">
            <div id="dsq-comment-message-84105" class="dsq-comment-message"><p>You don&#8217;t need setter methods for id fields as they are generated for you by Hibernate itself. Providing a set method to the client classes may cause conflicts with hibernate and client side programmers.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-83741">
        <div id="dsq-comment-header-83741" class="dsq-comment-header">
            <cite id="dsq-cite-83741">
http://mgb.janhohmann.com/                <span id="dsq-author-user-83741">page one rankings</span>
            </cite>
        </div>
        <div id="dsq-comment-body-83741" class="dsq-comment-body">
            <div id="dsq-comment-message-83741" class="dsq-comment-message"><p>I was curious if you ever considered changing the layout of your<br />
site? Its very well written; I love what youve got to say.<br />
But maybe you could a little more in the way of content so people<br />
could connect with it better. Youve got an awful<br />
lot of text for only having 1 or 2 pictures. Maybe you could space it out better?</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-82745">
        <div id="dsq-comment-header-82745" class="dsq-comment-header">
            <cite id="dsq-cite-82745">
                <span id="dsq-author-user-82745">shyamshyre</span>
            </cite>
        </div>
        <div id="dsq-comment-body-82745" class="dsq-comment-body">
            <div id="dsq-comment-message-82745" class="dsq-comment-message"><p>Hi Mkyong,</p>
<p>Thanks for your Example.</p>
<p>Can you update the Stock Record without StockDetails getting Effected ?.</p>
<p>When i am trying to update Stock, A Record from StockDetail is also getting Deleted.</p>
<p>Please can you help me on this.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-82211">
        <div id="dsq-comment-header-82211" class="dsq-comment-header">
            <cite id="dsq-cite-82211">
                <span id="dsq-author-user-82211">adam</span>
            </cite>
        </div>
        <div id="dsq-comment-body-82211" class="dsq-comment-body">
            <div id="dsq-comment-message-82211" class="dsq-comment-message"><p>I changed you&#8217;re code like this</p>
<p>        try {</p>
<p>	Stock stock = new Stock();<br />
        stock.setStockCode(&#8220;7054&#8243;);<br />
        stock.setStockName(&#8220;PADINI&#8221;);<br />
        session.save(stock);</p>
<p>        StockDailyRecord stockDailyRecords = new StockDailyRecord();<br />
        stockDailyRecords.setPriceOpen(new Float(&#8220;1.2&#8243;));<br />
        stockDailyRecords.setPriceClose(new Float(&#8220;1.1&#8243;));<br />
        stockDailyRecords.setPriceChange(new Float(&#8220;10.0&#8243;));<br />
        stockDailyRecords.setVolume(3000000L);<br />
        stockDailyRecords.setDate(new Date());</p>
<p>        stockDailyRecords.setStock(stock);<br />
        stock.getStockDailyRecords().add(stockDailyRecords);<br />
        stockDailyRecords = null;</p>
<p>        session.save(stockDailyRecords);<br />
        session.getTransaction().commit();<br />
       } catch (Exception e) {<br />
                    session.getTransaction().rollback();<br />
       }<br />
		System.out.println(&#8220;Done&#8221;);</p>
<p>      I would like to rollback stock relation update if anything goes wrong(see  stockDailyRecords = null) on stockDailyRecords updates.</p>
<p>But it doesn&#8217;t work i expected. do you have any idea about this issue?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-136433">
        <div id="dsq-comment-header-136433" class="dsq-comment-header">
            <cite id="dsq-cite-136433">
                <span id="dsq-author-user-136433">Dino</span>
            </cite>
        </div>
        <div id="dsq-comment-body-136433" class="dsq-comment-body">
            <div id="dsq-comment-message-136433" class="dsq-comment-message"><p>Try setAutoCommit(false), <a href="http://www.coderanch.com/t/572768/Spring/Rollback-working-Transactional" rel="nofollow">http://www.coderanch.com/t/572768/Spring/Rollback-working-Transactional</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-82199">
        <div id="dsq-comment-header-82199" class="dsq-comment-header">
            <cite id="dsq-cite-82199">
                <span id="dsq-author-user-82199">Mandar</span>
            </cite>
        </div>
        <div id="dsq-comment-body-82199" class="dsq-comment-body">
            <div id="dsq-comment-message-82199" class="dsq-comment-message"><p>Plz some one tell me How i use one to many mapping in hibernate for creation of three tables.<br />
1.discussion(discId,queId,ansId)<br />
2.question(queId,question,postdate)<br />
3.answer(ansId,answer,postDate)</p>
<p>Thanks in advance</p>
<p>Plz rply its argent</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="post pingback">
        <p>Pingback: <a href='http://jaehoo.wordpress.com/2012/03/25/hibernate-composite-keys-with-annotations/' rel='external nofollow' class='url'>Hibernate Composite Keys With Annotations &laquo; Jaehoo Weblog</a></p>
    </li>
    </li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-77111">
        <div id="dsq-comment-header-77111" class="dsq-comment-header">
            <cite id="dsq-cite-77111">
                <span id="dsq-author-user-77111">John</span>
            </cite>
        </div>
        <div id="dsq-comment-body-77111" class="dsq-comment-body">
            <div id="dsq-comment-message-77111" class="dsq-comment-message"><p>Why on the Earth NONE of your example are providing SELECT, CRITERIA and so ?<br />
You are constantly persisting bean, but this is the EASIEST to do.<br />
Anyway, it&#8217;s my project that is stressing me.<br />
Still it IS very hard to find something useful on the Internet when it comes about hibernate.<br />
For e.g a: T1 -&gt; JT1 -&gt; T2 -&gt; JT2 -&gt; T3 example (where T= Table, JT=Join Table)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-79151">
        <div id="dsq-comment-header-79151" class="dsq-comment-header">
            <cite id="dsq-cite-79151">
                <span id="dsq-author-user-79151">Adarsh</span>
            </cite>
        </div>
        <div id="dsq-comment-body-79151" class="dsq-comment-body">
            <div id="dsq-comment-message-79151" class="dsq-comment-message"><p>Hi John</p>
<p>I was looking exactly the same what you are asking. I tried several places. This guy has described nested select in <a href="http://www.mkyong.com/hibernate/hibernate-fetching-strategies-examples/" rel="nofollow">http://www.mkyong.com/hibernate/hibernate-fetching-strategies-examples/</a><br />
It was useful for m</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-76620">
        <div id="dsq-comment-header-76620" class="dsq-comment-header">
            <cite id="dsq-cite-76620">
                <span id="dsq-author-user-76620">elias</span>
            </cite>
        </div>
        <div id="dsq-comment-body-76620" class="dsq-comment-body">
            <div id="dsq-comment-message-76620" class="dsq-comment-message"><p>thank you for example,<br />
mm I have some difficulty to understand what is &#8220;mappedBy&#8221; means, but than Understand &#8211; that it&#8217;s StockDailyRecords fild name,<br />
 and I think that it would be great,<br />
if you say(notice) in tutorial the meaning of &#8220;mappedBy&#8221;:<br />
for quick dummies understanding this example =)</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-80682">
        <div id="dsq-comment-header-80682" class="dsq-comment-header">
            <cite id="dsq-cite-80682">
                <span id="dsq-author-user-80682">Vijay</span>
            </cite>
        </div>
        <div id="dsq-comment-body-80682" class="dsq-comment-body">
            <div id="dsq-comment-message-80682" class="dsq-comment-message"><p>This link may help you</p>
<p><a href="http://josian.wordpress.com/2006/09/09/hibernate-annotations-bidirectional-one-to-many/" rel="nofollow">http://josian.wordpress.com/2006/09/09/hibernate-annotations-bidirectional-one-to-many/</a></p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-72611">
        <div id="dsq-comment-header-72611" class="dsq-comment-header">
            <cite id="dsq-cite-72611">
                <span id="dsq-author-user-72611">dj</span>
            </cite>
        </div>
        <div id="dsq-comment-body-72611" class="dsq-comment-body">
            <div id="dsq-comment-message-72611" class="dsq-comment-message"><p>That is a great example.  One question, How would you do a query to find all the StockDailyRecord records where StockDailyRecord date is equal to a specific date?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-77112">
        <div id="dsq-comment-header-77112" class="dsq-comment-header">
            <cite id="dsq-cite-77112">
                <span id="dsq-author-user-77112">John</span>
            </cite>
        </div>
        <div id="dsq-comment-body-77112" class="dsq-comment-body">
            <div id="dsq-comment-message-77112" class="dsq-comment-message"><p>If it&#8217;s not published, he don&#8217;t know</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-68991">
        <div id="dsq-comment-header-68991" class="dsq-comment-header">
            <cite id="dsq-cite-68991">
                <span id="dsq-author-user-68991">Cristian Ortiz</span>
            </cite>
        </div>
        <div id="dsq-comment-body-68991" class="dsq-comment-body">
            <div id="dsq-comment-message-68991" class="dsq-comment-message"><p>this is not working neither.</p>

<div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"> <span style="color: #003399;">ArrayList</span> <span style="color: #003399;">Array</span> <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">ArrayList</span><span style="color: #009900;">&#41;</span>Query.<span style="color: #006633;">list</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div>

</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-68990">
        <div id="dsq-comment-header-68990" class="dsq-comment-header">
            <cite id="dsq-cite-68990">
                <span id="dsq-author-user-68990">Cristian Ortiz</span>
            </cite>
        </div>
        <div id="dsq-comment-body-68990" class="dsq-comment-body">
            <div id="dsq-comment-message-68990" class="dsq-comment-message"><p>Hi MKYONG. how is everything. i am trap. in a HQL. i hope you can help me out. i have One to many relationship. bwt Vendedores And Clientes.</p>
<p>Vendedores could have more that one Clientes.<br />
here is my POJOS.</p>

<div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Vendedores <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span>
<span style="color: #009900;">&#123;</span>
&nbsp;
    @OneToMany<span style="color: #009900;">&#40;</span>fetch<span style="color: #339933;">=</span>FetchType.<span style="color: #006633;">LAZY</span>,mappedBy<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;Vendedor&quot;</span><span style="color: #009900;">&#41;</span>
    <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Set</span> Cliente <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">HashSet</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><span style="color: #009900;">&#125;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Clientes <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span>
<span style="color: #009900;">&#123;</span>
    @Id
    @GeneratedValue<span style="color: #009900;">&#40;</span>strategy<span style="color: #339933;">=</span>GenerationType.<span style="color: #006633;">IDENTITY</span><span style="color: #009900;">&#41;</span>
    @Column<span style="color: #009900;">&#40;</span>name<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;id&quot;</span>,nullable<span style="color: #339933;">=</span><span style="color: #000066; font-weight: bold;">false</span>,updatable<span style="color: #339933;">=</span><span style="color: #000066; font-weight: bold;">true</span>,length<span style="color: #339933;">=</span><span style="color: #cc66cc;">15</span>,insertable<span style="color: #339933;">=</span><span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
    <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> Id<span style="color: #339933;">;</span>
    @Basic<span style="color: #009900;">&#40;</span>fetch <span style="color: #339933;">=</span> FetchType.<span style="color: #006633;">EAGER</span><span style="color: #009900;">&#41;</span>    @Column<span style="color: #009900;">&#40;</span>name<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;idsucursal&quot;</span>,nullable<span style="color: #339933;">=</span><span style="color: #000066; font-weight: bold;">false</span>,updatable<span style="color: #339933;">=</span><span style="color: #000066; font-weight: bold;">true</span>,length<span style="color: #339933;">=</span><span style="color: #cc66cc;">5</span>,insertable<span style="color: #339933;">=</span><span style="color: #000066; font-weight: bold;">false</span><span style="color: #009900;">&#41;</span>
    <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> IdSucursal<span style="color: #339933;">;</span></pre></div></div>

<p>all i want is with HQL. with Vendedores and Clientes meeting the condition Clientes.IdSucursal = 1;<br />
here what i got some far.<br />
StringBuilder Hql = new StringBuilder(&#8220;from Vendedores V join V.Cliente C where C.IdSucursal in (:tags)&#8221;);<br />
        Query Query = Session.createQuery(Hql.toString());<br />
        Query.setParameterList(&#8220;tags&#8221;,new Integer[]{1});<br />
        ArrayList Array = (ArrayList)Query.list();<br />
        System.out.println(Array.get(0) instanceof Vendedores);<br />
runs very well. but Array is not InstanceOf Vendedores. what i am doing wrong. can you help me. this is driving me nuts.<br />
thanks a lot.</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-68464">
        <div id="dsq-comment-header-68464" class="dsq-comment-header">
            <cite id="dsq-cite-68464">
                <span id="dsq-author-user-68464">Cristian Ortiz</span>
            </cite>
        </div>
        <div id="dsq-comment-body-68464" class="dsq-comment-body">
            <div id="dsq-comment-message-68464" class="dsq-comment-message"><p>thanks mkyong god bless you</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-68292">
        <div id="dsq-comment-header-68292" class="dsq-comment-header">
            <cite id="dsq-cite-68292">
                <span id="dsq-author-user-68292">Cristian Ortiz</span>
            </cite>
        </div>
        <div id="dsq-comment-body-68292" class="dsq-comment-body">
            <div id="dsq-comment-message-68292" class="dsq-comment-message"><p>hey Guys excelent tutorial. i am learning hibernate. i have  a question.</p>
<p>in this code. is possible to store more than one stockdaily something like this.</p>

<div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #003399;">Set</span> <span style="color: #003399;">Set</span> <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">HashSet</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #003399;">Set</span>.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>stockDailyRecords<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #003399;">Set</span>.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>stockDailyRecords2<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
stock.<span style="color: #006633;">setStockDailyRecords</span><span style="color: #009900;">&#40;</span><span style="color: #003399;">Set</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div>

<p>and when you make a save</p>

<div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div>

<p>store stock and the various stock daily without saves it one by one manually. help may be appreciate. thanks a lot.<br />
i am just a newbie. <a href="http://www.cloudflare.com/email-protection#16757e7f6673647964627f6c567e79627b777f7a3875797b"><span class="__cf_email__" data-cfemail="791a1110091c0b160b0d10033911160d14181015571a1614">[email&nbsp;protected]</span><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script></a></p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-68297">
        <div id="dsq-comment-header-68297" class="dsq-comment-header">
            <cite id="dsq-cite-68297">
http://www.mkyong.com                <span id="dsq-author-user-68297">mkyong</span>
            </cite>
        </div>
        <div id="dsq-comment-body-68297" class="dsq-comment-body">
            <div id="dsq-comment-message-68297" class="dsq-comment-message"><p>yes, just configure relationship property, and use <code>cascade=”save-update" </code>. See this <a href="http://www.mkyong.com/hibernate/hibernate-cascade-example-save-update-delete-and-delete-orphan/" rel="nofollow">hibernate cascade example </a>.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-68478">
        <div id="dsq-comment-header-68478" class="dsq-comment-header">
            <cite id="dsq-cite-68478">
                <span id="dsq-author-user-68478">Cristian Ortiz</span>
            </cite>
        </div>
        <div id="dsq-comment-body-68478" class="dsq-comment-body">
            <div id="dsq-comment-message-68478" class="dsq-comment-message"><p>hi mkyong.</p>
<p><a href="http://www.mkyong.com/hibernate/cascade-jpa-hibernate-annotation-common-mistake/" rel="nofollow">http://www.mkyong.com/hibernate/cascade-jpa-hibernate-annotation-common-mistake/</a></p>
<p>saves the day and it works very good.</p>
<p>i have a question. do you teach courses online.. thanks a lot</p>
</div>
        </div>

    <ul class="children">
    <li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-4" id="dsq-comment-68600">
        <div id="dsq-comment-header-68600" class="dsq-comment-header">
            <cite id="dsq-cite-68600">
http://www.mkyong.com                <span id="dsq-author-user-68600">mkyong</span>
            </cite>
        </div>
        <div id="dsq-comment-body-68600" class="dsq-comment-body">
            <div id="dsq-comment-message-68600" class="dsq-comment-message"><p>Just wonder, how do you expect it will look like? A recorded video tutorial? Or teaching via web cam, face by face? I have some initial idea of doing it, but your inputs are truly invaluable to me.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-5" id="dsq-comment-68635">
        <div id="dsq-comment-header-68635" class="dsq-comment-header">
            <cite id="dsq-cite-68635">
                <span id="dsq-author-user-68635">Cristian Ortiz</span>
            </cite>
        </div>
        <div id="dsq-comment-body-68635" class="dsq-comment-body">
            <div id="dsq-comment-message-68635" class="dsq-comment-message"><p>yep exactly. online videos a screencasting. pdf files some source code.forums. like this. and all that stuff. might be terrific..</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="post pingback">
        <p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example/' rel='external nofollow' class='url'>Hibernate &#8211; One-to-many relationship example (XML Mapping)</a></p>
    </li>
    </li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example-annotation/';
    var disqus_identifier = '8690 http://www.mkyong.com/?p=8690';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'mkyong';
    var disqus_title = "Hibernate – One-to-Many example (Annotation)";
        var disqus_config = function () {
        var config = this; // Access to the config object
        config.language = '';

        /*
           All currently supported events:
            * preData — fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            var script = document.createElement('script');
            script.async = true;
            script.src = '?cf_action=sync_comments&post_id=8690';

            var firstScript = document.getElementsByTagName( "script" )[0];
            firstScript.parentNode.insertBefore(script, firstScript);
        });
                    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
            {
                'author_name':    "Hibernate &#8211; One-to-many relationship example (XML Mapping)",
                'author_url':    "http:\/\/www.mkyong.com\/hibernate\/hibernate-one-to-many-relationship-example\/",
                'date':            "04\/26\/2011 03:31 PM",
                'excerpt':        "[...] Output &#8230; Hibernate one TO many &#040;XML Mapping&#041; Hibernate: INSERT INTO mkyongdb.stock &#040;STOCK_CODE, STOCK_NAME&#041; VALUES &#040;?, ?&#041; Hibernate: INSERT &hellip;",
                'type':            "pingback"            }
,            {
                'author_name':    "Hibernate Composite Keys With Annotations &laquo; Jaehoo Weblog",
                'author_url':    "http:\/\/jaehoo.wordpress.com\/2012\/03\/25\/hibernate-composite-keys-with-annotations\/",
                'date':            "03\/26\/2012 11:20 AM",
                'excerpt':        "[...] http:\/\/www.mkyong.com\/hibernate\/hibernate-one-to-many-relationship-example-annotation\/ [...] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Parent child relationship hibernate | Jisku.com - Developers Network",
                'author_url':    "http:\/\/jisku.com\/blog\/2012\/09\/parent-child-relationship-hibernate\/",
                'date':            "09\/19\/2012 08:06 PM",
                'excerpt':        "[...] http:\/\/www.mkyong.com\/hibernate\/hibernate-one-to-many-relationship-example-annotation\/ [...] ",
                'type':            "pingback"            }
        ],
        'trackback_url': "http:\/\/www.mkyong.com\/hibernate\/hibernate-one-to-many-relationship-example-annotation\/trackback\/"    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.' + 'disqus.com' + '/embed.js?pname=wordpress&pver=2.74';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>
	</div>					
								
							
			</div>
			<!-- /#post-container -->

			<!-- google_ad_section_end -->

		</div>
		<!--/span10 -->

		<div class="span4">
			<div id="sidebar">

<div class="sidebar-ads">

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 300x250, created 7/12/08 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-2836379775501347"
     data-ad-slot="7072877400" 
     data-ad-region="mkyongregion"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</div>

<div class="sidebar-ads">

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 300x250, created 8/5/08 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-2836379775501347"
     data-ad-slot="5738517670" 
     data-ad-region="mkyongregion"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</div>

<div class="sidebar-ads" id="sidebar-fb">
<div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe>
</div>

<div class="sidebar-ads">
<div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div>
</div>

<h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><!-- end of sidebar_box1 -->

<h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div>
<!-- end of sidebar_box2 -->

<div class="sidebar-ads">

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Sidebar-300x600-Large -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-2836379775501347"
     data-ad-slot="7953295395" 
     data-ad-region = "mkyongregion"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</div>

<div class="sidebar-ads" style="text-align: center">
<div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div>
</div>

</div>
<!-- end of sidebar -->		</div>
		<!--/.span4 -->
		
	</div>
	<!-- /.row -->


</div>
<!-- /container -->

<script type='text/javascript' src='http://www.mkyong.com/wp-content/plugins/contact-form-7/includes/js/jquery.form.js?ver=3.09'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var _wpcf7 = {"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.mkyong.com/wp-content/plugins/contact-form-7/includes/js/scripts.js?ver=3.2'></script>

<footer>

	<div id="footer-container">

		<div class="container">

			<div class="row">
				<div class="span4" id="footer-all-tut">

					<h3>All Available Tutorials</h3>
					<ul class="unstyled">
						<li>Java Core Technologies :
							<div>
								<a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a
									href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>,
								<a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a
									href="/tutorials/java-json-tutorials/">Java JSON</a>, <a
									href="/tutorials/jdbc-tutorials/">JDBC</a>, <a
									href="/category/java/">Java Misc</a>
							</div>
						</li>
						<li>J2EE Frameworks :
							<div>
							<a href="/tutorials/hibernate-tutorials/">Hibernate</a>, 
                                                        <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a
									href="/tutorials/spring-tutorials/">Spring Core</a>, <a
									href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a
									href="/tutorials/spring-security-tutorials/">Spring Security</a>,
<a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, 
<a href="/tutorials/spring-batch-tutorial/">Spring Batch</a>

								<a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a
									href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a
									href="/tutorials/struts-2-tutorials/">Struts 2.x</a>
							</div>
						</li>
						<li>Web Service :
							<div>
								<a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a
									href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a>
							</div>
						</li>
						<li>Build Tools :
							<div>
								<a href="/tutorials/maven-tutorials/">Maven</a>, <a
									href="/tutorials/apache-archiva-tutorials/">Archiva</a>
							</div>
						</li>
						<li>Unit Test Frameworks :
							<div>
								<a href="/tutorials/junit-tutorials/">jUnit</a>, <a
									href="/tutorials/testng-tutorials/">TestNG</a>
							</div>
						</li>
						<li>Others :
							<div>
								<a href="/tutorials/android-tutorial/">Android</a>, <a
									href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>,
								<a href="/tutorials/jquery-tutorials/">jQuery</a>, <a
									href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>,
<a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a>
							</div>
						</li>
					</ul>
				</div>
				<!-- /.span4 -->

				<div class="span3">

					<h3>Favorites Links</h3>
					<ul class="unstyled">
						<li><a href="http://developer.android.com/training/index.html" target="_blank"
							rel="nofollow">Android Getting Started</a>
						</li>
						<li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/"
							target="_blank" rel="nofollow">Google App Engine - Java</a>
						</li>
						<li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a>
						</li>
						<li><a
							href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html"
							target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a>
						</li>

						<li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html"
							target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a>
						</li>

                                                <li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/"
							target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a>
						</li>

						<li><a
							href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html"
							target="_blank" rel="nofollow">Spring 2.5.x documentation</a>
						</li>

						<li><a
							href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/"
							target="_blank" rel="nofollow">Spring 3.2.x documentation</a>
						</li>

                                                 <li><a 
                                                       href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" 
                                                       target="_blank">Spring Security 3.2.x documentation</a></li>
						<li><a
							href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/"
							target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a>
						</li>
						<li><a
							href="http://download.oracle.com/javase/6/docs/api/overview-summary.html"
							target="_blank" rel="nofollow">Java SE 6.0 API documentation</a>
						</li>
						
						<li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a>
						</li>
						<li><a href="http://javaserverfaces.java.net/" target="_blank"
							rel="nofollow">JSF home page</a>
						</li>
						<li><a href="http://www.eclipse.org/downloads/" target="_blank"
							rel="nofollow">Eclipse IDE for Java developer</a>
						</li>

						<li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html"
							target="_blank" rel="nofollow">Struts 1.3.x documentation</a>
						</li>
						<li><a href="http://struts.apache.org/release/2.3.x/docs/home.html"
							target="_blank" rel="nofollow">Struts 2.3.x documentation</a>
						</li>
						<li><a href="http://maven.apache.org/" target="_blank"
							rel="nofollow">Maven home page</a>
						</li>
						<li><a href="http://search.maven.org/" target="_blank"
							rel="nofollow">Maven central repository Search</a>
						</li>
						
						<li><a href="http://ant.apache.org/" target="_blank"
							rel="nofollow">Ant home page</a>
						</li>
						<li><a href="http://jax-ws.java.net/" target="_blank"
							rel="nofollow">JAX-WS Official Website</a>
						</li>
						<li><a href="http://jersey.java.net/" target="_blank"
							rel="nofollow">JAX-RS Official Website (Jersey)</a>
						</li>
						
					</ul>

				</div>
				<!-- /.span3 -->

				<div class="span3">
					<h3>Friends &amp; Links</h3>
					<ul class="unstyled">

<input type="hidden" name="activepost" id="activepost" value="8690" />
						<li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a>
						</li>
						<li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a>
						</li>
						<li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a>
						</li>
						<li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a>
						</li>

                                                <li><a href="http://www.fromdev.com" target="_blank">Web Development</a>
						</li>

<li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li>


					</ul>
				
				</div>
				<!-- /.span3 -->

				<div class="span4">

					<h3>About Us</h3>
					
					<p>
						Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.
					</p>	
					<p>
						All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.
					</p>
					
					<strong>We're Social</strong>
					<ol>
						<li>Twitter - <a href="http://twitter.com/#!/mkyong"
							target="_blank">Follow Me</a>
						</li>
						<li>Facebook - <a href="http://www.facebook.com/java.tutorial"
							target="_blank">Like Me</a>
						</li>
						<li>Google Plus - <a href="https://plus.google.com/110948163568945735692"
							target="_blank">Add Me</a>
						</li>
						<li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong"
							target="_blank">Subscribe Me</a>
						</li>
					</ol>
					
				</div>
				<!-- /.span4 -->
			</div>

		</div>
		<!-- /.container -->
	</div>
	<!-- /#footer-container -->

	<div id="footer-copyright">
		<div class="container">
Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.
                </div>
	</div>
	<!-- /#footer-copyright -->

</footer>
<!-- end of footer -->

<!-- Puts all JavaScript Here -->

<!-- start of google analytics - new tracking code -->

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-752408-5', 'mkyong.com');
  ga('send', 'pageview');

</script>

<!-- end of google analytics -->

<!-- Developer Media -->
<script type='text/javascript'>
    function _dmBootstrap(file) { 
        var _dma = document.createElement('script');  
        _dma.type = 'text/javascript'; 
        _dma.async = true;  
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file; 
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined')  _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000);})();
</script>
<!-- Developer Media -->


<script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>

<script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script>         

<script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l=document.getElementsByTagName("a"),t=document.createElement("textarea");for(i=0;l.length-i;i++){try{a=l[i].getAttribute("href");if(a&&"www.cloudflare.com/email-protection"==a.substr(7 ,35)){s='';j=43;r=parseInt(a.substr(j,2),16);for(j+=2;a.length-j&&a.substr(j,1)!='X';j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}j+=1;s+=a.substr(j,a.length-j);t.innerHTML=s.replace(/</g,"&lt;").replace(/>/g,"&gt;");l[i].setAttribute("href","mailto:"+t.value);}}catch(e){}}}catch(e){}})();
/* ]]> */
</script>
</body>
<!-- end of body -->
</html>
<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Minified using disk (User agent is rejected)
Page Caching using disk: enhanced (User agent is rejected)

 Served from: www.mkyong.com @ 2014-07-05 20:25:37 by W3 Total Cache -->