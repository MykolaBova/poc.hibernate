<!DOCTYPE html><html lang="en"><title>Hibernate – Many-to-Many example (XML Mapping)</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='How to prevent others steal your web image (hotlinking)' href='http://www.mkyong.com/web-development/how-to-prevent-others-steal-your-web-image-hotlinking/' /><link rel='next' title='How to know from where a Class was loaded in Java' href='http://www.mkyong.com/java/how-to-know-from-where-a-class-was-loaded-in-java/' /><link rel='shortlink' href='http://www.mkyong.com/?p=3269' /><meta name="keywords" content="hibernate,many-to-many" /><link rel="canonical" href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-3269"><header><h1> Hibernate – Many-to-Many example (XML Mapping)</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-02-07T08:50:52+00:00">February 7, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : April 28, 2011 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><blockquote><p>Many-to-many relationships occur when each record in an entity may have many linked records in another entity and vice-versa.</p></blockquote><p>In this tutorial, we show you how to work with many-to-many table relationship in Hibernate, via XML mapping file (hbm).</p><div class="note"> <strong>Note </strong><br /> For many to many with extra columns in join table, please refer to this <a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/">tutorial</a>.</div><p>Tools and technologies used in this tutorials :</p><ol><li>Hibernate 3.6.3.Final</li><li>MySQL 5.1.15</li><li>Maven 3.0.3</li><li>Eclipse 3.6</li></ol><h4>Project Structure</h4><p>Project structure of this tutorial.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2010/02/many-to-many-project-folder.png" alt="many to many project folder" title="many-to-many-project-folder" width="471" height="465" /></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>Project Dependency</h4><p>Get latest <strong>hibernate.jar</strong> from JBoss repository.</p><p><em>File : pom.xml </em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;project</span> ...<span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;repositories<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;repository<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>JBoss repository<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>http://repository.jboss.org/nexus/content/groups/public/<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/repository<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/repositories<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #808080; font-style: italic;">&lt;!-- MySQL database driver --&gt;</span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mysql<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mysql-connector-java<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>5.1.15<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>org.hibernate<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate-core<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.6.3.Final<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>javassist<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>javassist<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.12.1.GA<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/project<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>1. &#8220;Many-to-many&#8221; example</h4><p>This is a many-to-many relationship table design, a STOCK table has more than one CATEGORY, and CATEGORY can belong to more than one STOCK, the relationship is linked with a third table called STOCK_CATEGORY.</p><p>Table STOCK_CATEGORY only consist of two primary keys, and also foreign key reference back to STOCK and CATEGORY.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2010/02/many-to-many-diagram.png" alt="many to many ER diagram" title="many-to-many-diagram" width="640" height="193" /></div><p><em>MySQL table scripts</em></p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #ff0000;">`stock`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_CODE`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_NAME`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE<span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_NAME`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_NAME`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_ID`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_CODE`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE
<span style="color: #66cc66;">&#41;</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #ff0000;">`category`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`CATEGORY_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`NAME`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`DESC`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">255</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`CATEGORY_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE
<span style="color: #66cc66;">&#41;</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>  <span style="color: #ff0000;">`stock_category`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`CATEGORY_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">`CATEGORY_ID`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> <span style="color: #ff0000;">`FK_CATEGORY_ID`</span> <span style="color: #993333; font-weight: bold;">FOREIGN</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`CATEGORY_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">REFERENCES</span> <span style="color: #ff0000;">`category`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`CATEGORY_ID`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> <span style="color: #ff0000;">`FK_STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">FOREIGN</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">REFERENCES</span> <span style="color: #ff0000;">`stock`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#41;</span></pre></div></div><h4>2. Hibernate Model Class</h4><p>Create two model classes – <code>Stock.java</code> and <code>Category.java</code>, to represent the above tables. No need to create an extra class for table &#8216;<strong>stock_category</strong>&#8216;.</p><p><em>File : Stock.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.HashSet</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Set</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Set<span style="color: #339933;">&lt;</span>Category<span style="color: #339933;">&gt;</span> categories <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>Category<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//getter, setter and constructor</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>File : Category.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.HashSet</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Set</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Category <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> categoryId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> name<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> desc<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Set<span style="color: #339933;">&lt;</span>Stock<span style="color: #339933;">&gt;</span> stocks <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>Stock<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//getter, setter and constructor</span>
<span style="color: #009900;">&#125;</span></pre></div></div><h4>3. Hibernate XML Mapping</h4><p>Now, create two Hibernate mapping files (hbm) – <code>Stock.hbm.xml</code> and <code>Category.hbm.xml</code>. You will noticed the third &#8216;<strong>stock_category</strong>&#8216; table is reference via &#8220;<strong>many-to-many</strong>&#8221; tag.</p><p><em>File : Stock.hbm.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-mapping PUBLIC &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Stock&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock&quot;</span> <span style="color: #000066;">catalog</span>=<span style="color: #ff0000;">&quot;mkyongdb&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;identity&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockCode&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_CODE&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;10&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockName&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_NAME&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;20&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;set</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;categories&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock_category&quot;</span> </span>
<span style="color: #009900;">        	<span style="color: #000066;">inverse</span>=<span style="color: #ff0000;">&quot;false&quot;</span> <span style="color: #000066;">lazy</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">fetch</span>=<span style="color: #ff0000;">&quot;select&quot;</span> <span style="color: #000066;">cascade</span>=<span style="color: #ff0000;">&quot;all&quot;</span> <span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;key<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/key<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;many-to-many</span> <span style="color: #000066;">entity-name</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Category&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;CATEGORY_ID&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/many-to-many<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/set<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p><em>File : Category.hbm.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-mapping PUBLIC &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Category&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;category&quot;</span> <span style="color: #000066;">catalog</span>=<span style="color: #ff0000;">&quot;mkyongdb&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;categoryId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;CATEGORY_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;identity&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;NAME&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;10&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;desc&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;[DESC]&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;set</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stocks&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock_category&quot;</span> <span style="color: #000066;">inverse</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">lazy</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">fetch</span>=<span style="color: #ff0000;">&quot;select&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;key<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;CATEGORY_ID&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/key<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;many-to-many</span> <span style="color: #000066;">entity-name</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Stock&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/many-to-many<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/set<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>4. Hibernate Configuration File</h4><p>Now, puts <code>Stock.hbm.xml</code> and <code>Category.hbm.xml</code> and MySQL detail in <code>hibernate.cfg.xml</code>.</p><p><em>File : hibernate.cfg.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span> <span style="color: #000066;">encoding</span>=<span style="color: #ff0000;">&quot;utf-8&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-configuration PUBLIC</span>
<span style="color: #00bbdd;">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-configuration<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;session-factory<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.driver_class&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>com.mysql.jdbc.Driver<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.url&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>jdbc:mysql://localhost:3306/mkyongdb<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.username&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>root<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.password&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>password<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.dialect&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>org.hibernate.dialect.MySQLDialect<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;show_sql&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>true<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;format_sql&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>true<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping</span> <span style="color: #000066;">resource</span>=<span style="color: #ff0000;">&quot;com/mkyong/stock/Stock.hbm.xml&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping</span> <span style="color: #000066;">resource</span>=<span style="color: #ff0000;">&quot;com/mkyong/stock/Category.hbm.xml&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/session-factory<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-configuration<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>5. Run It</h4><p>Run it, Hibernate will insert a record into the STOCK table, two records into the CATEGORY table, and also two records into the STOCK)CATEGORY table.</p><p><em>File : App.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.HashSet</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Set</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.Session</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.Category</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.Stock</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.util.HibernateUtil</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Hibernate many to many (XML Mapping)&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	Session session <span style="color: #339933;">=</span> HibernateUtil.<span style="color: #006633;">getSessionFactory</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">openSession</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	Stock stock <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stock.<span style="color: #006633;">setStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;7052&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stock.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;PADINI&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        Category category1 <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Category<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;CONSUMER&quot;</span>, <span style="color: #0000ff;">&quot;CONSUMER COMPANY&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        Category category2 <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Category<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;INVESTMENT&quot;</span>, <span style="color: #0000ff;">&quot;INVESTMENT COMPANY&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        Set<span style="color: #339933;">&lt;</span>Category<span style="color: #339933;">&gt;</span> categories <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>Category<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        categories.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>category1<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        categories.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>category2<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        stock.<span style="color: #006633;">setCategories</span><span style="color: #009900;">&#40;</span>categories<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	session.<span style="color: #006633;">getTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Done&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>Output &#8230;result should be self-explanatory</em></p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;">Hibernate many <span style="color: #993333; font-weight: bold;">TO</span> many <span style="color: #66cc66;">&#40;</span>XML Mapping<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock
        <span style="color: #66cc66;">&#40;</span>STOCK_CODE<span style="color: #66cc66;">,</span> STOCK_NAME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>category
        <span style="color: #66cc66;">&#40;</span>NAME<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">`DESC`</span><span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>category
        <span style="color: #66cc66;">&#40;</span>NAME<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">`DESC`</span><span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        stock_category
        <span style="color: #66cc66;">&#40;</span>STOCK_ID<span style="color: #66cc66;">,</span> CATEGORY_ID<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        stock_category
        <span style="color: #66cc66;">&#40;</span>STOCK_ID<span style="color: #66cc66;">,</span> CATEGORY_ID<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Done</pre></div></div><div class="note"> <strong>Hibernate Annotation</strong><br /> For many-to-many in Hibernate annotation, please refer to this <a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/">example</a>.</div><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/02/Hibernate-many-to-many-xml-mapping.zip'>Hibernate-many-to-many-xml-mapping.zip</a> (10KB)</div><h4>Reference</h4><ol><li><a href="http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html/associations.html#assoc-unidirectional-join-m2m" target="_blank">Hibernate Documentation &#8211; many to many relationship.</a></li></ol><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a> <a href="http://www.mkyong.com/tag/many-to-many/" rel="tag">many-to-many</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/" title="Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) ">Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) </a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/" title="Hibernate – Many-to-Many example (Annotation)">Hibernate – Many-to-Many example (Annotation)</a></li><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/" title="Spring Security + Hibernate XML Example">Spring Security + Hibernate XML Example</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-org-hibernate-service-jta-platform-spi-jtaplatform/" title="java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform">java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-component-mapping-example/" title="Hibernate component mapping example">Hibernate component mapping example</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/spring-mvc-tutorials/' title='Spring MVC Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/java-io/' title='Java I/O Tutorials'><div class='images img-border img-io'></div></a></li><li><a href='/tutorials/jsf-2-0-tutorials/' title='JSF 2 Tutorials'><div class='images img-border img-jsf2'></div></a></li><li><a href='/tutorials/struts-2-tutorials/' title='Struts 2.x Tutorials'><div class='images img-border img-struts2'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-133077"><div id="dsq-comment-header-133077" class="dsq-comment-header"> <cite id="dsq-cite-133077"> <span id="dsq-author-user-133077">gaurav shirbhate</span> </cite></div><div id="dsq-comment-body-133077" class="dsq-comment-body"><div id="dsq-comment-message-133077" class="dsq-comment-message"><p>I have to inject Repository class in Converter class which implements converter interface for accessing all the data from database, but i am not getting how to inject repository class in converter class</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-133076"><div id="dsq-comment-header-133076" class="dsq-comment-header"> <cite id="dsq-cite-133076"> <span id="dsq-author-user-133076">gaurav shirbhate</span> </cite></div><div id="dsq-comment-body-133076" class="dsq-comment-body"><div id="dsq-comment-message-133076" class="dsq-comment-message"><p>please tell me how to inject repository class in converter class</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-130450"><div id="dsq-comment-header-130450" class="dsq-comment-header"> <cite id="dsq-cite-130450"> http://<a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="3b56524f58537b56524f58535e57575658585455555e575715555e4f">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script> <span id="dsq-author-user-130450">Mitch</span> </cite></div><div id="dsq-comment-body-130450" class="dsq-comment-body"><div id="dsq-comment-message-130450" class="dsq-comment-message"><p>As always, these examples are very helpful.  Thanks!</p><p>Mitch</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-125380"><div id="dsq-comment-header-125380" class="dsq-comment-header"> <cite id="dsq-cite-125380"> <span id="dsq-author-user-125380">Ing</span> </cite></div><div id="dsq-comment-body-125380" class="dsq-comment-body"><div id="dsq-comment-message-125380" class="dsq-comment-message"><p>In this case, Stock is the owner of the relationship. What are the changes to be made to make Category as owner?</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-123548"><div id="dsq-comment-header-123548" class="dsq-comment-header"> <cite id="dsq-cite-123548"> <span id="dsq-author-user-123548">Keith</span> </cite></div><div id="dsq-comment-body-123548" class="dsq-comment-body"><div id="dsq-comment-message-123548" class="dsq-comment-message"><p>I know this is old, but just to say; I don&#8217;t know what this sunil is on about.</p><p>I have just found this example, used it to replace my (incorrect) implementation os a many-to-many relationship and it&#8217;s worked first time!!!!</p><p>Another quality and easy to understand example from MkYong!</p><p>IMO, the best site for coding examples, on the Net!</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-83427"><div id="dsq-comment-header-83427" class="dsq-comment-header"> <cite id="dsq-cite-83427"> <span id="dsq-author-user-83427">Sathish</span> </cite></div><div id="dsq-comment-body-83427" class="dsq-comment-body"><div id="dsq-comment-message-83427" class="dsq-comment-message"><p>Dear Sir,</p><p> Sir,while i&#8217;m using cascade=&#8221;save&#8221; to perform insertion operations in relationships,i&#8217;m getting an exception like &#8220;Unsupported cascading style:save&#8221;&#8230;.what the problem would be???????? please help me out this&#8230;.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-82264"><div id="dsq-comment-header-82264" class="dsq-comment-header"> <cite id="dsq-cite-82264"> <span id="dsq-author-user-82264">tunnaruto</span> </cite></div><div id="dsq-comment-body-82264" class="dsq-comment-body"><div id="dsq-comment-message-82264" class="dsq-comment-message"><p>after following rhis tutorial, when i run an HQL query &#8220;from Stock&#8221; i got the following exception:<br /> org.hibernate.MappingException: An association from the table stock_category refers to an unmapped class: pojosMkyong.Category<br /> at org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1252)<br /> at org.hibernate.cfg.Configuration.secondPassCompile(Configuration.java:1170)<br /> at org.hibernate.cfg.AnnotationConfiguration.secondPassCompile(AnnotationConfiguration.java:324)<br /> at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1286)<br /> at org.hibernate.cfg.AnnotationConfiguration.buildSessionFactory(AnnotationConfiguration.java:859)</p><p>why?</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-82102"><div id="dsq-comment-header-82102" class="dsq-comment-header"> <cite id="dsq-cite-82102"> <span id="dsq-author-user-82102">michael</span> </cite></div><div id="dsq-comment-body-82102" class="dsq-comment-body"><div id="dsq-comment-message-82102" class="dsq-comment-message"><p>I follow this tutorial from start to end but the database populates the stock and stock category table and not three tables. Why like this?</p><p>Thanks</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-84153"><div id="dsq-comment-header-84153" class="dsq-comment-header"> <cite id="dsq-cite-84153"> <span id="dsq-author-user-84153">Feri</span> </cite></div><div id="dsq-comment-body-84153" class="dsq-comment-body"><div id="dsq-comment-message-84153" class="dsq-comment-message"><p>Dear Michael,<br /> The solution to your problem could be the following: Just try to set the following property (inverse) from this line to false in both hbm files:</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #ddbb00;">&amp;lt;</span>set name=<span style="color: #ddbb00;">&amp;quot;</span>stocks<span style="color: #ddbb00;">&amp;quot;</span> table=<span style="color: #ddbb00;">&amp;quot;</span>stock_category<span style="color: #ddbb00;">&amp;quot;</span> inverse=<span style="color: #ddbb00;">&amp;quot;</span>true<span style="color: #ddbb00;">&amp;quot;</span> lazy=<span style="color: #ddbb00;">&amp;quot;</span>true<span style="color: #ddbb00;">&amp;quot;</span> fetch=<span style="color: #ddbb00;">&amp;quot;</span>select<span style="color: #ddbb00;">&amp;quot;&amp;gt;</span></pre></div></div><p>This will ensure that the insertion will work properly in all 3 tables</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-79556"><div id="dsq-comment-header-79556" class="dsq-comment-header"> <cite id="dsq-cite-79556"> <span id="dsq-author-user-79556">aminos</span> </cite></div><div id="dsq-comment-body-79556" class="dsq-comment-body"><div id="dsq-comment-message-79556" class="dsq-comment-message"><p>Hey thanks for the tutorial can u make the same example but with extra columns the stock_category table ,i need it with xml not annotation please help me</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-78675"><div id="dsq-comment-header-78675" class="dsq-comment-header"> <cite id="dsq-cite-78675"> <span id="dsq-author-user-78675">Pramod</span> </cite></div><div id="dsq-comment-body-78675" class="dsq-comment-body"><div id="dsq-comment-message-78675" class="dsq-comment-message"><p>how to  i use struts with hibernate for the above example where i need to have more than 1 actionform bean. So that the data can b collected for different table and inserted on the go.</p><p>Example: I have a employeedtls table ,addrstable,logindtls table where employee is the master table whenever a new employee joins the house his details need to be inserted in to 3 tables first in logindtls and get primary key then from addrsdtls and get the primary key at last we need to insert the collected primary keys into employeedtls as a foreign key and that i need to do using struts action in a single web page.</p><p>Thank you<br /> please reply</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-78103"><div id="dsq-comment-header-78103" class="dsq-comment-header"> <cite id="dsq-cite-78103"> http://www.etravelvn.com <span id="dsq-author-user-78103">Quang</span> </cite></div><div id="dsq-comment-body-78103" class="dsq-comment-body"><div id="dsq-comment-message-78103" class="dsq-comment-message"><p>Thanks for sharing useful article. I don&#8217;t need one-to-many and many-to-one anymore.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-78126"><div id="dsq-comment-header-78126" class="dsq-comment-header"> <cite id="dsq-cite-78126"> http://www.mkyong.com <span id="dsq-author-user-78126">mkyong</span> </cite></div><div id="dsq-comment-body-78126" class="dsq-comment-body"><div id="dsq-comment-message-78126" class="dsq-comment-message"><p>don&#8217;t need? why said so?</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-75770"><div id="dsq-comment-header-75770" class="dsq-comment-header"> <cite id="dsq-cite-75770"> <span id="dsq-author-user-75770">Harsha S</span> </cite></div><div id="dsq-comment-body-75770" class="dsq-comment-body"><div id="dsq-comment-message-75770" class="dsq-comment-message"><p>hey hi all harsha here<br /> i do hv small problem with hibernate, its related to the topic under discussion.<br /> could u please tell me</p><p>in Stocks , category , Stock_Category tables<br /> for me category remains constant, i don&#8217;t wanna change it (means i do have constant category table)<br /> so if i create new stocks and add existing categories to it what to do</p><p>if i try the above its quite works but Category table is unnecessarily getting updated even tho new category is not getting inserted&#8230;&#8230;<br /> i don&#8217;t wan any changes to be made on category table.<br /> help me with this</p><p>means i need little bit of help in hibernate mapping file</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-75861"><div id="dsq-comment-header-75861" class="dsq-comment-header"> <cite id="dsq-cite-75861"> http://www.mkyong.com <span id="dsq-author-user-75861">mkyong</span> </cite></div><div id="dsq-comment-body-75861" class="dsq-comment-body"><div id="dsq-comment-message-75861" class="dsq-comment-message"><p>The faster way is use Hibernate tools to generate your mapping file automatically. Refer to following two articles.</p><p><a href="http://www.mkyong.com/hibernate/how-to-install-hibernate-tools-in-eclipse-ide/" rel="nofollow">http://www.mkyong.com/hibernate/how-to-install-hibernate-tools-in-eclipse-ide/</a><br /> <a href="http://www.mkyong.com/hibernate/how-to-generate-code-with-hibernate-tools/" rel="nofollow">http://www.mkyong.com/hibernate/how-to-generate-code-with-hibernate-tools/</a></p></div></div></li><li class="comment odd alt depth-2" id="dsq-comment-82111"><div id="dsq-comment-header-82111" class="dsq-comment-header"> <cite id="dsq-cite-82111"> <span id="dsq-author-user-82111">Suhas Gunda</span> </cite></div><div id="dsq-comment-body-82111" class="dsq-comment-body"><div id="dsq-comment-message-82111" class="dsq-comment-message"><p>Hi Harsha,</p><p>did you find answer of above question?? I am facing same problem.. If you have answer then please let me know on <a href="http://www.cloudflare.com/email-protection#93e0e6fbf2e0ccfdf4fdfad3e1f6f7faf5f5fef2faffbdf0fcfe"><span class="__cf_email__" data-cfemail="e497918c8597bb8a838a8da49681808d828289858d88ca878b89">[email&nbsp;protected]</span><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script></a></p></div></div></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-75433"><div id="dsq-comment-header-75433" class="dsq-comment-header"> <cite id="dsq-cite-75433"> <span id="dsq-author-user-75433">Arun</span> </cite></div><div id="dsq-comment-body-75433" class="dsq-comment-body"><div id="dsq-comment-message-75433" class="dsq-comment-message"><p>Can you please explain the mapping  what it means , like</p><p>what does this means , what is  what it refers to ,</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example-annotation/' rel='external nofollow' class='url'>Hibernate – Many-to-many relationship example (Annotation)</a></p></li></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-49856"><div id="dsq-comment-header-49856" class="dsq-comment-header"> <cite id="dsq-cite-49856"> <span id="dsq-author-user-49856">nnad</span> </cite></div><div id="dsq-comment-body-49856" class="dsq-comment-body"><div id="dsq-comment-message-49856" class="dsq-comment-message"><p>the project download is missing a lot of dependent jar files.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-49895"><div id="dsq-comment-header-49895" class="dsq-comment-header"> <cite id="dsq-cite-49895"> http://www.mkyong.com <span id="dsq-author-user-49895">mkyong</span> </cite></div><div id="dsq-comment-body-49895" class="dsq-comment-body"><div id="dsq-comment-message-49895" class="dsq-comment-message"><p>Maven-based project, use maven to download it.</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-48803"><div id="dsq-comment-header-48803" class="dsq-comment-header"> <cite id="dsq-cite-48803"> <span id="dsq-author-user-48803">Arby</span> </cite></div><div id="dsq-comment-body-48803" class="dsq-comment-body"><div id="dsq-comment-message-48803" class="dsq-comment-message"><p>MYkong, I love your website. But in this example I&#8217;m thinking you simply did something just for the sake of providing an example.</p><p>IT does not seem practical to have Category store Set where each StockCategory has the (parent) Category repeating in it. Not withstanding the fact that M-M relationship can be broken into 1-M and M-1 relationship, even practically that would seem to be the intent. Stock needs to know all its Categories and Category needs to know all Stocks in it.</p><p>Finally, and this may be Hibernate thingy, I refuse to accept understand the logic behind making a Class to represent a &#8220;Link Table&#8221; for the M-M relationship. My domain classes are Stock and Category. They mirror analysis of my Business and correspond to STOCK and CATEGORY Entities aka &#8220;Tables in RDBMS&#8221;. The &#8220;link table&#8221; is NOT a Business Entity and having a class to represent it just plain bad design.</p><p>Just my two cents.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-48812"><div id="dsq-comment-header-48812" class="dsq-comment-header"> <cite id="dsq-cite-48812"> http://www.mkyong.com <span id="dsq-author-user-48812">mkyong</span> </cite></div><div id="dsq-comment-body-48812" class="dsq-comment-body"><div id="dsq-comment-message-48812" class="dsq-comment-message"><p>This example is not something for the sake of providing example. The link table is a common RDBMS table design pattern for M-M relationship.</p><p>For hibernate, there are many ways to implement M-M table design, and the link table class is just one of the way, i will provide more ways in coming future.</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-48848"><div id="dsq-comment-header-48848" class="dsq-comment-header"> <cite id="dsq-cite-48848"> <span id="dsq-author-user-48848">Arby</span> </cite></div><div id="dsq-comment-body-48848" class="dsq-comment-body"><div id="dsq-comment-message-48848" class="dsq-comment-message"><p>I understand this might be Hibernate specific way. But that&#8217;s precisely my problem. You make a tongue in cheek remark in your essay on how you convinced your management to use Hibernate. You cite there is lot of demand for Hibernate as one of the reasons :-)</p><p>My problem is my Domain and Architectural decisions should not be held hostage to tool I&#8217;m using for data persistence. Creating a domain class for representing a link table IMHO is not good design because the Link Class has no parallel representation in my Business Domain. The Link Class is simply adulterating my Java Domain.</p><p>I will look forward to your example of an alternative which does not make it necessary to create a Link Class.</p></div></div></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-46472"><div id="dsq-comment-header-46472" class="dsq-comment-header"> <cite id="dsq-cite-46472"> <span id="dsq-author-user-46472">Rakesh</span> </cite></div><div id="dsq-comment-body-46472" class="dsq-comment-body"><div id="dsq-comment-message-46472" class="dsq-comment-message"><p>Dear All ,</p><p>I have just gone through one site, and found the explantion with simple example of Many to Many relation in hibernate using JPA .</p><p><a href="http://j2eereference.com/2011/01/many-to-many-mapping-in-hibernate/" rel="nofollow">http://j2eereference.com/2011/01/many-to-many-mapping-in-hibernate/</a></p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-43630"><div id="dsq-comment-header-43630" class="dsq-comment-header"> <cite id="dsq-cite-43630"> http://www.sqlsteps.com <span id="dsq-author-user-43630">SQL tutorial</span> </cite></div><div id="dsq-comment-body-43630" class="dsq-comment-body"><div id="dsq-comment-message-43630" class="dsq-comment-message"><p>I am taking up the subject java programming SE. I will try this and maybe if I don&#8217;t understand some of the codes, I can ask my professor about it.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-40456"><div id="dsq-comment-header-40456" class="dsq-comment-header"> <cite id="dsq-cite-40456"> <span id="dsq-author-user-40456">carldeltoro</span> </cite></div><div id="dsq-comment-body-40456" class="dsq-comment-body"><div id="dsq-comment-message-40456" class="dsq-comment-message"><p>if I have an attribute in the table StockCategory date???</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-17276"><div id="dsq-comment-header-17276" class="dsq-comment-header"> <cite id="dsq-cite-17276"> <span id="dsq-author-user-17276">Hassan</span> </cite></div><div id="dsq-comment-body-17276" class="dsq-comment-body"><div id="dsq-comment-message-17276" class="dsq-comment-message"><p>Actually M-M relationship can be decomposed in to two 1-M relationships, but I do not need this extra effort unless I&#8217;ve extra columns in the mapper table that I really need(e.g. date of stock_category).</p><p>In M-M , read operations work fine, but save/delete/update is not quite easy!</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-13196"><div id="dsq-comment-header-13196" class="dsq-comment-header"> <cite id="dsq-cite-13196"> <span id="dsq-author-user-13196">Turion</span> </cite></div><div id="dsq-comment-body-13196" class="dsq-comment-body"><div id="dsq-comment-message-13196" class="dsq-comment-message"><p>Normally, a many to many relationship is realized by using the @ManyToMany annotation. So let&#8217;s say you have users and roles and each user can have a number of roles, while a certain role can belong to a number of users. Then you would use something like this:</p><p>Class User {<br /> &#8230;<br /> @ManyToMany(targetEntity = Role.class)<br /> @JoinTable(name = &#8220;user_has_role&#8221;,<br /> joinColumns = @JoinColumn(name = &#8220;userId&#8221;),<br /> inverseJoinColumns = @JoinColumn(name = &#8220;roleId&#8221;)<br /> )<br /> public Set getRoles() {<br /> return roles;<br /> }<br /> &#8230;<br /> }</p><p>Of course you need a third table to map this kind of relationship, but I dont&#8217;t understand why you are using the @ManyToOne annotation.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-13221"><div id="dsq-comment-header-13221" class="dsq-comment-header"> <cite id="dsq-cite-13221"> http://www.mkyong.com <span id="dsq-author-user-13221">mkyong</span> </cite></div><div id="dsq-comment-body-13221" class="dsq-comment-body"><div id="dsq-comment-message-13221" class="dsq-comment-message"><p>As i know, there are many ways to implement the many to many relationship, all lead to Rome.</p><p>Btw, thanks for sharing your thought.</p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/hibernate-tutorials/' rel='external nofollow' class='url'>Hibernate Tutorials | J2EE Web Development Tutorials</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-11097"><div id="dsq-comment-header-11097" class="dsq-comment-header"> <cite id="dsq-cite-11097"> <span id="dsq-author-user-11097">Gaurav</span> </cite></div><div id="dsq-comment-body-11097" class="dsq-comment-body"><div id="dsq-comment-message-11097" class="dsq-comment-message"><p>Thanks for this tutorial,<br /> I am wondering, if it possible, if in this case  STOCK_CATEGORY table will be having composite primary key with<br /> CATEGORY_ID and STOCK_ID i.e. no other PK in this case.<br /> Then How will we define many to many relationship.<br /> I am struggling to resolve this scenario.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-9270"><div id="dsq-comment-header-9270" class="dsq-comment-header"> <cite id="dsq-cite-9270"> http://www.sm-ms.co.uk <span id="dsq-author-user-9270">gary</span> </cite></div><div id="dsq-comment-body-9270" class="dsq-comment-body"><div id="dsq-comment-message-9270" class="dsq-comment-message"><p>hi,</p><p>Found the tutorial quite useful. Thanks</p><p>please can you also post hibernate many-many CRUD application? For example, Instead of adding a new category, I want to reference existing category in my Stock class, all I need to do is to insert Stock table and into the mapping table.</p><p>can you help pls?</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-9080"><div id="dsq-comment-header-9080" class="dsq-comment-header"> <cite id="dsq-cite-9080"> <span id="dsq-author-user-9080">sunil</span> </cite></div><div id="dsq-comment-body-9080" class="dsq-comment-body"><div id="dsq-comment-message-9080" class="dsq-comment-message"><p>You are completely wrong regarding mapping of many-to-many. I dont see anything like many-to-many. You are just trying to give alternate way but not exact code or tutorial. Please verify it since it is misleading the developer&#8230;.<br /> Thanks<br /> sunil</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-9086"><div id="dsq-comment-header-9086" class="dsq-comment-header"> <cite id="dsq-cite-9086"> http://www.mkyong.com <span id="dsq-author-user-9086">mkyong</span> </cite></div><div id="dsq-comment-body-9086" class="dsq-comment-body"><div id="dsq-comment-message-9086" class="dsq-comment-message"><p>oh.. you can download the full sample at the end of the article, both in xml mapping and annotation ways.</p><p>Would you mind to tell me which &#8220;way&#8221; or &#8220;word&#8221; i misleading the developer? and what wrong with this tutorial? In database, many to many is always involve third table for the relationship. Look forward your idea and comment.</p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-46497"><div id="dsq-comment-header-46497" class="dsq-comment-header"> <cite id="dsq-cite-46497"> <span id="dsq-author-user-46497">Rakesh</span> </cite></div><div id="dsq-comment-body-46497" class="dsq-comment-body"><div id="dsq-comment-message-46497" class="dsq-comment-message"><p>Dear mkyong,</p><p>You are absolutly right .We need a third table to connect the two tables which we need to establish the relation. This is the way to implement the Many to Many relation using hibernate and JPA.</p><p>Actually speaking, third table doesnt need a primary key and we dont need to create a clas for the table stockCategory and ManyTone is not really required.</p><p>please go throught this article .</p><p><a href="http://j2eereference.com/2011/01/many-to-many-mapping-in-hibernate/" rel="nofollow">http://j2eereference.com/2011/01/many-to-many-mapping-in-hibernate/</a></p><p>Regards,<br /> Rakesh.B.K</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-4" id="dsq-comment-46510"><div id="dsq-comment-header-46510" class="dsq-comment-header"> <cite id="dsq-cite-46510"> http://www.mkyong.com <span id="dsq-author-user-46510">mkyong</span> </cite></div><div id="dsq-comment-body-46510" class="dsq-comment-body"><div id="dsq-comment-message-46510" class="dsq-comment-message"><p>Hi Rakesh, thanks for your inputs.</p><p>For large table , primary key is a must :) , class for &#8220;stockCategory&#8221; is just another way to achieve the same thing.</p></div></div><ul class="children"><li class="comment even depth-5" id="dsq-comment-46614"><div id="dsq-comment-header-46614" class="dsq-comment-header"> <cite id="dsq-cite-46614"> <span id="dsq-author-user-46614">Rakesh</span> </cite></div><div id="dsq-comment-body-46614" class="dsq-comment-body"><div id="dsq-comment-message-46614" class="dsq-comment-message"><p>Hi mkyong, I was just commented on the example you gave.  Anyways nice good article.</p></div></div></li></ul></li></ul></li></ul></li></ul></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/hibernate/hibernate-many-to-many-relationship-example/';var disqus_identifier='3269 http://www.mkyong.com/?p=3269';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Hibernate – Many-to-Many example (XML Mapping)";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=3269';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Hibernate Tutorials | J2EE Web Development Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/hibernate-tutorials\/",'date':"05\/26\/2010 02:22 PM",'excerpt':"[...] Many-to-many relationship example A many-to-many relationship project demonstration. [...] ",'type':"pingback"},{'author_name':"Hibernate – Many-to-many relationship example (Annotation)",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-many-to-many-relationship-example-annotation\/",'date':"04\/27\/2011 03:15 PM",'excerpt':"[...] Author: mkyong     In this tutorial, it will reuse the entire infrastructure of the previous &#8220;Hibernate &hellip;",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-many-to-many-relationship-example\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="3269" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l=document.getElementsByTagName("a"),t=document.createElement("textarea");for(i=0;l.length-i;i++){try{a=l[i].getAttribute("href");if(a&&"www.cloudflare.com/email-protection"==a.substr(7 ,35)){s='';j=43;r=parseInt(a.substr(j,2),16);for(j+=2;a.length-j&&a.substr(j,1)!='X';j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}j+=1;s+=a.substr(j,a.length-j);t.innerHTML=s.replace(/</g,"&lt;").replace(/>/g,"&gt;");l[i].setAttribute("href","mailto:"+t.value);}}catch(e){}}}catch(e){}})();
/* ]]> */
</script>
</body></html>