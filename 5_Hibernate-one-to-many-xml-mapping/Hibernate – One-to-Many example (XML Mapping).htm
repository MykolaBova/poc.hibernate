<!DOCTYPE html><html lang="en"><title>Hibernate &#8211; One-to-Many example (XML Mapping)</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='inverse = &#8220;true&#8221; example and explanation' href='http://www.mkyong.com/hibernate/inverse-true-example-and-explanation/' /><link rel='next' title='Hibernate &#8211; Cascade example (save, update, delete and delete-orphan)' href='http://www.mkyong.com/hibernate/hibernate-cascade-example-save-update-delete-and-delete-orphan/' /><link rel='shortlink' href='http://www.mkyong.com/?p=3158' /><meta name="keywords" content="hibernate,one-to-many" /><link rel="canonical" href="http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-3158"><header><h1> Hibernate &#8211; One-to-Many example (XML Mapping)</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-02-01T06:09:02+00:00">February 1, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : April 28, 2011 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><blockquote><p>A one-to-many relationship occurs when one entity is related to many occurrences in another entity.</p></blockquote><p>In this tutorial, we show you how to works with one-to-many table relationship in Hibernate, via XML mapping file (hbm).</p><p>Tools and technologies used in this tutorials :</p><ol><li>Hibernate 3.6.3.Final</li><li>MySQL 5.1.15</li><li>Maven 3.0.3</li><li>Eclipse 3.6</li></ol><h4>Project Structure</h4><p>Project structure of this tutorial.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2010/02/one-to-many-relationship-folder.png" alt="one to many folder" title="one-to-many-relationship-folder" width="490" height="483" /></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>Project Dependency</h4><p>Get <strong>hibernate.jar</strong> from JBoss repository, Maven will take care all the related dependencies for you</p><p><em>File : pom.xml </em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;project</span> ...<span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;repositories<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;repository<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>JBoss repository<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>http://repository.jboss.org/nexus/content/groups/public/<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/url<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/repository<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/repositories<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #808080; font-style: italic;">&lt;!-- MySQL database driver --&gt;</span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mysql<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mysql-connector-java<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>5.1.15<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>org.hibernate<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hibernate-core<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.6.3.Final<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>javassist<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>javassist<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.12.1.GA<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/project<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>1. &#8220;One-to-many&#8221; example</h4><p>This is a <strong>one-to-many</strong> relationship table design, a STOCK table has many occurrences STOCK_DAILY_RECORD table.</p><div class="pic"> <img src="http://www.mkyong.com/wp-content/uploads/2010/02/one-to-many-relationship.png" alt="one to many table relationship" title="one-to-many-relationship" width="554" height="207" /></div><p>See MySQL table scripts</p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">DROP</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #993333; font-weight: bold;">EXISTS</span> <span style="color: #ff0000;">`stock`</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #ff0000;">`stock`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_CODE`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_NAME`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE<span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_NAME`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_NAME`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_ID`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_CODE`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE
<span style="color: #66cc66;">&#41;</span> ENGINE<span style="color: #66cc66;">=</span>InnoDB <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">34</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> CHARSET<span style="color: #66cc66;">=</span>utf8;
&nbsp;
&nbsp;
<span style="color: #993333; font-weight: bold;">DROP</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #993333; font-weight: bold;">EXISTS</span> <span style="color: #ff0000;">`mkyongdb`</span><span style="color: #66cc66;">.</span><span style="color: #ff0000;">`stock_daily_record`</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>  <span style="color: #ff0000;">`mkyongdb`</span><span style="color: #66cc66;">.</span><span style="color: #ff0000;">`stock_daily_record`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`RECORD_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`PRICE_OPEN`</span> <span style="color: #993333; font-weight: bold;">FLOAT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">6</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`PRICE_CLOSE`</span> <span style="color: #993333; font-weight: bold;">FLOAT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">6</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`PRICE_CHANGE`</span> <span style="color: #993333; font-weight: bold;">FLOAT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">6</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`VOLUME`</span> <span style="color: #993333; font-weight: bold;">BIGINT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`DATE`</span> <span style="color: #993333; font-weight: bold;">DATE</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`RECORD_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE<span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`UNI_STOCK_DAILY_DATE`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`DATE`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`FK_STOCK_TRANSACTION_STOCK_ID`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> <span style="color: #ff0000;">`FK_STOCK_TRANSACTION_STOCK_ID`</span> <span style="color: #993333; font-weight: bold;">FOREIGN</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span> 
  <span style="color: #993333; font-weight: bold;">REFERENCES</span> <span style="color: #ff0000;">`stock`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`STOCK_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">ON</span> <span style="color: #993333; font-weight: bold;">DELETE</span> CASCADE <span style="color: #993333; font-weight: bold;">ON</span> <span style="color: #993333; font-weight: bold;">UPDATE</span> CASCADE
<span style="color: #66cc66;">&#41;</span> ENGINE<span style="color: #66cc66;">=</span>InnoDB <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">36</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> CHARSET<span style="color: #66cc66;">=</span>utf8;</pre></div></div><h4>2. Hibernate Model Class</h4><p>Create two model classes – <code>Stock.java</code> and <code>StockDailyRecord.java</code>, to represent the above tables.</p><p><em>File : Stock.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.HashSet</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Set</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> stockId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockCode<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> stockName<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> stockDailyRecords <span style="color: #339933;">=</span> 
				<span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//getter, setter and constructor</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>File : StockDailyRecord.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.stock</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Date</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> StockDailyRecord <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Integer</span> recordId<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Stock stock<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Float</span> priceOpen<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Float</span> priceClose<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Float</span> priceChange<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Long</span> volume<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">Date</span> date<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//getter, setter and constructor</span>
<span style="color: #009900;">&#125;</span></pre></div></div><h4>3. Hibernate XML Mapping</h4><p>Now, create two Hibernate mapping files (hbm) – <code>Stock.hbm.xml</code> and <code>StockDailyRecord.hbm.xml</code>.</p><p><em>File : Stock.hbm.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-mapping PUBLIC &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Stock&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock&quot;</span> <span style="color: #000066;">catalog</span>=<span style="color: #ff0000;">&quot;mkyongdb&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;identity&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockCode&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_CODE&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;10&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockName&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_NAME&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;20&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;set</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stockDailyRecords&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock_daily_record&quot;</span> </span>
<span style="color: #009900;">				<span style="color: #000066;">inverse</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">lazy</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">fetch</span>=<span style="color: #ff0000;">&quot;select&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;key<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/key<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;one-to-many</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.StockDailyRecord&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/set<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p><em>File : StockDailyRecord.hbm.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-mapping PUBLIC &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;</span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.StockDailyRecord&quot;</span> <span style="color: #000066;">table</span>=<span style="color: #ff0000;">&quot;stock_daily_record&quot;</span> </span>
<span style="color: #009900;">		<span style="color: #000066;">catalog</span>=<span style="color: #ff0000;">&quot;mkyongdb&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;id</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;recordId&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;RECORD_ID&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;generator</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;identity&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/id<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;many-to-one</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;stock&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.stock.Stock&quot;</span> <span style="color: #000066;">fetch</span>=<span style="color: #ff0000;">&quot;select&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;STOCK_ID&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/many-to-one<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;priceOpen&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Float&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;PRICE_OPEN&quot;</span> <span style="color: #000066;">precision</span>=<span style="color: #ff0000;">&quot;6&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;priceClose&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Float&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;PRICE_CLOSE&quot;</span> <span style="color: #000066;">precision</span>=<span style="color: #ff0000;">&quot;6&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;priceChange&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Float&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;PRICE_CHANGE&quot;</span> <span style="color: #000066;">precision</span>=<span style="color: #ff0000;">&quot;6&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;volume&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;java.lang.Long&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;VOLUME&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;date&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;date&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
            <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;column</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;DATE&quot;</span> <span style="color: #000066;">length</span>=<span style="color: #ff0000;">&quot;10&quot;</span> <span style="color: #000066;">not-null</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">unique</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>4. Hibernate Configuration File</h4><p>Puts <code>Stock.hbm.xml</code> and <code>StockDailyRecord.hbm.xml</code> in your Hibernate configuration file, and also MySQL connection details.</p><p><em>File : hibernate.cfg.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span> <span style="color: #000066;">encoding</span>=<span style="color: #ff0000;">&quot;utf-8&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #00bbdd;">&lt;!DOCTYPE hibernate-configuration PUBLIC</span>
<span style="color: #00bbdd;">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span>
<span style="color: #00bbdd;">&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;hibernate-configuration<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;session-factory<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.driver_class&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>com.mysql.jdbc.Driver<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.url&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>jdbc:mysql://localhost:3306/mkyongdb<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.username&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>root<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.connection.password&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>password<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;hibernate.dialect&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>org.hibernate.dialect.MySQLDialect<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;show_sql&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>true<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;format_sql&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>true<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping</span> <span style="color: #000066;">resource</span>=<span style="color: #ff0000;">&quot;com/mkyong/stock/Stock.hbm.xml&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping</span> <span style="color: #000066;">resource</span>=<span style="color: #ff0000;">&quot;com/mkyong/stock/StockDailyRecord.hbm.xml&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/session-factory<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/hibernate-configuration<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>5. Run It</h4><p>Run it, Hibernate will insert a row into the STOCK table and a row into the STOCK_DAILY_RECORD table.</p><p><em>File : App.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Date</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.hibernate.Session</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.Stock</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.stock.StockDailyRecord</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.util.HibernateUtil</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Hibernate one to many (XML Mapping)&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	Session session <span style="color: #339933;">=</span> HibernateUtil.<span style="color: #006633;">getSessionFactory</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">openSession</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	session.<span style="color: #006633;">beginTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	Stock stock <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Stock<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stock.<span style="color: #006633;">setStockCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;7052&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stock.<span style="color: #006633;">setStockName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;PADINI&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        StockDailyRecord stockDailyRecords <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> StockDailyRecord<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setPriceOpen</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Float</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;1.2&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setPriceClose</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Float</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;1.1&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setPriceChange</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Float</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;10.0&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setVolume</span><span style="color: #009900;">&#40;</span>3000000L<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        stockDailyRecords.<span style="color: #006633;">setDate</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">Date</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        stockDailyRecords.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>        
        stock.<span style="color: #006633;">getStockDailyRecords</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>stockDailyRecords<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stockDailyRecords<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	session.<span style="color: #006633;">getTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Done&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>Output &#8230;</em></p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;">Hibernate one <span style="color: #993333; font-weight: bold;">TO</span> many <span style="color: #66cc66;">&#40;</span>XML Mapping<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock
        <span style="color: #66cc66;">&#40;</span>STOCK_CODE<span style="color: #66cc66;">,</span> STOCK_NAME<span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span>
Hibernate: 
    <span style="color: #993333; font-weight: bold;">INSERT</span> 
    <span style="color: #993333; font-weight: bold;">INTO</span>
        mkyongdb<span style="color: #66cc66;">.</span>stock_daily_record
        <span style="color: #66cc66;">&#40;</span>STOCK_ID<span style="color: #66cc66;">,</span> PRICE_OPEN<span style="color: #66cc66;">,</span> PRICE_CLOSE<span style="color: #66cc66;">,</span> PRICE_CHANGE<span style="color: #66cc66;">,</span> VOLUME<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">DATE</span><span style="color: #66cc66;">&#41;</span> 
    <span style="color: #993333; font-weight: bold;">VALUES</span>
        <span style="color: #66cc66;">&#40;</span>?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">,</span> ?<span style="color: #66cc66;">&#41;</span></pre></div></div><div class="note"> <strong>Hibernate Annotation</strong><br /> For one-to-many in Hibernate annotation, please refer to this <a href="http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example-annotation/">example</a>.</div><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/02/Hibernate-one-to-many-xml-mapping.zip'>Hibernate-one-to-many-xml-mapping.zip</a> (10KB)</div><h4>Reference</h4><ol><li><a href="http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html/mapping.html#d0e7576" target="_blank">Hibernate Documentation &#8211; one to many relationship.</a></li></ol><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a> <a href="http://www.mkyong.com/tag/one-to-many/" rel="tag">one-to-many</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example-annotation/" title="Hibernate – One-to-Many example (Annotation) ">Hibernate – One-to-Many example (Annotation) </a></li><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/" title="Spring Security + Hibernate XML Example">Spring Security + Hibernate XML Example</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-org-hibernate-service-jta-platform-spi-jtaplatform/" title="java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform">java.lang.ClassNotFoundException: org.hibernate.service.jta.platform.spi.JtaPlatform</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-component-mapping-example/" title="Hibernate component mapping example">Hibernate component mapping example</a></li><li><a href="http://www.mkyong.com/hibernate/hibernate-many-to-many-example-join-table-extra-column-annotation/" title="Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) ">Hibernate &#8211; Many-to-Many example &#8211; join table + extra column (Annotation) </a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/java-mongodb-tutorials/' title='Java MongoDB Tutorials'><div class='images img-border img-mongodb'></div></a></li><li><a href='/tutorials/java-io/' title='Java I/O Tutorials'><div class='images img-border img-io'></div></a></li><li><a href='/tutorials/java-regular-expression-tutorials/' title='Java RegEx Tutorials'><div class='images img-border img-regex'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-139061"><div id="dsq-comment-header-139061" class="dsq-comment-header"> <cite id="dsq-cite-139061"> http://programmingspark.com <span id="dsq-author-user-139061">Romil</span> </cite></div><div id="dsq-comment-body-139061" class="dsq-comment-body"><div id="dsq-comment-message-139061" class="dsq-comment-message"><p>Nice post and a rocking blog</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138437"><div id="dsq-comment-header-138437" class="dsq-comment-header"> <cite id="dsq-cite-138437"> http://www.bigsoft.co.uk/blog/ <span id="dsq-author-user-138437">David Newcomb</span> </cite></div><div id="dsq-comment-body-138437" class="dsq-comment-body"><div id="dsq-comment-message-138437" class="dsq-comment-message"><p>Nice article but you&#8217;ve inadvertently made it confusing. STOCK_ID is the primary key for Stocks and STOCK_ID is the secondary key name in StockDailyRecord.<br /> The result of this is that when you mention STOCK_ID in the mapping files, I don&#8217;t know which you are referring to. In my schema &#8220;id&#8221; is the primary key name and &#8220;person_id&#8221; is the secondary key name.</p><p>Any chance you could update the article with different columns names? Pretty please!?!</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-138289"><div id="dsq-comment-header-138289" class="dsq-comment-header"> <cite id="dsq-cite-138289"> <span id="dsq-author-user-138289">Francisco Castellano</span> </cite></div><div id="dsq-comment-body-138289" class="dsq-comment-body"><div id="dsq-comment-message-138289" class="dsq-comment-message"><p>Hello mkyong,</p><p>It would be very usefull that the foreing column doesn&#8217;t have the same name that the primary column</p><p>Regards</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-135573"><div id="dsq-comment-header-135573" class="dsq-comment-header"> <cite id="dsq-cite-135573"> http://www.river2c.com <span id="dsq-author-user-135573">IT and Non Jobs</span> </cite></div><div id="dsq-comment-body-135573" class="dsq-comment-body"><div id="dsq-comment-message-135573" class="dsq-comment-message"><p>Nice Article for One to Many Relationship. It is very useful for me. Thank you</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-130326"><div id="dsq-comment-header-130326" class="dsq-comment-header"> <cite id="dsq-cite-130326"> <span id="dsq-author-user-130326">Jim</span> </cite></div><div id="dsq-comment-body-130326" class="dsq-comment-body"><div id="dsq-comment-message-130326" class="dsq-comment-message"><p>Hi,</p><p>I am getting this exception when i am using the above source code. Please help</p><p>SEVERE: Cannot add or update a child row: a foreign key constraint fails (`new_db`.`stock_daily_record`, CONSTRAINT `FK_STOCK_TRANSACTION_STOCK_ID` FOREIGN KEY (`STOCK_ID`) REFERENCES `stock` (`STOCK_ID`) ON DELETE CASCADE ON UPDATE CASCADE)<br /> Mar 12, 2013 10:02:30 PM org.hibernate.event.def.AbstractFlushingEventListener performExecutions<br /> SEVERE: Could not synchronize database state with session<br /> org.hibernate.exception.ConstraintViolationException: Could not execute JDBC batch update<br /> at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)<br /> at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)<br /> at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:253)<br /> at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)<br /> at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:167)<br /> at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:298)<br /> at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:27)<br /> at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1000)<br /> at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:338)<br /> at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:106)<br /> at in.greensoft.dao.impl.test.DoctorHibernateTest.main(DoctorHibernateTest.java:44)<br /> Caused by: java.sql.BatchUpdateException: Cannot add or update a child row: a foreign key constraint fails (`new_db`.`stock_daily_record`, CONSTRAINT `FK_STOCK_TRANSACTION_STOCK_ID` FOREIGN KEY (`STOCK_ID`) REFERENCES `stock` (`STOCK_ID`) ON DELETE CASCADE ON UPDATE CASCADE)<br /> at com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1269)<br /> at com.mysql.jdbc.PreparedStatement.executeBatch(PreparedStatement.java:955)<br /> at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:48)<br /> at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:246)<br /> &#8230; 8 more<br /> org.hibernate.exception.ConstraintViolationException: Could not execute JDBC batch update</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-130228"><div id="dsq-comment-header-130228" class="dsq-comment-header"> <cite id="dsq-cite-130228"> <span id="dsq-author-user-130228">Amit</span> </cite></div><div id="dsq-comment-body-130228" class="dsq-comment-body"><div id="dsq-comment-message-130228" class="dsq-comment-message"><p>getting following error while insert more than one record.<br /> org.hibernate.exception.ConstraintViolationException: Could not execute JDBC batch update</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-127671"><div id="dsq-comment-header-127671" class="dsq-comment-header"> <cite id="dsq-cite-127671"> <span id="dsq-author-user-127671">hubek</span> </cite></div><div id="dsq-comment-body-127671" class="dsq-comment-body"><div id="dsq-comment-message-127671" class="dsq-comment-message"><p>nice tutorial, thx</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-112046"><div id="dsq-comment-header-112046" class="dsq-comment-header"> <cite id="dsq-cite-112046"> <span id="dsq-author-user-112046">Suman Kumar</span> </cite></div><div id="dsq-comment-body-112046" class="dsq-comment-body"><div id="dsq-comment-message-112046" class="dsq-comment-message"><p>Content and  tutorial in  this  website  is  very  helpfull and  good.  please add some  tutorial on  LINUX/UNIX ,  Shell scripting  tutorial</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-85192"><div id="dsq-comment-header-85192" class="dsq-comment-header"> <cite id="dsq-cite-85192"> <span id="dsq-author-user-85192">Paul</span> </cite></div><div id="dsq-comment-body-85192" class="dsq-comment-body"><div id="dsq-comment-message-85192" class="dsq-comment-message"><p>In all of your examples you include a reference to the other object (Stock in this case) inside the other objects (such as StockItem). I completely understand why Stock would have a StockItem Object but why does each StockItem have a reference back to the stock object?</p><p>Please can you explain.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-83666"><div id="dsq-comment-header-83666" class="dsq-comment-header"> <cite id="dsq-cite-83666"> <span id="dsq-author-user-83666">sagar</span> </cite></div><div id="dsq-comment-body-83666" class="dsq-comment-body"><div id="dsq-comment-message-83666" class="dsq-comment-message"><p>If I use cascade=&#8221;all&#8221; and call<br /> session.save(stock);<br /> then it should save data in both the table.<br /> But getting child constrains exception.</p><p>But this work fine with Bag<br /> Why cascade&#8221;all&#8221; doesn&#8217;t work with Set?</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-83460"><div id="dsq-comment-header-83460" class="dsq-comment-header"> <cite id="dsq-cite-83460"> <span id="dsq-author-user-83460">Vivek K</span> </cite></div><div id="dsq-comment-body-83460" class="dsq-comment-body"><div id="dsq-comment-message-83460" class="dsq-comment-message"><p>Hi,</p><p>Great article, thanks!</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-83355"><div id="dsq-comment-header-83355" class="dsq-comment-header"> <cite id="dsq-cite-83355"> http://Alicedotrestores <span id="dsq-author-user-83355">Alice Kinston</span> </cite></div><div id="dsq-comment-body-83355" class="dsq-comment-body"><div id="dsq-comment-message-83355" class="dsq-comment-message"><p>My husband and i ended up being absolutely joyful when Jordan managed to finish off his researching while using the precious recommendations he grabbed when using the blog. It&#8217;s not at all simplistic to just continually be handing out points that many others may have been trying to sell. We really fully understand we have the writer to give thanks to for that. The specific illustrations you&#8217;ve made, the simple website navigation, the relationships you can assist to create &#8211; it is mostly impressive, and it is helping our son in addition to us imagine that this issue is cool, and that is truly essential. Thank you for all!</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-83289"><div id="dsq-comment-header-83289" class="dsq-comment-header"> <cite id="dsq-cite-83289"> <span id="dsq-author-user-83289">anooj</span> </cite></div><div id="dsq-comment-body-83289" class="dsq-comment-body"><div id="dsq-comment-message-83289" class="dsq-comment-message"><p>plz tell me how to retrieve database inner-joined values to jsp page and list box . and how to save only id from the list box to database ?? plz tell me by considering the above example</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-82747"><div id="dsq-comment-header-82747" class="dsq-comment-header"> <cite id="dsq-cite-82747"> <span id="dsq-author-user-82747">shyamshyre</span> </cite></div><div id="dsq-comment-body-82747" class="dsq-comment-body"><div id="dsq-comment-message-82747" class="dsq-comment-message"><p>Hi Mkyong,</p><p>I have a user table which consists of multiple roles.(Pointing to Roles Table)<br /> (One user multiple Roles).<br /> When i am saving the Record its inserting successfully.<br /> But when i am  trying to update the record,Its updating and<br /> even deleting the record from the created Relation-table.(USER_ROLES)</p><p>USER TABLE</p><p>@OneToMany(fetch = FetchType.EAGER)<br /> public Set getUserroles() {<br /> return userroles;<br /> }<br /> public void setUserroles(Set userroles) {<br /> this.userroles = userroles;<br /> }</p><p>When i am trying to go with my mapby its throwing error AnnotationException and  mappedBy reference an unknown target entity property: .</p><p>Please help me.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-76379"><div id="dsq-comment-header-76379" class="dsq-comment-header"> <cite id="dsq-cite-76379"> <span id="dsq-author-user-76379">hjc</span> </cite></div><div id="dsq-comment-body-76379" class="dsq-comment-body"><div id="dsq-comment-message-76379" class="dsq-comment-message"><p>Hi mkyong,<br /> Nice article.<br /> I am a noob to hibernate. Your tutorials are very helpful in understanding the core concepts since examples are provided. Appreciate it.</p><p>I had a question. If I try to run the above program for first time, the parameters are all inserted into stock and stock_daily_record tables correctly. However when I try to run this again, I get the exception below. I may be wrong, but I thought hibernate would detect if there was a duplicate insertion and not insert the values.</p><p>Caused by: java.sql.SQLException: Duplicate key or integrity constraint violation message from server: &#8220;Duplicate entry &#8217;7052&#8242; for key &#8216;STOCK_CODE&#8217;&#8221;</p><p>How to handle the exception gracefully?<br /> Thanks</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-76432"><div id="dsq-comment-header-76432" class="dsq-comment-header"> <cite id="dsq-cite-76432"> http://www.mkyong.com <span id="dsq-author-user-76432">mkyong</span> </cite></div><div id="dsq-comment-body-76432" class="dsq-comment-body"><div id="dsq-comment-message-76432" class="dsq-comment-message"><p>Because STOCK_CODE need to be unique. Hibernate is prompts exception is expected.</p><p>You need to add your own checking like this</p><p>find if key exists = true<br /> ignore and prompt key is duplicated.<br /> else<br /> insert record</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-73300"><div id="dsq-comment-header-73300" class="dsq-comment-header"> <cite id="dsq-cite-73300"> <span id="dsq-author-user-73300">Jaya</span> </cite></div><div id="dsq-comment-body-73300" class="dsq-comment-body"><div id="dsq-comment-message-73300" class="dsq-comment-message"><p>In One to Many Example</p><p>why you have to specify (StockDailyRecord.hbm.xml)</p><p>I don&#8217;t understand , Please can you explain</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-72886"><div id="dsq-comment-header-72886" class="dsq-comment-header"> <cite id="dsq-cite-72886"> <span id="dsq-author-user-72886">Ayesha</span> </cite></div><div id="dsq-comment-body-72886" class="dsq-comment-body"><div id="dsq-comment-message-72886" class="dsq-comment-message"><p>can u give a similar example for many to many mapping?</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-71471"><div id="dsq-comment-header-71471" class="dsq-comment-header"> <cite id="dsq-cite-71471"> <span id="dsq-author-user-71471">Prateek</span> </cite></div><div id="dsq-comment-body-71471" class="dsq-comment-body"><div id="dsq-comment-message-71471" class="dsq-comment-message"><div class="wp_syntax"><div class="code"><pre class="html4strict" style="font-family:monospace;">very nice way to submit this article</pre></div></div></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-67786"><div id="dsq-comment-header-67786" class="dsq-comment-header"> <cite id="dsq-cite-67786"> <span id="dsq-author-user-67786">Neliel</span> </cite></div><div id="dsq-comment-body-67786" class="dsq-comment-body"><div id="dsq-comment-message-67786" class="dsq-comment-message"><p>Hi Mkyong,</p><p>Can you help me with my mapping?  I am in doubt on whats the best approach?</p><p>I have an insurance table and user could change the rate plan associated with it.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">Table Insurance<span style="color: #339933;">:</span>
    id <span style="color: #000066; font-weight: bold;">long</span><span style="color: #339933;">;</span>
    accountHolder varchar<span style="color: #339933;">;</span>
    ratePlanId <span style="color: #000066; font-weight: bold;">int</span><span style="color: #339933;">;</span>  <span style="color: #339933;">--&amp;</span>gt<span style="color: #339933;">;</span>Rate Plan Id is Foreign <span style="color: #003399;">Key</span> to the RatePlanTable
&nbsp;
Table RatePlan<span style="color: #339933;">:</span>
    ratePlanId <span style="color: #000066; font-weight: bold;">int</span><span style="color: #339933;">;</span>
    ratePlanDesc varchar<span style="color: #339933;">;</span>
    discountRate <span style="color: #000066; font-weight: bold;">double</span><span style="color: #339933;">;</span></pre></div></div><p>I have a class structure like this:</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Insurance<span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000066; font-weight: bold;">long</span> id<span style="color: #339933;">;</span>
    <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> accountHolder<span style="color: #339933;">;</span>
    <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000066; font-weight: bold;">int</span> ratePlanId<span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RatePlan<span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000066; font-weight: bold;">int</span> ratePlanId<span style="color: #339933;">;</span>
    <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> ratePlanDesc<span style="color: #339933;">;</span>
    <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000066; font-weight: bold;">double</span> discountRate<span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Is my table-class hierarchy correct?<br /> or should I change my Insurance class to this?</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Insurance<span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000066; font-weight: bold;">long</span> id<span style="color: #339933;">;</span>
    <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> accountHolder<span style="color: #339933;">;</span>
    <span style="color: #000000; font-weight: bold;">private</span> RatePlan plan<span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>What should be the proper mapping? Is this a one-to-many mapping also?</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-67899"><div id="dsq-comment-header-67899" class="dsq-comment-header"> <cite id="dsq-cite-67899"> http://www.mkyong.com <span id="dsq-author-user-67899">mkyong</span> </cite></div><div id="dsq-comment-body-67899" class="dsq-comment-body"><div id="dsq-comment-message-67899" class="dsq-comment-message"><p>Try Hibernate tool &#8211; <a href="http://www.mkyong.com/hibernate/how-to-generate-code-with-hibernate-tools/" rel="nofollow">http://www.mkyong.com/hibernate/how-to-generate-code-with-hibernate-tools/</a> , it will generate Hibernate mapping automatically, and customize it if require.</p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-%e2%80%93-one-to-many-relationship-example-annotation/' rel='external nofollow' class='url'>Hibernate – One-to-many relationship example (Annotation)</a></p></li></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-48746"><div id="dsq-comment-header-48746" class="dsq-comment-header"> <cite id="dsq-cite-48746"> <span id="dsq-author-user-48746">toton</span> </cite></div><div id="dsq-comment-body-48746" class="dsq-comment-body"><div id="dsq-comment-message-48746" class="dsq-comment-message"><p>Hi..<br /> in hibernate there is association mapping,collection mapping&#8230;component mapping and then one to many vice versa and also uni/bi directional..a bit confusing sometimes..can u provide some light on this</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-48768"><div id="dsq-comment-header-48768" class="dsq-comment-header"> <cite id="dsq-cite-48768"> http://www.mkyong.com <span id="dsq-author-user-48768">mkyong</span> </cite></div><div id="dsq-comment-body-48768" class="dsq-comment-body"><div id="dsq-comment-message-48768" class="dsq-comment-message"><p>thanks for the suggestion, i&#8217;m seeing a lot missing chapters in the current <a href="http://www.mkyong.com/tutorials/hibernate-tutorials/" rel="nofollow">Hibernate tutorials</a> as well, will create more examples in future.</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-48343"><div id="dsq-comment-header-48343" class="dsq-comment-header"> <cite id="dsq-cite-48343"> <span id="dsq-author-user-48343">ahdiblack</span> </cite></div><div id="dsq-comment-body-48343" class="dsq-comment-body"><div id="dsq-comment-message-48343" class="dsq-comment-message"><p>Hi,</p><p>I need help. I have entities like in your tutorial, but in my project, I need to retrieve an entity (like &#8220;stock&#8221; in your tutorial) as list and in that list I should reach the related entity (like &#8220;stock_daily_record&#8221; in the tutorial) in a loop and get the values in that entity. But I got lazy initialization erro when I do that. What may be the reason, could you help please??</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-48350"><div id="dsq-comment-header-48350" class="dsq-comment-header"> <cite id="dsq-cite-48350"> http://www.mkyong.com <span id="dsq-author-user-48350">mkyong</span> </cite></div><div id="dsq-comment-body-48350" class="dsq-comment-body"><div id="dsq-comment-message-48350" class="dsq-comment-message"><p>What&#8217;s your error stacks?</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-48373"><div id="dsq-comment-header-48373" class="dsq-comment-header"> <cite id="dsq-cite-48373"> <span id="dsq-author-user-48373">ahdiblack</span> </cite></div><div id="dsq-comment-body-48373" class="dsq-comment-body"><div id="dsq-comment-message-48373" class="dsq-comment-message"><p>Here is my error stack</p><p>Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role:</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-4" id="dsq-comment-48374"><div id="dsq-comment-header-48374" class="dsq-comment-header"> <cite id="dsq-cite-48374"> http://www.mkyong.com <span id="dsq-author-user-48374">mkyong</span> </cite></div><div id="dsq-comment-body-48374" class="dsq-comment-body"><div id="dsq-comment-message-48374" class="dsq-comment-message"><p>Send your full error stack and source code to my mail.</p></div></div></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-48184"><div id="dsq-comment-header-48184" class="dsq-comment-header"> <cite id="dsq-cite-48184"> <span id="dsq-author-user-48184">Gregg</span> </cite></div><div id="dsq-comment-body-48184" class="dsq-comment-body"><div id="dsq-comment-message-48184" class="dsq-comment-message"><p>In your test code posted above, you do:</p><p> session.save(stockDailyRecords);<br /> session.save(stock);</p><p>However, this generates an error (for me at least).  I believe it should be:</p><p> session.save(stock);<br /> session.save(stockDailyRecords);</p><p>(It is this way in the zip file, so that doesn&#8217;t need corrected.)</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-48199"><div id="dsq-comment-header-48199" class="dsq-comment-header"> <cite id="dsq-cite-48199"> http://www.mkyong.com <span id="dsq-author-user-48199">mkyong</span> </cite></div><div id="dsq-comment-body-48199" class="dsq-comment-body"><div id="dsq-comment-message-48199" class="dsq-comment-message"><p>Er&#8230;Do you means that the code sequence in Zip file is correct, but the code in above posted article is wrong?</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-59167"><div id="dsq-comment-header-59167" class="dsq-comment-header"> <cite id="dsq-cite-59167"> <span id="dsq-author-user-59167">Muthu krishnan</span> </cite></div><div id="dsq-comment-body-59167" class="dsq-comment-body"><div id="dsq-comment-message-59167" class="dsq-comment-message"><p>Hi i am just learner of hibernate,</p><p>we deals with one to many relationship, stock object we create, it contains stockdetailrecord  set . you creating instance for stock through which you adding a record for stockdetailrecord. but while saving you calling session.save(stockdetailrecord) then how it will update stock table. because stock table haveing  forginekey column in stock_detail_record table. hope it will be like session.save(stock) which interns update stock_detail_record, stock is parent and stock_detail_record is child rite&#8230; If i am wrong pl correct me.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-4" id="dsq-comment-59235"><div id="dsq-comment-header-59235" class="dsq-comment-header"> <cite id="dsq-cite-59235"> http://www.mkyong.com <span id="dsq-author-user-59235">mkyong</span> </cite></div><div id="dsq-comment-body-59235" class="dsq-comment-body"><div id="dsq-comment-message-59235" class="dsq-comment-message"><p>Assign parent to his child, configure inverse = true in parent.</p><p>As long as you are assigning the correct nested parent or child, Hibernate will take care of the relationship automatically.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">stockDailyRecords.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>  
session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stockdetailrecord<span style="color: #009900;">&#41;</span></pre></div></div></div></div></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-46532"><div id="dsq-comment-header-46532" class="dsq-comment-header"> <cite id="dsq-cite-46532"> <span id="dsq-author-user-46532">AG</span> </cite></div><div id="dsq-comment-body-46532" class="dsq-comment-body"><div id="dsq-comment-message-46532" class="dsq-comment-message"><p>Thanks a lot :-)<br /> Very concise &amp; straightforward articles&#8230; really helpful.</p><p>Keep it up !<br /> AG</p><p>PS : One small issue is with the link &#8216;read more about it…&#8217;.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-46598"><div id="dsq-comment-header-46598" class="dsq-comment-header"> <cite id="dsq-cite-46598"> http://www.mkyong.com <span id="dsq-author-user-46598">mkyong</span> </cite></div><div id="dsq-comment-body-46598" class="dsq-comment-body"><div id="dsq-comment-message-46598" class="dsq-comment-message"><p>Thank for your link check, now the link is updated and working fine.</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-42625"><div id="dsq-comment-header-42625" class="dsq-comment-header"> <cite id="dsq-cite-42625"> http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example/ <span id="dsq-author-user-42625">puri jagan</span> </cite></div><div id="dsq-comment-body-42625" class="dsq-comment-body"><div id="dsq-comment-message-42625" class="dsq-comment-message"><p>how many files needed to create a hibernate &amp; which folder we have to placed tell me plz&#8230;&#8230;&#8230;.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-42690"><div id="dsq-comment-header-42690" class="dsq-comment-header"> <cite id="dsq-cite-42690"> http://www.mkyong.com <span id="dsq-author-user-42690">mkyong</span> </cite></div><div id="dsq-comment-body-42690" class="dsq-comment-body"><div id="dsq-comment-message-42690" class="dsq-comment-message"><p>Just download this project and find it out yourself :)</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-36211"><div id="dsq-comment-header-36211" class="dsq-comment-header"> <cite id="dsq-cite-36211"> http://gardensupercenter.com <span id="dsq-author-user-36211">Janel Rulpo</span> </cite></div><div id="dsq-comment-body-36211" class="dsq-comment-body"><div id="dsq-comment-message-36211" class="dsq-comment-message"><p>Thanks for putting this out. Helpful info indeed</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-cascade-example-save-update-delete-and-delete-orphan/' rel='external nofollow' class='url'>Hibernate &#8211; Cascade example (save, update, delete and delete-orphan)</a></p></li></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/hibernate-tutorials/' rel='external nofollow' class='url'>Hibernate Tutorials | Tutorials</a></p></li></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-5893"><div id="dsq-comment-header-5893" class="dsq-comment-header"> <cite id="dsq-cite-5893"> <span id="dsq-author-user-5893">Amit</span> </cite></div><div id="dsq-comment-body-5893" class="dsq-comment-body"><div id="dsq-comment-message-5893" class="dsq-comment-message"><p>Nice article !. One question : Is it necessary to have a many-to-one relationship always on the other side of the one-to-many relationship (like the one you mentioned above) or it&#8217;s needed only in specific cases (if yes what are they) ?</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-5903"><div id="dsq-comment-header-5903" class="dsq-comment-header"> <cite id="dsq-cite-5903"> http://www.mkyong.com <span id="dsq-author-user-5903">mkyong</span> </cite></div><div id="dsq-comment-body-5903" class="dsq-comment-body"><div id="dsq-comment-message-5903" class="dsq-comment-message"><p>yes, configure the relationship in both sides are always recommended, else the other site (many-to-one) or stock_daily_record can not retrieve the data from stock table directly, you may need some workaround for it.</p><p>If you really sure the other site (many-to-one) should not have the relationship, you can just disable it, the Hibernate will still work. But you have to manage both relationship manually. In most cases, it just doesn&#8217;t make sense.</p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-5927"><div id="dsq-comment-header-5927" class="dsq-comment-header"> <cite id="dsq-cite-5927"> <span id="dsq-author-user-5927">Amit</span> </cite></div><div id="dsq-comment-body-5927" class="dsq-comment-body"><div id="dsq-comment-message-5927" class="dsq-comment-message"><p>ok great&#8230;thanks for the reply</p></div></div></li><li class="comment odd alt depth-3" id="dsq-comment-47820"><div id="dsq-comment-header-47820" class="dsq-comment-header"> <cite id="dsq-cite-47820"> <span id="dsq-author-user-47820">Shikhar</span> </cite></div><div id="dsq-comment-body-47820" class="dsq-comment-body"><div id="dsq-comment-message-47820" class="dsq-comment-message"><p>Hey yong&#8230;thanks for posting such a nice article&#8230;.but i&#8217;m facing some issues with the one-to-many mapping&#8230;actually instead of Set i&#8217;m using a List..can you please provide any example with on-to-many relationship involving List??</p></div></div></li></ul></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-mutable-example-class-and-collection/' rel='external nofollow' class='url'>Hibernate mutable example (class and collection) | Hibernate</a></p></li></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/cascade-jpa-hibernate-annotation-common-mistake/' rel='external nofollow' class='url'>Cascade &#8211; JPA &amp; Hibernate annotation common mistake | Hibernate</a></p></li></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example/';var disqus_identifier='3158 http://www.mkyong.com/?p=3158';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Hibernate &#8211; One-to-Many example (XML Mapping)";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=3158';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Cascade &#8211; JPA &amp; Hibernate annotation common mistake | Hibernate",'author_url':"http:\/\/www.mkyong.com\/hibernate\/cascade-jpa-hibernate-annotation-common-mistake\/",'date':"02\/06\/2010 01:35 AM",'excerpt':"[...] the program failed to execute the cascade operation to the related entities. I will take this one-to-many hibernate example &hellip;",'type':"pingback"},{'author_name':"Hibernate mutable example (class and collection) | Hibernate",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-mutable-example-class-and-collection\/",'date':"02\/18\/2010 10:15 AM",'excerpt':"[...] will take this one-to-many example for the mutable demonstration. In this mapping file, a Stock is belong to many &hellip;",'type':"pingback"},{'author_name':"Hibernate Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/hibernate-tutorials\/",'date':"05\/01\/2010 01:18 PM",'excerpt':"[...] One-to-many relationship example A one-to-many relationship project demonstration. [...] ",'type':"pingback"},{'author_name':"Hibernate &#8211; Cascade example (save, update, delete and delete-orphan)",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-cascade-example-save-update-delete-and-delete-orphan\/",'date':"11\/14\/2010 01:09 AM",'excerpt':"[...] the collection mapping to manage the state of the collection automatically. In this tutorials, this one-to-many example will be &hellip;",'type':"pingback"},{'author_name':"Hibernate – One-to-many relationship example (Annotation)",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-%e2%80%93-one-to-many-relationship-example-annotation\/",'date':"04\/26\/2011 03:27 PM",'excerpt':"[...] this tutorial, it will reuse the entire infrastructure of the previous &#8220;Hibernate one to many relationship example &#8211; XML &hellip;",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-one-to-many-relationship-example\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="3158" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>