<!DOCTYPE html><html lang="en"><title>Cascade &#8211; JPA &amp; Hibernate annotation common mistake</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Different between cascade and inverse' href='http://www.mkyong.com/hibernate/different-between-cascade-and-inverse/' /><link rel='next' title='How to prevent others steal your web image (hotlinking)' href='http://www.mkyong.com/web-development/how-to-prevent-others-steal-your-web-image-hotlinking/' /><link rel='shortlink' href='http://www.mkyong.com/?p=3251' /><meta name="keywords" content="cascade,hibernate,jpa" /><link rel="canonical" href="http://www.mkyong.com/hibernate/cascade-jpa-hibernate-annotation-common-mistake/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-3251"><header><h1> Cascade &#8211; JPA &#038; Hibernate annotation common mistake</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-02-06T01:34:24+00:00">February 6, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : August 30, 2012 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>Often times, developers are mix used the JPA and Hibernate annotation together, it will caused a very common mistake &#8211; JPA cascade type annotation is not working in Hibernate?</p><p>During the code review section, i find out many Java developers are not aware of this mistake and causing the program failed to execute the cascade operation to the related entities. I will take this <a href="http://www.mkyong.com/hibernate/hibernate-one-to-many-relationship-example/" target="_blank">one-to-many hibernate example</a> for the demonstration.</p><h3>Mistake</h3><p>In the one-to-many example, many developers declared the JPA cascade options as following :</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">...
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyong&quot;</span>, uniqueConstraints <span style="color: #339933;">=</span> <span style="color: #009900;">&#123;</span>
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_NAME&quot;</span><span style="color: #009900;">&#41;</span>,
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_CODE&quot;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
    ...
    <span style="color: #000000; font-weight: bold;">private</span> Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> stockDailyRecords <span style="color: #339933;">=</span> 
                                              <span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    @OneToMany<span style="color: #009900;">&#40;</span>fetch <span style="color: #339933;">=</span> FetchType.<span style="color: #006633;">LAZY</span>, 
       cascade <span style="color: #339933;">=</span> <span style="color: #009900;">&#123;</span>CascadeType.<span style="color: #006633;">PERSIST</span>,CascadeType.<span style="color: #006633;">MERGE</span> <span style="color: #009900;">&#125;</span>, 
       mappedBy <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span><span style="color: #009900;">&#41;</span>
    <span style="color: #000000; font-weight: bold;">public</span> Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> getStockDailyRecords<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockDailyRecords</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
&nbsp;
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockDailyRecords<span style="color: #009900;">&#40;</span>Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> stockDailyRecords<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockDailyRecords</span> <span style="color: #339933;">=</span> stockDailyRecords<span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
    ...</pre></div></div><p>Save it with Hibernate session.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">        stockDailyRecords.<span style="color: #006633;">setStock</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>        
        stock.<span style="color: #006633;">getStockDailyRecords</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span>stockDailyRecords<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
        session.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>stock<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
        session.<span style="color: #006633;">getTransaction</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">commit</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><p>What the code trying to do is when you save a &#8220;stock&#8221;, it will save the associated stockDailyRecords as well. Everything look fine, but <strong>THIS IS NOT WORKING</strong>, the cascade options will not execute and save the stockDailyRecords. Can you spot the mistake?</p><h3>Explanation</h3><p>Look in the code, <strong>@OneToMany</strong> is from JPA , it expected a JPA cascade &#8211; <strong>javax.persistence.CascadeType</strong>. However when you save it with Hibernate session, <strong>org.hibernate.engine.Cascade</strong> will do the following checking &#8230;</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">	<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span> style.<span style="color: #006633;">doCascade</span><span style="color: #009900;">&#40;</span> action <span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		cascadeProperty<span style="color: #009900;">&#40;</span>
	          persister.<span style="color: #006633;">getPropertyValue</span><span style="color: #009900;">&#40;</span> parent, i, entityMode <span style="color: #009900;">&#41;</span>,
		  types<span style="color: #009900;">&#91;</span>i<span style="color: #009900;">&#93;</span>,
    	          style,
	          anything,
	          <span style="color: #000066; font-weight: bold;">false</span>
		<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span></pre></div></div><p>The Hibernate save process will causing a <strong>ACTION_SAVE_UPDATE</strong> action, but the JPA will pass a <strong>ACTION_PERSIST</strong> and <strong>ACTION_MERGE</strong>, it will not match and causing the cascade failed to execute.</p><p>@see source code</p><ul><li><strong>org.hibernate.engine.Cascade</strong></li><li><strong>org.hibernate.engine.CascadeStyle</strong></li><li><strong>org.hibernate.engine.CascadingAction</strong></li></ul><h3>Solution</h3><p>Delete the JPA cascade &#8211; <strong>javax.persistence.CascadeType</strong>, replace it with Hibernate cascade &#8211; <strong>org.hibernate.annotations.Cascade</strong>, with <strong>CascadeType.SAVE_UPDATE</strong>.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">...
@<span style="color: #003399;">Entity</span>
@Table<span style="color: #009900;">&#40;</span>name <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span>, catalog <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;mkyong&quot;</span>, uniqueConstraints <span style="color: #339933;">=</span> <span style="color: #009900;">&#123;</span>
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_NAME&quot;</span><span style="color: #009900;">&#41;</span>,
		@UniqueConstraint<span style="color: #009900;">&#40;</span>columnNames <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;STOCK_CODE&quot;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Stock <span style="color: #000000; font-weight: bold;">implements</span> java.<span style="color: #006633;">io</span>.<span style="color: #003399;">Serializable</span> <span style="color: #009900;">&#123;</span>
    ...
    <span style="color: #000000; font-weight: bold;">private</span> Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> stockDailyRecords <span style="color: #339933;">=</span> 
                                              <span style="color: #000000; font-weight: bold;">new</span> HashSet<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    @OneToMany<span style="color: #009900;">&#40;</span>fetch <span style="color: #339933;">=</span> FetchType.<span style="color: #006633;">LAZY</span>, mappedBy <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;stock&quot;</span><span style="color: #009900;">&#41;</span>
    @Cascade<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#123;</span>CascadeType.<span style="color: #006633;">SAVE_UPDATE</span><span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span>
    <span style="color: #000000; font-weight: bold;">public</span> Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> getStockDailyRecords<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockDailyRecords</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
&nbsp;
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setStockDailyRecords<span style="color: #009900;">&#40;</span>Set<span style="color: #339933;">&lt;</span>StockDailyRecord<span style="color: #339933;">&gt;</span> stockDailyRecords<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">stockDailyRecords</span> <span style="color: #339933;">=</span> stockDailyRecords<span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
    ...</pre></div></div><p>Now, it work as what you expected.</p><h3>Conclusion</h3><p>It look like an incompatible issue between JPA and Hibernate cascade annotation, if Hibernate is a JPA implementation, what may causing the misunderstand in between?</p><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/cascade/" rel="tag">cascade</a> <a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a> <a href="http://www.mkyong.com/tag/jpa/" rel="tag">jpa</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/websphere/websphere-7-javaxpersistenceonetomany-orphanremoval-error/" title="WebSphere 7 &#038; javax/persistence/OneToMany.orphanRemoval() error">WebSphere 7 &#038; javax/persistence/OneToMany.orphanRemoval() error</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classformaterror-absent-code-attribute-in-method-that-is-not-native-or-abstract-in-class-file/" title="java.lang.ClassFormatError : Absent Code attribute in method that is not native or abstract in class file &#8230;">java.lang.ClassFormatError : Absent Code attribute in method that is not native or abstract in class file &#8230;</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-javax-transaction-transactionmanager/" title="java.lang.ClassNotFoundException: javax.transaction.TransactionManager">java.lang.ClassNotFoundException: javax.transaction.TransactionManager</a></li><li><a href="http://www.mkyong.com/hibernate/java-lang-classnotfoundexception-javax-persistence-entity/" title="java.lang.ClassNotFoundException: javax.persistence.Entity">java.lang.ClassNotFoundException: javax.persistence.Entity</a></li><li><a href="http://www.mkyong.com/hibernate/different-between-cascade-and-inverse/" title="Different between cascade and inverse">Different between cascade and inverse</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tag/java/' title='Java Tutorials'><div class='images img-border img-java'></div></a></li><li><a href='/tutorials/spring-security-tutorials/' title='Spring Security Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/maven-tutorials/' title='Maven Tutorials'><div class='images img-border img-maven'></div></a></li><li><a href='/tutorials/jsf-2-0-tutorials/' title='JSF 2 Tutorials'><div class='images img-border img-jsf2'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="post pingback"><p>Pingback: <a href='http://onjavadev.com/?p=35' rel='external nofollow' class='url'>Hibernate and JPA Annotations | On Java Development</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-138082"><div id="dsq-comment-header-138082" class="dsq-comment-header"> <cite id="dsq-cite-138082"> http://<a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="25444b505548404d5144121517654248444c490b464a48">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script> <span id="dsq-author-user-138082">Anup Mehta</span> </cite></div><div id="dsq-comment-body-138082" class="dsq-comment-body"><div id="dsq-comment-message-138082" class="dsq-comment-message"><p>This article is extremely confusing .<br /> I saw one of your example where you used JPA cascade option<br /> <a href="http://www.mkyong.com/hibernate/hibernate-one-to-one-relationship-example-annotation/" rel="nofollow">http://www.mkyong.com/hibernate/hibernate-one-to-one-relationship-example-annotation/</a><br /> (refer stock.java )<br /> And than later you used hibernate&#8217;s sesssion.save(stock)<br /> On net too I have observed that people use CascadeType.All and use session.save(object) and the code works fine .<br /> Does this mean that save() method exists in both Hibernate and JPA ? Please clear my doubt.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138009"><div id="dsq-comment-header-138009" class="dsq-comment-header"> <cite id="dsq-cite-138009"> <span id="dsq-author-user-138009">vijay</span> </cite></div><div id="dsq-comment-body-138009" class="dsq-comment-body"><div id="dsq-comment-message-138009" class="dsq-comment-message"><p>Hi All,</p><p>I am new to hibernate , fist Thanks for this post.<br /> I am doing the debug this code and i have requirement i would like to introduce the<br /> delete functionality with annotation i.e once we delete the parent its need to be delete child records ie i need to introduce the ondelete cascade feature.</p><p>Could you please help how to introduce this feature.</p><p>Thanks<br /> Vijay</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-136995"><div id="dsq-comment-header-136995" class="dsq-comment-header"> <cite id="dsq-cite-136995"> http://www.jeeaps.pl <span id="dsq-author-user-136995">Dawid Furman</span> </cite></div><div id="dsq-comment-body-136995" class="dsq-comment-body"><div id="dsq-comment-message-136995" class="dsq-comment-message"><p>Yeah! Thank you very much for your great article!! Now all is clear!<br /> best regard from Poland</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-136493"><div id="dsq-comment-header-136493" class="dsq-comment-header"> <cite id="dsq-cite-136493"> <span id="dsq-author-user-136493">dan carter</span> </cite></div><div id="dsq-comment-body-136493" class="dsq-comment-body"><div id="dsq-comment-message-136493" class="dsq-comment-message"><p>Hi,</p><p>As this article is quite highly ranked in google still, it&#8217;s worth pointing out that hibernate does now support JPA cascade.  No need to use the hibernate specific annotation.</p><p>import javax.persistence.CascadeType;<br /> import javax.persistence.FetchType;<br /> import javax.persistence.OneToOne;</p><p> @OneToOne(mappedBy = &#8220;device&#8221;, fetch = FetchType.LAZY, cascade = CascadeType.ALL)<br /> private LoginService loginService;</p><p>Using 4.2.3-Final here</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-136494"><div id="dsq-comment-header-136494" class="dsq-comment-header"> <cite id="dsq-cite-136494"> <span id="dsq-author-user-136494">dan carter</span> </cite></div><div id="dsq-comment-body-136494" class="dsq-comment-body"><div id="dsq-comment-message-136494" class="dsq-comment-message"><p>Actually, i should point out i am using JPA API here to save (well actually using spring-data which in turn uses jpa entity-manager)</p><p>And actually re-reading this article i see i have misunderstood it.  Ii thought you were talking about how to use hibernate with JPA, but in fact you are explaining how to use the hibernate native API with no JPA at all.</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-136031"><div id="dsq-comment-header-136031" class="dsq-comment-header"> <cite id="dsq-cite-136031"> <span id="dsq-author-user-136031">Muhammad Bilal</span> </cite></div><div id="dsq-comment-body-136031" class="dsq-comment-body"><div id="dsq-comment-message-136031" class="dsq-comment-message"><p>I have been working on this issue for a long time .. didnt got this clicked in ma mind. your blog help Alot. Thanks</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-135210"><div id="dsq-comment-header-135210" class="dsq-comment-header"> <cite id="dsq-cite-135210"> <span id="dsq-author-user-135210">Laxmikanth</span> </cite></div><div id="dsq-comment-body-135210" class="dsq-comment-body"><div id="dsq-comment-message-135210" class="dsq-comment-message"><p>Even I was struggling why Hibernate is not saving child objects. Your blog helped me dude..<br /> Thanks alot..!!</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-135031"><div id="dsq-comment-header-135031" class="dsq-comment-header"> <cite id="dsq-cite-135031"> <span id="dsq-author-user-135031">Abhay</span> </cite></div><div id="dsq-comment-body-135031" class="dsq-comment-body"><div id="dsq-comment-message-135031" class="dsq-comment-message"><p>Any recommended book for JPA &amp; JPQL.<br /> thanks in advance&#8230;</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-133582"><div id="dsq-comment-header-133582" class="dsq-comment-header"> <cite id="dsq-cite-133582"> <span id="dsq-author-user-133582">srinu</span> </cite></div><div id="dsq-comment-body-133582" class="dsq-comment-body"><div id="dsq-comment-message-133582" class="dsq-comment-message"><p>its  good..</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-132925"><div id="dsq-comment-header-132925" class="dsq-comment-header"> <cite id="dsq-cite-132925"> <span id="dsq-author-user-132925">Shivang Gupta</span> </cite></div><div id="dsq-comment-body-132925" class="dsq-comment-body"><div id="dsq-comment-message-132925" class="dsq-comment-message"><p>Thanks a lot!! I was facing this exact issue. Saved me some time in identifying the problem, and a lot of time in finding the solution. This post, as well as others (especially those on Spring) have been a big help. Keep blogging and enlightening us&#8230; :)</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-132391"><div id="dsq-comment-header-132391" class="dsq-comment-header"> <cite id="dsq-cite-132391"> <span id="dsq-author-user-132391">nelson</span> </cite></div><div id="dsq-comment-body-132391" class="dsq-comment-body"><div id="dsq-comment-message-132391" class="dsq-comment-message"><p>It would be greate if there was a searchBox in the site.</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.blogosfera.co.uk/2013/04/hibernate-or-jpa-annotations-to-use/' rel='external nofollow' class='url'>Hibernate or JPA annotations to use | BlogoSfera</a></p></li></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-126946"><div id="dsq-comment-header-126946" class="dsq-comment-header"> <cite id="dsq-cite-126946"> http://ayata.com <span id="dsq-author-user-126946">Arup</span> </cite></div><div id="dsq-comment-body-126946" class="dsq-comment-body"><div id="dsq-comment-message-126946" class="dsq-comment-message"><p>helps a lot.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-124070"><div id="dsq-comment-header-124070" class="dsq-comment-header"> <cite id="dsq-cite-124070"> <span id="dsq-author-user-124070">dli7mar</span> </cite></div><div id="dsq-comment-body-124070" class="dsq-comment-body"><div id="dsq-comment-message-124070" class="dsq-comment-message"><p>Hi mkyong,</p><p>In a JPA/Hibernate project, can I define a generic method in dao class like this:</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> save<span style="color: #009900;">&#40;</span>T entity<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
em.<span style="color: #006633;">persist</span><span style="color: #009900;">&#40;</span>entity<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>and then call this method in managed beans, pass in different entities?<br /> I would like to avoid having multiple save methods in dao, one for each entity class.</p><p>Many Thanks.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-123091"><div id="dsq-comment-header-123091" class="dsq-comment-header"> <cite id="dsq-cite-123091"> <span id="dsq-author-user-123091">Sina</span> </cite></div><div id="dsq-comment-body-123091" class="dsq-comment-body"><div id="dsq-comment-message-123091" class="dsq-comment-message"><p>I have a ManyToMany relation (Role &#8211; Activity &#8211; RoleActivity).<br /> In Role Entity I have added @Cascade({CascadeType.DELETE_ORPHAN })<br /> But while deleting a role I have this error:<br /> java.sql.SQLIntegrityConstraintViolationException: ORA-02292: integrity constraint (USR_SPS.FG_RL_ID) violated &#8211; child record found<br /> It seems hibernate annotation doesnt work fine</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/hibernate/hibernate-cascade-example-save-update-delete-and-delete-orphan/' rel='external nofollow' class='url'>Hibernate &#8211; Cascade example (save, update, delete and delete-orphan)</a></p></li></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-76659"><div id="dsq-comment-header-76659" class="dsq-comment-header"> <cite id="dsq-cite-76659"> <span id="dsq-author-user-76659">Alex</span> </cite></div><div id="dsq-comment-body-76659" class="dsq-comment-body"><div id="dsq-comment-message-76659" class="dsq-comment-message"><p>I am using JPA2 and hibernate 3.6. Until now I was able to implement everything I wanted using only JPA-annotations.<br /> I exclusively use JPA-Annotations and EntityManager. And there&#8217;s absolutely nothing wrong (except for and probably atomikos related issue, which is likely to be a configuration fault).</p><p>I think the main mistake  is mixing up hibernate and JPA. At design time you should make a decision which one you are going to use and then you have to stick to it. If you don&#8217;t you&#8217;re using bad design.</p><p>In my opinion it would be less confusion for beginners, if you point this out. This topic suggests Hibernate has a generel problem with CascadeType or maybe other JPA-annotations.</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://questionlounge.com/confusion-between-jpa-and-hibernate-cascading/' rel='external nofollow' class='url'>Confusion between JPA and Hibernate cascading - Question Lounge</a></p></li></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-16857"><div id="dsq-comment-header-16857" class="dsq-comment-header"> <cite id="dsq-cite-16857"> http://marybelarcher.blogspot.com/ <span id="dsq-author-user-16857">marcher</span> </cite></div><div id="dsq-comment-body-16857" class="dsq-comment-body"><div id="dsq-comment-message-16857" class="dsq-comment-message"><p>I cannot thank you enough! You saved me from spending many more hours digging around and &#8220;experimenting&#8221; to solve foreign key constraint issues. :&#8217;) I have a comment though: for the Hibernate CascadeType to &#8220;kick in&#8221; I still needed to specify the JPA one in my entity. Per Hibernate&#8217;s documentation on cascading ( <a href="http://docs.jboss.org/hibernate/stable/annotations/reference/en/html/entity.html#entity-hibspec-cascade" rel="nofollow">http://docs.jboss.org/hibernate/stable/annotations/reference/en/html/entity.html#entity-hibspec-cascade</a> ) this is recommended, but in my case it seems to be actually required :|</p><p>Anyway, thanks a lot, again :)</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-16894"><div id="dsq-comment-header-16894" class="dsq-comment-header"> <cite id="dsq-cite-16894"> http://www.mkyong.com <span id="dsq-author-user-16894">mkyong</span> </cite></div><div id="dsq-comment-body-16894" class="dsq-comment-body"><div id="dsq-comment-message-16894" class="dsq-comment-message"><p>You&#8217;re welcome, thanks for sharing your experience as well. :)</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-138007"><div id="dsq-comment-header-138007" class="dsq-comment-header"> <cite id="dsq-cite-138007"> <span id="dsq-author-user-138007">vijay</span> </cite></div><div id="dsq-comment-body-138007" class="dsq-comment-body"><div id="dsq-comment-message-138007" class="dsq-comment-message"><p>Hi Yong,</p><p>I am new to hibernate , fist Thanks for this post.<br /> I am doing the debug this code and i have requirement i would like to introduce the<br /> delete functionality with annotation ie once we delete the parent its need to be delete  child records ie i need to introduce the ondelete cascade feature.<br /> Could you please help how to introduce this feature.</p></div></div></li><li class="comment even depth-3" id="dsq-comment-138008"><div id="dsq-comment-header-138008" class="dsq-comment-header"> <cite id="dsq-cite-138008"> <span id="dsq-author-user-138008">vijay</span> </cite></div><div id="dsq-comment-body-138008" class="dsq-comment-body"><div id="dsq-comment-message-138008" class="dsq-comment-message"><p>Hi Yong,</p><p>I am new to hibernate , fist Thanks for this post.<br /> I am doing the debug this code and i have requirement i would like to introduce the<br /> delete functionality with annotation i.e once we delete the parent its need to be delete  child records ie i need to introduce the ondelete cascade feature.</p><p>Could you please help how to introduce this feature.</p></div></div></li></ul></li><li class="comment odd alt depth-2" id="dsq-comment-30591"><div id="dsq-comment-header-30591" class="dsq-comment-header"> <cite id="dsq-cite-30591"> <span id="dsq-author-user-30591">Dhiraj</span> </cite></div><div id="dsq-comment-body-30591" class="dsq-comment-body"><div id="dsq-comment-message-30591" class="dsq-comment-message"><p>Thanks for this post. I had to debug all the way down to figure this insconsistency.</p></div></div></li><li class="comment even depth-2" id="dsq-comment-132448"><div id="dsq-comment-header-132448" class="dsq-comment-header"> <cite id="dsq-cite-132448"> <span id="dsq-author-user-132448"><a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="580b313539343136311830372c35393134763b3735">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script></span> </cite></div><div id="dsq-comment-body-132448" class="dsq-comment-body"><div id="dsq-comment-message-132448" class="dsq-comment-message"><p>You both are godsends.  Adding the &#8220;optional&#8221; JPA annotation from the docs fixed my cascade. I wasted time &#8220;experimenting&#8221; with the foreign keys and annotations for my objects and tables.</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-12493"><div id="dsq-comment-header-12493" class="dsq-comment-header"> <cite id="dsq-cite-12493"> <span id="dsq-author-user-12493">Neal</span> </cite></div><div id="dsq-comment-body-12493" class="dsq-comment-body"><div id="dsq-comment-message-12493" class="dsq-comment-message"><p>Yep ran into this issue headfirst&#8230;and helped me solve.  Thanks a bunch.<br /> But now my code is tied to Hibernate &#8211; which goes against JPA principles:)<br /> So is there a newer version of JPA that fixes this issue?<br /> I couldn&#8217;t find this problem mentioned anywhere else.<br /> Does Oracle/Sun know about this issue to fix in their next version?<br /> would you know?</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-12529"><div id="dsq-comment-header-12529" class="dsq-comment-header"> <cite id="dsq-cite-12529"> http://www.mkyong.com <span id="dsq-author-user-12529">mkyong</span> </cite></div><div id="dsq-comment-body-12529" class="dsq-comment-body"><div id="dsq-comment-message-12529" class="dsq-comment-message"><p>I just found this conflict few months ago, may be you can ask this question in <a href="https://forum.hibernate.org/" rel="nofollow">Hibernate forum</a></p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/hibernate-tutorials/' rel='external nofollow' class='url'>Hibernate Tutorials | Tutorials</a></p></li></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-6581"><div id="dsq-comment-header-6581" class="dsq-comment-header"> <cite id="dsq-cite-6581"> <span id="dsq-author-user-6581">Edmund Leng</span> </cite></div><div id="dsq-comment-body-6581" class="dsq-comment-body"><div id="dsq-comment-message-6581" class="dsq-comment-message"><p>I thought you should be using EntityManager which is created to solve problems of such nature.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-6585"><div id="dsq-comment-header-6585" class="dsq-comment-header"> <cite id="dsq-cite-6585"> http://www.mkyong.com <span id="dsq-author-user-6585">mkyong</span> </cite></div><div id="dsq-comment-body-6585" class="dsq-comment-body"><div id="dsq-comment-message-6585" class="dsq-comment-message"><p>yes for this info, but some projects may not want to couple the JPA engine.</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-5827"><div id="dsq-comment-header-5827" class="dsq-comment-header"> <cite id="dsq-cite-5827"> <span id="dsq-author-user-5827">Maarten</span> </cite></div><div id="dsq-comment-body-5827" class="dsq-comment-body"><div id="dsq-comment-message-5827" class="dsq-comment-message"><p>CascadeType.PERSIST will work when using session.persist() instead of session.save()</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-100443"><div id="dsq-comment-header-100443" class="dsq-comment-header"> <cite id="dsq-cite-100443"> <span id="dsq-author-user-100443">roshi</span> </cite></div><div id="dsq-comment-body-100443" class="dsq-comment-body"><div id="dsq-comment-message-100443" class="dsq-comment-message"><p>Thanks for that tip saved the mixing up of hibernate annotations with jpa</p></div></div></li></ul></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/hibernate/cascade-jpa-hibernate-annotation-common-mistake/';var disqus_identifier='3251 http://www.mkyong.com/?p=3251';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Cascade &#8211; JPA &#038; Hibernate annotation common mistake";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=3251';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Hibernate Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/hibernate-tutorials\/",'date':"05\/02\/2010 09:54 PM",'excerpt':"[...] Cascade &#8211; JPA &amp; Hibernate annotation common mistake A super easy common annotation mistake made by beginner or experienced &hellip;",'type':"pingback"},{'author_name':"Confusion between JPA and Hibernate cascading - Question Lounge",'author_url':"http:\/\/questionlounge.com\/confusion-between-jpa-and-hibernate-cascading\/",'date':"12\/28\/2010 05:24 AM",'excerpt':"[...] options that are not compatible with Hibernate&#8217;s CascadeType (see this link for more info http:\/\/www.mkyong.com\/hibernate\/cascade-jpa-hibernate-annotation-common-mistake\/).I was hoping to get &hellip;",'type':"pingback"},{'author_name':"Hibernate &#8211; Cascade example (save, update, delete and delete-orphan)",'author_url':"http:\/\/www.mkyong.com\/hibernate\/hibernate-cascade-example-save-update-delete-and-delete-orphan\/",'date':"08\/30\/2012 12:31 PM",'excerpt':"[...] Further study &#8211; Cascade – JPA &amp; Hibernate annotation common mistake. [...] ",'type':"pingback"},{'author_name':"Hibernate or JPA annotations to use | BlogoSfera",'author_url':"http:\/\/www.blogosfera.co.uk\/2013\/04\/hibernate-or-jpa-annotations-to-use\/",'date':"04\/17\/2013 02:02 PM",'excerpt':"[...] link explains one such issue [...] ",'type':"pingback"},{'author_name':"Hibernate and JPA Annotations | On Java Development",'author_url':"http:\/\/onjavadev.com\/?p=35",'date':"01\/13\/2014 08:46 AM",'excerpt':"[&#8230;] so obfuscates the design. Was the project started with JPA or not? What was the original intent? This post &hellip;",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/hibernate\/cascade-jpa-hibernate-annotation-common-mistake\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="3251" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>